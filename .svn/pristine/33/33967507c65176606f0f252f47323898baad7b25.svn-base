using System;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Text;
using System.Security.Cryptography;
using System.IO;
using Telerik.Web.UI;
using System.ComponentModel;
using System.Collections.Generic;

namespace SMHR
{
    // ----------------------------------------------------------------------------------------
    // Author:                    Dhanush InfoTech Pvt Ltd
    // Company:                   Dhanush InfoTech Pvt Ltd
    // Assembly version:          
    // Date:                      7/22/2010
    // Time:                      16:29
    // Project Filename:          
    // Project Item Name:         BLL
    // Project Item Filename:     BLL.cs
    // Project Item Kind:         Code
    // Class FullName:            SMHR.BLL
    // Class Name:                BLL
    // Class Kind Description:    Class
    // Purpose:                   Business Logic Layer
    // ----------------------------------------------------------------------------------------
    public partial class BLL
    {
        public static DateTime GetDateTimefromDDMMYYYY(string date)
        {
            DateTime dt = new DateTime();
            try
            {
                dt = DateTime.ParseExact(date, "dd/MM/yyyy", null);
            }
            catch (Exception ex)
            {
                dt = Convert.ToDateTime(date);
            }
            return dt;
        }

        public static bool setemployeelogin(int empid, string password)
        {
            if (empid > 0 && password != string.Empty)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EMP_SEND_MAIL @EMP_ID=" + empid + ",  @USR_PWD = '" + password + "'"))
                    return true;
                else
                    return false;
            }
            else
                return false;
        }

        #region EmpDetailsConfirmApproval
        public static DataTable GetEmpDtlsCnfmAprvlData(int mode)
        {
            DataTable dt = new DataTable();
            try
            {
                if (mode != 0)
                    dt = ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_STATUS @MODE = '" + mode.ToString() + "'");
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dt;
        }

        public static bool SetEmpDtlsCnfmAprvlData(int mode, int mdfyBy, string ids)
        {
            bool sts = false;
            try
            {
                if (mode != 0)
                {
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_STATUS @MODE = '" + mode.ToString() + "' ,@MDFD_BY = " + mdfyBy.ToString() + ", @IDS = '" + ids + "'"))
                        sts = true;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return sts;
        }
        #endregion

        #region EmpPayElementsApproval
        public static DataTable GetEmpPayElmntsData(int mode)
        {
            DataTable dt = new DataTable();
            try
            {
                if (mode > -1)
                    dt = ExecuteQuery("EXEC USP_SMHR_EMP_PAY_ELEMENT_STATUS @MODE = " + mode.ToString());
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dt;
        }

        public static bool SetEmpPayElmntsData(int mode, string ids, int ModifiedBy)
        {
            bool sts = false;
            try
            {
                if ((ids != string.Empty) && (mode == 4 || mode == 5))
                {
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_PAY_ELEMENT_STATUS @MODE = " + mode.ToString() + ", @IDS = '" + ids + "',@ModifiedBy = '" + ModifiedBy + "'"))
                        sts = true;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return sts;
        }
        #endregion

        #region MedicalFamilyClaims
        public static DataTable GetFamilyDataMedical(int empID)
        {
            try
            {
                if (empID > 0)
                    return ExecuteQuery("EXEC USP_SMHR_MEDICALBENFIT @OPERATION = 'GET_MED_FAMILY_DATA', @EMP_ID = '" + empID.ToString() + "'");
                else
                    return new DataTable();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable GetMedicalBenefitData(int empID, int gradeID, int prdID, int currID, decimal clmAmnt, decimal balAmnt)
        {
            try
            {
                if (empID > 0 && gradeID > 0 && prdID > 0 && currID == 0 && clmAmnt == 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'GET_MB_VALUES', @EMPID = '" + empID.ToString()
                                                        + "', @SCALE_ID = '" + gradeID.ToString()
                                                        + "', @PRD_ID = '" + prdID.ToString()
                                                        + "', @TO_CURR = NULL, @CLMD_AMNT = NULL, @BAL_AMNT = 0");
                else if (empID > 0 && gradeID > 0 && prdID > 0 && currID > 0 && clmAmnt == 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'GET_MB_VALUES', @EMPID = '" + empID.ToString()
                                                        + "', @SCALE_ID = '" + gradeID.ToString()
                                                        + "', @PRD_ID = '" + prdID.ToString()
                                                        + "', @TO_CURR = '" + currID.ToString()
                                                        + "', @CLMD_AMNT = NULL"
                                                        + " , @BAL_AMNT = '" + balAmnt.ToString() + "'");
                else if (empID > 0 && gradeID > 0 && prdID > 0 && currID > 0 && clmAmnt > 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'GET_MB_VALUES', @EMPID = '" + empID.ToString()
                                                        + "', @SCALE_ID = '" + gradeID.ToString()
                                                        + "', @PRD_ID = '" + prdID.ToString()
                                                        + "', @TO_CURR = '" + currID.ToString()
                                                        + "', @CLMD_AMNT = '" + clmAmnt.ToString()
                                                        + "', @BAL_AMNT = '" + balAmnt.ToString() + "'");
                else
                    return new DataTable();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region EducationalFamilyClaims
        public static DataTable GetFamilyDataEducational(int empID, int prdID)
        {
            try
            {
                if (empID > 0)
                    return ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'GET_EDU_FAMILY_DATA', @EDU_EMP_ID = '" + empID.ToString() +
                                            "', @EDU_PERIOD_ID = '" + prdID.ToString() + "'");
                else
                    return new DataTable();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public static DataTable ConvMoneyEducational(int mode, string currID, string mny)
        {
            try
            {
                if (mode > -1)
                    return ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'EDU_CURR_CONV', @Mode = '" + mode + "', @TO_CURR = '" + currID +
                                                            "', @BAL_AMNT = '" + mny + "'");
                else
                    return new DataTable();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region PayElementsNullify
        public static DataTable GetEmpPayItemsNullify(int mode, string ID)
        {
            DataTable dt = new DataTable();
            try
            {
                if (mode == 1)  //Load Transaction IDs using Period Detail ID
                    dt = ExecuteQuery("EXEC USP_SMHR_REVERSE_PAY_ITEM @OPERATION = 'GET_TRAN_BY_PRD_DTL', @PRD_DTL_ID = '" + ID + "'");
                else if (mode == 2)  //Load Employees using Transaction ID
                    dt = ExecuteQuery("EXEC USP_SMHR_REVERSE_PAY_ITEM @OPERATION = 'GET_EMP_BY_TRAN_ID', @PAYTRAN_ID = '" + ID + "'");
                else    //if (mode == 3)  //Load Grid Data
                    dt = ExecuteQuery("EXEC USP_SMHR_REVERSE_PAY_ITEM @OPERATION = 'GET_EMP_PTMS_BY_EMP_ID', @PAYTRAN_ID = '" + mode.ToString() + "', @EMP_ID = '" + ID + "'");
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dt;
        }
        public static bool SaveEmpPayItemsNullify(string salDtlsID, string nullVal)
        {
            bool status = false;
            try
            {
                if (nullVal != "-1")
                {
                    if (ExecuteNonQuery("EXEC USP_SMHR_REVERSE_PAY_ITEM @OPERATION = 'UPDATE_EMP_SALDTLS_TEMP', @EMPSALDTLS_NULLIFY_VALUE = '" + nullVal +
                                        "', @EMPSALDTLS_ID = '" + salDtlsID + "'"))
                        status = true;
                }
                else
                {
                    if (ExecuteNonQuery("EXEC USP_SMHR_REVERSE_PAY_ITEM @OPERATION = 'UPDATE_EMP_SALDTLS_TEMP', @EMPSALDTLS_NULLIFY_VALUE = NULL, @EMPSALDTLS_ID = '" + salDtlsID + "'"))
                        status = true;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return status;
        }
        #endregion

        #region PaySlipBefore
        public static DataTable get_Employeeorgbusiness(int emp_id)
        {
            return ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEEORG @EMP_ID=" + emp_id + "");
        }
        public static DataTable USP_SMHR_EMP_BEFORE_PROVISION_TEMP(int emp_id)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_BEFORE_PROVISION_TEMP @EMP_ID=" + emp_id + "");
        }
        public static DataTable USP_SMHR_PERIODDETAILS_emp(string GetDateData)
        {
            return ExecuteQuery("EXEC USP_SMHR_PERIODDETAILS @Operation='" + GetDateData + "'");
        }
        #endregion

        #region EmCountBeforePayroll
        public static DataTable CheckEmpUpdateCnfmedCount(string salStrIds)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @OPERATION = 'CHK', @IDs='" + salStrIds + "'");
        }
        #endregion

        public static DataTable Check(string id)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @OPERATION = 'DEFAULTCHECK',@EMPBNKDTLS_EMPID='" + id + "'");
        }

        #region ENCRYPTING_TEXT

        private static byte[] byKey = new byte[20];
        private static byte[] dv = new byte[] { 0x12, 0x34, 0x56, 120, 0x90, 0xab, 0xcd, 0xef };

        private static string Decrypt(string strText, string strEncrypt)
        {
            //string strReplace = strText.Replace(" ","+");
            byte[] rgbKey = new byte[20];
            byte[] rgbIV = new byte[] { 0x12, 0x34, 0x56, 120, 0x90, 0xab, 0xcd, 0xef };
            rgbKey = Encoding.UTF8.GetBytes(strEncrypt.Substring(0, 8));
            DESCryptoServiceProvider provider = new DESCryptoServiceProvider();
            byte[] buffer = null;
            buffer = Convert.FromBase64String(strText);
            MemoryStream stream2 = new MemoryStream();
            CryptoStream stream = new CryptoStream(stream2, provider.CreateDecryptor(rgbKey, rgbIV), CryptoStreamMode.Write);
            stream.Write(buffer, 0, buffer.Length);
            stream.FlushFinalBlock();
            return Encoding.UTF8.GetString(stream2.ToArray());
        }

        private static string decryptPassword(string str)
        {
            return Decrypt(str, "&%#@?,:*");
        }

        private static string Encrypt(string strText, string strEncrypt)
        {
            //string strReplace = strText.Replace("+"," ");
            byte[] rgbKey = new byte[20];
            byte[] rgbIV = new byte[] { 0x12, 0x34, 0x56, 120, 0x90, 0xab, 0xcd, 0xef };

            rgbKey = Encoding.UTF8.GetBytes(strEncrypt.Substring(0, 8));
            DESCryptoServiceProvider provider = new DESCryptoServiceProvider();
            byte[] bytes = Encoding.UTF8.GetBytes(strText);
            MemoryStream stream2 = new MemoryStream();
            CryptoStream stream = new CryptoStream(stream2, provider.CreateEncryptor(rgbKey, rgbIV), CryptoStreamMode.Write);
            stream.Write(bytes, 0, bytes.Length);
            stream.FlushFinalBlock();
            return Convert.ToBase64String(stream2.ToArray());
        }

        private static string encryptPassword(string strText)
        {
            return Encrypt(strText, "&%#@?,:*");
        }

        public static string PasswordDecrypt(string strText)
        {
            string str = decryptPassword(strText);
            string str3 = str.Substring(0, (int)Math.Round((double)(((double)str.Length) / 2.0)));
            string str5 = str.Substring((int)Math.Round((double)(((double)str.Length) / 2.0)));
            string str4 = decryptPassword(str3);
            string str6 = decryptPassword(str5);
            return (str4 + str6);
        }

        public static string PasswordEncrypt(string strText)
        {
            string str8 = strText;
            string str3 = str8.Substring(0, (int)Math.Round((double)(((double)str8.Length) / 2.0)));
            string str5 = str8.Substring((int)Math.Round((double)(((double)str8.Length) / 2.0)));
            string str4 = encryptPassword(str3);
            string str6 = encryptPassword(str5);
            string str7 = str4 + str6;
            return encryptPassword(str7);
        }

        #endregion

        #region SMHR_GENERAL_METHODS

        public static void ShowMessage(Control ctrl, string Msg)
        {
            ScriptManager.RegisterStartupScript(ctrl, ctrl.GetType(), Guid.NewGuid().ToString(), "alert('" + Msg + "');", true);
        }

        public static void ShowConfirmMessage(Control ctrl, string Msg)
        {
            ScriptManager.RegisterStartupScript(ctrl, ctrl.GetType(), Guid.NewGuid().ToString(), "confirm('" + Msg + "');", true);
        }

        public static string ReplaceQuote(string str)
        {
            return str.Replace("'", "''");
        }

        public static void SetCulture_Theme(Page page, HttpRequest request)
        {
            if (((System.Web.UI.TemplateControl)(page)).AppRelativeVirtualPath.ToUpper() != "~/LOGIN.ASPX")
            {
                if (page.Session["USER_ID"] == null)
                {
                    page.Response.Redirect("~/LOGIN.ASPX", false);
                    return;
                }
                if (page.Session["ORG_ID"] == null)
                {
                    page.Response.Redirect("~/LOGIN.ASPX", false);
                    return;
                }
            }
        }

        public static DataTable ExecuteQuery(string Query)
        {
            return Dal.ExecuteQuery(Query);
        }

        //public static DataTable ExecuteQuery_1(string Query)
        //{
        //    return Dal.ExecuteQuery_1(Query);
        //}

        public static bool ExecuteNonQuery(string Query)
        {
            return Dal.ExecuteNonQuery(Query);
        }

        public static int ExecuteNonQuery(string spName, SqlParameter[] sqlParameters)
        {
            return Dal.ExecuteNonQuery(spName, sqlParameters);
        }

        public static string DateFormat(string UserId)
        {
            return Convert.ToString(ExecuteQuery("EXEC USP_SMHR_SECURITY @Operation ='DATE', @USERTYPE='" + UserId + "'").Rows[0]["DATEFORMAT"]);
        }

        public static void ChangeDateFormat(string UserId, params Telerik.Web.UI.RadDatePicker[] controls)
        {
            string TFormat = DateFormat(UserId);
            foreach (Telerik.Web.UI.RadDatePicker item in controls)
            {
                item.DateInput.DateFormat = TFormat;
            }
        }

        public static void gridDateFormat(string UserId, Telerik.Web.UI.RadGrid Grid, params string[] Columns)
        {
            foreach (string item in Columns)
            {
                ((GridBoundColumn)Grid.MasterTableView.GetColumn(item)).DataFormatString = "{0:" + BLL.DateFormat(UserId) + "}";
            }
        }

        public static void Error_Log(string ID, string Method_Name, string Message, string fname, string Trace_Name, DateTime Dt)
        {
            try
            {
                Dal.ExecuteNonQuery("INSERT INTO [ERROR_LOG] ([LOG_USER_ID],[LOG_METHOD_NAME],[LOG_MESSAGE],[LOG_FORM_ERROR_DESC],[LOG_TRACE_DESC],[LOG_DATE]) " +
                                    " VALUES('" + ID + "','" + Method_Name + "','" + Message + "','" + fname + "','" + Trace_Name + "','" + Dt.ToString("MM/dd/yyyy") + "')");
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static void UnAuthorized_Log(smhr_UNAUTHORIZED _obj_UnAuthorized)
        {
            try
            {
                ExecuteNonQuery("EXEC USP_SMHR_UNAUTHORIZED @UNAUTHORIZED_USERID = " + _obj_UnAuthorized.UNAUTHORIZED_USERID + "" +
                                ",@UNAUTHORIZED_MODULEID = " + _obj_UnAuthorized.UNAUTHORIZED_MODULEID + "" +
                                ",@UNAUTHORIZED_FORMID=" + _obj_UnAuthorized.UNAUTHORIZED_FORMID + "" +
                                ",@UNAUTHORIZED_ACCESSDATE ='" + _obj_UnAuthorized.UNAUTHORIZED_ACCESSDATE.ToString("MM/dd/yyyy") + "'");
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable get_Business_Units(SMHR_LOGININFO _obj_LoginInfo)
        {
            return Dal.ExecuteQuery("EXEC USP_SMHR_ORG_BUSINESSUNIT @ORGANISATION_ID = '" + _obj_LoginInfo.ORGANISATION_ID + "'" +
                                    ",@USER_ID = '" + _obj_LoginInfo.LOGIN_ID + "'");
        }

        #endregion

        #region SMHR_LOANTRANS

        /// <summary>
        ///  Method to Get Employee Loan Transaction Details
        /// </summary>
        /// <param name="CATEGORY_ID"></param>
        /// <returns>Datatable with Loan Transaction Information</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static DataTable get_EmpLoanTran(SMHR_LOANTRANS _obj_smhr_loanTrans)
        {
            if (_obj_smhr_loanTrans.OPERATION == operation.Select)
            {
                if (_obj_smhr_loanTrans.LOANTRANS_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select', @LOANTRAN_TYPE = '" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select',@LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
                }
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select1', @LOANTRAN_TYPE = '" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "',@EMP_LOGIN_ID='" + _obj_smhr_loanTrans.LOGIN_ID + "'");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Validate',@LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Select_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select_Self', @LOANTRAN_TYPE = '" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "',@LOANTRANS_EMP_ID='" + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + "'");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Check)
            {
                if (_obj_smhr_loanTrans.LOANTRANS_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Check', @LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_loanTrans.LOANTRANS_LOANNO) + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Check', @LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_loanTrans.LOANTRANS_LOANNO) + "', @LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "'");
                }
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.EMPTY_R)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'EMPTY_R',@LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + ",@BUSINESSUNIT_ID = " + _obj_smhr_loanTrans.BUSINESSUNIT_ID + "");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = '" + _obj_smhr_loanTrans.OPERATION + "'" +
                                        ", @LOANTRAN_LASTMDFBY =" + _obj_smhr_loanTrans.LOANTRAN_LASTMDFBY +
                                        ", @LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @ReferenceId ='" + Convert.ToString(_obj_smhr_loanTrans.ReferenceId) + "'" +
                                        ", @LOANTRANS_ID = " + _obj_smhr_loanTrans.LOANTRANS_ID);
            }
            else
            {
                if (_obj_smhr_loanTrans.LOANTRANS_EMP_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Empty', @ORGANISATION_ID = '" + _obj_smhr_loanTrans.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Empty',@LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + ",@BUSINESSUNIT_ID = " + _obj_smhr_loanTrans.BUSINESSUNIT_ID + "");
                }
            }
        }

        public static DataTable Calculate_EMI(SMHR_LOANTRANS _obj_smhr_loanTrans)
        {
            //DataTable dtval = new DataTable();
            return ExecuteQuery("EXEC USP_SMHR_EMI_CAL @LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + "" +
                                ",@LOANTRANS_LOANNO = '" + _obj_smhr_loanTrans.LOANTRANS_LOANNO + "'" +
                                ",@LOANTRANS_LOANTYPE_ID=" + _obj_smhr_loanTrans.LOANTRANS_LOANTYPE_ID + "" +
                                ",@LOANTRANS_ISSUEDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRANS_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRANS_LOANAMOUNT =" + _obj_smhr_loanTrans.LOANTRANS_LOANAMOUNT + "" +
                                ",@LOANTRANS_LOANINSTALL=" + _obj_smhr_loanTrans.LOANTRANS_LOANINSTALL + "" +
                                ",@LOANTRANS_INTERESTRATE=" + _obj_smhr_loanTrans.LOANTRANS_INTERESTAMT + "" +
                                ",@LOANTRANS_EFFDATE=" + (_obj_smhr_loanTrans.LOANTRANS_EFFDATE == null ? "null" : "'" + _obj_smhr_loanTrans.LOANTRANS_EFFDATE + "'") + "" +
                                ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_loanTrans.LOANTRAN_CHEQUENUM + "'" +
                                ",@LOANTRAN_LOANPURPOSE = '" + _obj_smhr_loanTrans.LOANTRAN_LOANPURPOSE + "'" +
                                ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_loanTrans.LOANTRAN_CREATEDBY + "'" +
                                ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_loanTrans.LOANTRAN_LASTMDFBY + "'" +
                                ",@LOANTRAN_TYPE ='" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "'" +
                                ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@CONFIRM  ='" + _obj_smhr_loanTrans.CONFIRM + "'" +
                                ",@LOANTRAN_PAYMODE = '" + _obj_smhr_loanTrans.LOANTRAN_PAYMODE + "'" +
                                ",@LOANTRAN_STATUS  =" + _obj_smhr_loanTrans.LOANTRAN_STATUS + "" +
                                ",@LOANTRANS_ID='" + _obj_smhr_loanTrans.LOANTRANS_ID + "'");
            //return dtval;
        }

        public static DataTable Loan_Repayment(SMHR_LOANTRANS _obj_smhr_loanTrans, SMHR_LOANTRANSDTL _obj_smhr_loanTrandtl, SMHR_LOANRPT _obj_smhr_loanrpt)
        {
            DataTable dtval = new DataTable();
            dtval = ExecuteQuery("EXEC USP_SMHR_LOANREPAYMENTPROCESS @LOANTRAN_EMPID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + "" +
                                 ",@LOANTRANDTL_LOANTRAN_ID=" + _obj_smhr_loanTrandtl.LOANTRADTL_LOANTRAN_ID + "" +
                                 ",@LOANTRANDTL_LOANNO = '" + _obj_smhr_loanTrandtl.LOANTRANDTL_LOANNO + "'" +
                                 ",@PRINCIPAL_BALANCE = " + _obj_smhr_loanTrandtl.LOANTRANDTL_CURRENTBALANCEAMOUNT + "" +
                                 ",@LOAN_BALANCE = " + _obj_smhr_loanTrandtl.LOANTRANDTL_CURRENTLOANAMOUNT + "" +
                                 ",@LOANRPT_BANKNAME ='" + _obj_smhr_loanrpt.LOANRPT_BANKNAME + "'" +
                                 ",@LOANRPT_BRANCHNAME ='" + _obj_smhr_loanrpt.LOANRPT_BRANCHNAME + "'" +
                                 ",@LOANRPT_REPAYMENTAMOUNT =" + _obj_smhr_loanrpt.LOANRPT_REPAYMENTAMOUNT + "" +
                                 ",@LOANRPT_CHEQUENO = '" + _obj_smhr_loanrpt.LOANRPT_CHEQUENO + "'" +
                                 ",@LOANRPT_DATEOFTRANS ='" + _obj_smhr_loanrpt.LOANRPT_DATEOFTRANS + "'" +
                                 ",@LOANRPT_INSTALLMENTS=" + _obj_smhr_loanrpt.LOANRPT_INSTALLMENTS + "" +
                                 ",@LOANRPT_INTERESTRATE=" + _obj_smhr_loanrpt.LOANRPT_INTERESTRATE + "" +
                                 ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_loanTrans.LOANTRAN_LASTMDFBY + "'" +
                                 ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'");
            return dtval;
        }

        /// <summary>
        ///  Method to Insert and Update Employee Loan Transaction Details
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static bool set_EmpLoanTrans(SMHR_LOANTRANS _obj_smhr_LoanTrans)
        {
            bool status = false;
            switch (_obj_smhr_LoanTrans.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMI_CAL  @LOANTRANS_EMP_ID = " + _obj_smhr_LoanTrans.LOANTRANS_EMP_ID + "" +
                                        ",@LOANTRANS_LOANNO = '" + _obj_smhr_LoanTrans.LOANTRANS_LOANNO + "'" +
                                        ",@LOANTRANS_LOANTYPE_ID=" + _obj_smhr_LoanTrans.LOANTRANS_LOANTYPE_ID + "" +
                                        ",@LOANTRANS_ISSUEDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRANS_LOANAMOUNT =" + _obj_smhr_LoanTrans.LOANTRANS_LOANAMOUNT + "" +
                                        ",@LOANTRANS_LOANINSTALL=" + _obj_smhr_LoanTrans.LOANTRANS_LOANINSTALL + "" +
                                        ",@LOANTRANS_INTERESTAMT=" + _obj_smhr_LoanTrans.LOANTRANS_INTERESTAMT + "" +
                                        ",@LOANTRANS_EFFDATE='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_EFFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LOANPURPOSE = '" + _obj_smhr_LoanTrans.LOANTRAN_LOANPURPOSE + "'" +
                                        ",@LOANTRAN_PAYMODE = '" + _obj_smhr_LoanTrans.LOANTRAN_PAYMODE + "'" +
                                        ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_LoanTrans.LOANTRAN_CHEQUENUM + "'" +
                                        ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_LoanTrans.LOANTRAN_CREATEDBY + "'" +
                                        ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY + "'" +
                                        ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_smhr_LoanTrans.ORGANISATION_ID + "'" +
                                        ",@LOANTRAN_TYPE = '" + _obj_smhr_LoanTrans.LOANTRAN_TYPE + "'" +
                                        ",@CONFIRM  ='" + _obj_smhr_LoanTrans.CONFIRM + "'" +
                                        ",@LOANTRAN_STATUS  =" + _obj_smhr_LoanTrans.LOANTRAN_STATUS + "" +
                                        ",@LOAN_NAME = '" + _obj_smhr_LoanTrans.LOANNAME + "'" +
                                        ",@LOANTRANS_INTERESTRATE = '" + _obj_smhr_LoanTrans.LOANTRANS_INTERESTRATE + "'" +
                                        ",@LOANTRANS_ID='" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LOANTRANS @Operation = '" + _obj_smhr_LoanTrans.OPERATION + "'" +
                                        ",@LOANTRANS_EMP_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_EMP_ID) + "'" +
                                        ",@LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_LoanTrans.LOANTRANS_LOANNO) + "'" +
                                        ",@LOANTRANS_LOANTYPE_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_LOANTYPE_ID) + "'" +
                                        ",@LOANTRANS_ISSUEDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_ISSUEDATE) + "'" +
                                        ",@LOANTRANS_LOANAMOUNT = '" + Convert.ToDouble(_obj_smhr_LoanTrans.LOANTRANS_LOANAMOUNT) + "'" +
                                        ",@LOANTRANS_LOANINSTALL = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_LOANINSTALL) + "'" +
                                        ",@LOANTRANS_INTERESTAMT = '" + Convert.ToDouble(_obj_smhr_LoanTrans.LOANTRANS_INTERESTAMT) + "'" +
                                        ",@LOANTRANS_EFFDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_EFFDATE) + "'" +
                                        ",@LOANTRAN_LOANPURPOSE = '" + Convert.ToString(_obj_smhr_LoanTrans.LOANTRAN_LOANPURPOSE) + "'" +
                                        ",@LOANTRAN_PAYMODE = '" + _obj_smhr_LoanTrans.LOANTRAN_PAYMODE + "'" +
                                        ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_LoanTrans.LOANTRAN_CHEQUENUM + "'" +
                                        ",@LOANTRANS_INTERESTRATE=" + _obj_smhr_LoanTrans.LOANTRANS_INTERESTRATE + "" +
                                        // ",@LOANTRAN_BALANCELOAN = '" + Convert.ToDouble(_obj_smhr_LoanTrans.LOANTRAN_BALANCELOAN) + "'" +
                                        ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_LoanTrans.LOANTRAN_CREATEDBY + "'" +
                                        ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        //",@LOANTRAN_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.CREATEDDATE) + "'" +
                                        ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY + "'" +
                                        ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_STATUS  =" + _obj_smhr_LoanTrans.LOANTRAN_STATUS + "" +
                                        ",@LOANTRAN_TYPE = '" + _obj_smhr_LoanTrans.LOANTRAN_TYPE + "'" +

                                        // ",@LOANTRAN_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LASTMDFDATE) + "'" +
                                        ",@LOANTRANS_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LOANTRANS @Operation = '" + _obj_smhr_LoanTrans.OPERATION + "'" +
                                        ", @LOANTRANS_LOANISDELETED =" + _obj_smhr_LoanTrans.LOANTRANS_LOANISDELETED +
                                        ", @LOANTRAN_LASTMDFBY =" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY +
                                        ", @LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @LOANTRANS_ID = " + _obj_smhr_LoanTrans.LOANTRANS_ID))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.UpdateSTATUS:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LOANTRANS @Operation = '" + _obj_smhr_LoanTrans.OPERATION + "'" +
                                        ", @LOANTRAN_LASTMDFBY =" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY +
                                        ", @LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @ReferenceId ='" + Convert.ToString(_obj_smhr_LoanTrans.ReferenceId) + "'" +
                                        ", @LOANTRANS_ID = " + _obj_smhr_LoanTrans.LOANTRANS_ID))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        # region SMHR_EMP_WORKSHOPS

        public static DataTable get_workshops(SMHR_EMPWORKSHOPSATTENDED _obj_workshops)
        {
            if (_obj_workshops.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_WORKSHOPSATTENDED] @OPERATION = 'Select',@EMPWRKSHOPS_ORGID = '" + _obj_workshops.EMPWRKSHOPS_ORGID + "' ");
            }
            else if (_obj_workshops.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_WORKSHOPSATTENDED] @OPERATION = 'Check', @EMPWRKSHOPS_NAME = '" + _obj_workshops.EMPWRKSHOPS_NAME + "' ");
            }
            else
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_WORKSHOPSATTENDED] @OPERATION = 'Get', @EMPWRKSHOPS_ID = " + _obj_workshops.EMPWRKSHOPS_ID + " ");
            }
        }

        public static bool set_workshops(SMHR_EMPWORKSHOPSATTENDED _obj_workshops)
        {
            if (_obj_workshops.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery(" EXEC [USP_SMHR_EMP_WORKSHOPSATTENDED] @OPERATION = 'Insert', @EMPWRKSHOPS_ID  = '" + _obj_workshops.EMPWRKSHOPS_ID + "'" +
                                       ", @EMPWRKSHOPS_BUSINESSUNIT = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_BUSINESSUNIT) + "'" +
                                       ", @EMPWRKSHOPS_DIRECTORATEID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_DIRECTORATEID) + "'" +
                                       ", @EMPWRKSHOPS_DEPARTMENTID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_DEPARTMENTID) + "'" +
                                       ", @EMPWRKSHOPS_EMPID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_EMPID) + "'" +
                                       ", @EMPWRKSHOPS_ORGID = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_ORGID) + "'" +
                                       ", @EMPWRKSHOPS_NAME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_NAME) + "'" +
                                       ",@EMPWRKSHOPS_ORGBY = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_ORGBY) + "'" +
                                       ",@EMPWRKSHOPS_SPNOSDBY = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_SPNOSDBY) + "'" +
                                       ", @EMPWRKSHOPS_FROMDATE = '" + Convert.ToDateTime(_obj_workshops.EMPWRKSHOPS_FROMDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPWRKSHOPS_TODATE = '" + Convert.ToDateTime(_obj_workshops.EMPWRKSHOPS_TODATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@EMPWRKSHOPS_OUTCOME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_OUTCOME) + "'" +
                                       ",@EMPWRKSHOPS_PARTCERTDOCNAME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_PARTCERTDOCNAME) + "'" +
                                       ",@EMPWRKSHOPS_PARTCERTDOCUPLOAD = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_PARTCERTDOCUPLOAD) + "'" +
                                       ", @EMPWRKSHOPS_CREATEDBY = '" + _obj_workshops.CREATEDBY + "'" +
                                       ", @EMPWRKSHOPS_CREATEDDATE = '" + _obj_workshops.CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPWRKSHOPS_MODIFIEDBY  = '" + _obj_workshops.LASTMDFBY + "'" +
                                       ", @EMPWRKSHOPS_MODIFIEDDATE = '" + _obj_workshops.LASTMDFDATE.ToString("MM/dd/yyyy") + "' ");
            }
            else if (_obj_workshops.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC [USP_SMHR_EMP_WORKSHOPSATTENDED]  @OPERATION = 'Update', @EMPWRKSHOPS_ID  = '" + _obj_workshops.EMPWRKSHOPS_ID + "'" +
                                       ", @EMPWRKSHOPS_BUSINESSUNIT = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_BUSINESSUNIT) + "'" +
                                       ", @EMPWRKSHOPS_DIRECTORATEID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_DIRECTORATEID) + "'" +
                                       ", @EMPWRKSHOPS_DEPARTMENTID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_DEPARTMENTID) + "'" +
                                       ", @EMPWRKSHOPS_EMPID = '" + Convert.ToInt32(_obj_workshops.EMPWRKSHOPS_EMPID) + "'" +
                                       ", @EMPWRKSHOPS_ORGID = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_ORGID) + "'" +
                                       ", @EMPWRKSHOPS_NAME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_NAME) + "'" +
                                       ",@EMPWRKSHOPS_ORGBY = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_ORGBY) + "'" +
                                       ",@EMPWRKSHOPS_SPNOSDBY = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_SPNOSDBY) + "'" +
                                       ", @EMPWRKSHOPS_FROMDATE = '" + Convert.ToDateTime(_obj_workshops.EMPWRKSHOPS_FROMDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPWRKSHOPS_TODATE = '" + Convert.ToDateTime(_obj_workshops.EMPWRKSHOPS_TODATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@EMPWRKSHOPS_OUTCOME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_OUTCOME) + "'" +
                                       ",@EMPWRKSHOPS_PARTCERTDOCNAME = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_PARTCERTDOCNAME) + "'" +
                                       ",@EMPWRKSHOPS_PARTCERTDOCUPLOAD = '" + Convert.ToString(_obj_workshops.EMPWRKSHOPS_PARTCERTDOCUPLOAD) + "'" +
                                       //", @EMPWRKSHOPS_CREATEDBY = '" + _obj_workshops.CREATEDBY + "'" +
                                       //", @EMPWRKSHOPS_CREATEDDATE = '" + _obj_workshops.CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPWRKSHOPS_MODIFIEDBY  = '" + _obj_workshops.LASTMDFBY + "'" +
                                       ", @EMPWRKSHOPS_MODIFIEDDATE = '" + _obj_workshops.LASTMDFDATE.ToString("MM/dd/yyyy") + "' ");
            }

            return true;
        }

        # endregion

        #region SMHR ORG SPONSORED COURSES

        public static DataTable get_orgspnsdcourses(SMHR_EMPORGSPNSCOURSES _obj_orgsponscourses)
        {
            if (_obj_orgsponscourses.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_ORGSPONSOREDCOURSES] @OPERATION = 'Select', @EMPORGSPNSRCRS_ORGID = '" + _obj_orgsponscourses.EMPORGSPNSRCRS_ORGID + "' ");
            }
            else if (_obj_orgsponscourses.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_ORGSPONSOREDCOURSES] @OPERATION = 'Check', @EMPORGSPNSRCRS_COURSENAME = '" + _obj_orgsponscourses.EMPORGSPNSRCRS_COURSENAME + "' ");
            }
            else
            {
                return ExecuteQuery("EXEC [USP_SMHR_EMP_ORGSPONSOREDCOURSES] @OPERATION = 'Get', @EMPORGSPNSRCRS_ID = " + _obj_orgsponscourses.EMPORGSPNSRCRS_ID + " ");
            }
        }

        public static bool set_orgspnsdcourses(SMHR_EMPORGSPNSCOURSES _obj_orgsponscourses)
        {
            if (_obj_orgsponscourses.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery(" EXEC [USP_SMHR_EMP_ORGSPONSOREDCOURSES] @OPERATION = 'Insert', @EMPORGSPNSRCRS_ID  = '" + _obj_orgsponscourses.EMPORGSPNSRCRS_ID + "'" +
                                       ", @EMPORGSPNSRCRS_BUSINESSUNIT = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_BUSINESSUNIT) + "'" +
                                       ", @EMPORGSPNSRCRS_DIRECTORATEID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_DIRECTORATEID) + "'" +
                                       ", @EMPORGSPNSRCRS_DEPARTMENTID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_DEPARTMENTID) + "'" +
                                       ", @EMPORGSPNSRCRS_EMPID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_EMPID) + "'" +
                                       ", @EMPORGSPNSRCRS_ORGID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_ORGID) + "'" +
                                       ", @EMPORGSPNSRCRS_COURSENAME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_COURSENAME) + "'" +
                                       ", @EMPORGSPNSRCRS_FROMDATE = '" + Convert.ToDateTime(_obj_orgsponscourses.EMPORGSPNSRCRS_FROMDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPORGSPNSRCRS_TODATE = '" + Convert.ToDateTime(_obj_orgsponscourses.EMPORGSPNSRCRS_TODATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@EMPORGSPNSRCRS_OUTCOME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_OUTCOME) + "'" +
                                       ",@EMPORGSPNSRCRS_CERTDOCNAME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_CERTDOCNAME) + "'" +
                                       ",@EMPORGSPNSRCRS_CERTDOCUPLOAD = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_CERTDOCUPLOAD) + "'" +
                                       ", @EMPORGSPNSRCRS_CREATEDBY= '" + _obj_orgsponscourses.CREATEDBY + "'" +
                                       ", @EMPORGSPNSRCRS_CREATEDDATE = '" + _obj_orgsponscourses.CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPORGSPNSRCRS_MODIFIEDBY  = '" + _obj_orgsponscourses.LASTMDFBY + "'" +
                                       ", @EMPORGSPNSRCRS_MODIFIEDDATE = '" + _obj_orgsponscourses.LASTMDFDATE.ToString("MM/dd/yyyy") + "' ");
            }
            else if (_obj_orgsponscourses.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC [USP_SMHR_EMP_ORGSPONSOREDCOURSES]  @OPERATION = 'Update', @EMPORGSPNSRCRS_ID  = '" + _obj_orgsponscourses.EMPORGSPNSRCRS_ID + "'" +
                                       ", @EMPORGSPNSRCRS_BUSINESSUNIT = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_BUSINESSUNIT) + "'" +
                                       ", @EMPORGSPNSRCRS_DIRECTORATEID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_DIRECTORATEID) + "'" +
                                       ", @EMPORGSPNSRCRS_DEPARTMENTID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_DEPARTMENTID) + "'" +
                                       ", @EMPORGSPNSRCRS_EMPID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_EMPID) + "'" +
                                       ", @EMPORGSPNSRCRS_ORGID = '" + Convert.ToInt32(_obj_orgsponscourses.EMPORGSPNSRCRS_ORGID) + "'" +
                                       ", @EMPORGSPNSRCRS_COURSENAME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_COURSENAME) + "'" +
                                       ", @EMPORGSPNSRCRS_FROMDATE = '" + Convert.ToDateTime(_obj_orgsponscourses.EMPORGSPNSRCRS_FROMDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPORGSPNSRCRS_TODATE = '" + Convert.ToDateTime(_obj_orgsponscourses.EMPORGSPNSRCRS_TODATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@EMPORGSPNSRCRS_OUTCOME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_OUTCOME) + "'" +
                                       ",@EMPORGSPNSRCRS_CERTDOCNAME = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_CERTDOCNAME) + "'" +
                                       ",@EMPORGSPNSRCRS_CERTDOCUPLOAD = '" + Convert.ToString(_obj_orgsponscourses.EMPORGSPNSRCRS_CERTDOCUPLOAD) + "'" +
                                       //", @EMPORGSPNSRCRS_CREATEDBY= '" + _obj_orgsponscourses.CREATEDBY + "'" +
                                       //", @EMPORGSPNSRCRS_CREATEDDATE = '" + _obj_orgsponscourses.CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @EMPORGSPNSRCRS_MODIFIEDBY  = '" + _obj_orgsponscourses.LASTMDFBY + "'" +
                                       ", @EMPORGSPNSRCRS_MODIFIEDDATE = '" + _obj_orgsponscourses.LASTMDFDATE.ToString("MM/dd/yyyy") + "' ");
            }

            return true;
        }

        #endregion

        #region SMHR_EMPASSETDOC

        /// <summary>
        ///  Method to Insert and Update Employee Assets and Documents Details
        /// </summary>
        /// <param name="CATEGORY_ID"></param>
        /// <returns>Bool Stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static bool set_EmpAssetDoc(SMHR_EMPASSETDOC _obj_smhr_empAssetDoc)
        {
            bool status = false;
            switch (_obj_smhr_empAssetDoc.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("  EXEC USP_SMHR_EMPASSETDOC @Operation = '" + _obj_smhr_empAssetDoc.OPERATION + "'" +
                                        ", @EMPASSETDOC_BU_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_BU_ID) + "'" +
                                        ", @EMPASSETDOC_EMP_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_EMP_ID) + "'" +
                                        ", @EMPASSETDOC_TYPE = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_TYPE) + "'" +
                                        ", @EMPASSETDOC_SERIAL = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_SERIAL) + "'" +
                                        ", @EMPASSETDOC_DEPT_ID= '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_DEPT_ID) + "'" +
                                        ", @EMPASSETDOC_CODE = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_CODE) + "'" +
                                        ", @EMPASSETDOC_NAME = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_NAME) + "'" +
                                        ", @EMP_ASSETDOC_AD_Type = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_AD_Type) + "'" +
                                        ", @EMP_ASSETDOC_ISSUEDATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.EMP_ASSETDOC_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @EMP_ASSETDOC_RETURNABLE = '" + Convert.ToBoolean(_obj_smhr_empAssetDoc.EMP_ASSETDOC_RETURNABLE) + "'" +
                                        ", @EMP_ASSETDOC_REMARKS = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_REMARKS) + "'" +
                                        ", @EMP_ASSETDOC_UPLOAD = '" + Convert.ToString(_obj_smhr_empAssetDoc.ASSETDOC_UPLOAD) + "'" +
                                        ", @EMP_ASSETDOC_RECBY = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMP_ASSETDOC_RECBY) + "'" +
                                        ", @EMP_ASSETDOC_STATUS = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMP_ASSETDOC_STATUS) + "'" +
                                        ", @EMPASSETDOC_CREATED_BY = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_CREATED_BY) + "'" +
                                        ", @EMPASSETDOC_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.EMPASSETDOC_CREATEDDATE) + "'" +
                                        ", @EMPASSETDOC_LSTMDFBY = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_LSTMDFBY) + "'" +
                                        ", @EMPASSETDOC_LSTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.EMPASSETDOC_LSTMDFDATE) + "'" +

                                        ", @CREATED_BY = '" + Convert.ToString(_obj_smhr_empAssetDoc.CREATEDBY) + "'" +
                                        ", @CREATED_DATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPDOCS_NAME='" + _obj_smhr_empAssetDoc.EMPDOCS_NAME + "'" +
                                        ",@EMPDOCS_UPLOAD='" + _obj_smhr_empAssetDoc.EMPDOCS_UPLOAD + "'" +
                                        ", @EMP_ASSETDOC_RECDATE = " + (_obj_smhr_empAssetDoc.EMP_ASSETDOC_RECDATE == null ? "null" : "'" + _obj_smhr_empAssetDoc.EMP_ASSETDOC_RECDATE + "'") + ",@ORGANISATION_ID='" + _obj_smhr_empAssetDoc.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("  EXEC USP_SMHR_EMPASSETDOC @Operation = '" + _obj_smhr_empAssetDoc.OPERATION + "'" +
                                        ", @EMP_ASSETDOC_AD_Type = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_AD_Type) + "'" +
                                        ", @EMP_ASSETDOC_ISSUEDATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.EMP_ASSETDOC_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @EMP_ASSETDOC_RETURNABLE = '" + Convert.ToBoolean(_obj_smhr_empAssetDoc.EMP_ASSETDOC_RETURNABLE) + "'" +
                                        ", @EMP_ASSETDOC_REMARKS = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_REMARKS) + "'" +
                                        ", @CREATED_BY = '" + Convert.ToString(_obj_smhr_empAssetDoc.CREATEDBY) + "'" +
                                        ", @CREATED_DATE = '" + Convert.ToDateTime(_obj_smhr_empAssetDoc.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPDOCS_NAME='" + _obj_smhr_empAssetDoc.EMPDOCS_NAME + "'" +
                                        ",@EMPDOCS_UPLOAD='" + _obj_smhr_empAssetDoc.EMPDOCS_UPLOAD + "'" +
                                        ", @EMPASSETDOC_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_ID) + "'"+
                                        ", @EMPASSET_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.COMMITTEE_ID) + "'"))  //asset ID
                        status = true;
                    else
                        status = false;
                    break;
                case operation.DelDoc:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = '" + _obj_smhr_empAssetDoc.OPERATION + "'" +
                                        ",@EMPASSETDOC_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_ID) + "'" +
                                        ",@EMPASSETDOC_ORGANISATION_ID='" + _obj_smhr_empAssetDoc.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = '" + _obj_smhr_empAssetDoc.OPERATION + "'" +
                                        ",@EMPDOCS_ASSETDOC_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPDOCS_ASSETDOC_ID) + "'" +
                                        ",@EMPDOCS_NAME='" + _obj_smhr_empAssetDoc.EMPDOCS_NAME + "'" +
                                        ",@EMPDOCS_UPLOAD='" + _obj_smhr_empAssetDoc.EMPDOCS_UPLOAD + "'" +
                                        ",@CREATED_BY='" + _obj_smhr_empAssetDoc.CREATEDBY + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = '" + _obj_smhr_empAssetDoc.OPERATION + "'" +
                                        ",@EMPDOCS_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPDOCS_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmpAssetCount(SMHR_EMPASSETDOC _obj_smhr_empassetdoc)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'CHECKEXISTS',@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "', @EMPASSETDOC_DEPT_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_DEPT_ID + "'");
        }

        public static DataTable get_EmpAsset_Count(SMHR_EMPASSETDOC _obj_smhr_empassetdoc)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'CHECKASSETEXISTS',@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "', @EMPASSETDOC_DEPT_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_DEPT_ID + "'");
        }

        public static DataTable get_EmpAssetDoc(SMHR_EMPASSETDOC _obj_smhr_empassetdoc)
        {
            if (_obj_smhr_empassetdoc.OPERATION == operation.Select)
            {
                // if (_obj_smhr_empassetdoc.EMPASSETDOC_ID.ToString() == "0" && _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID.ToString() == "0" || (_obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID.ToString() != "0"))
                if (_obj_smhr_empassetdoc.EMPASSETDOC_ID.ToString() == "0" && _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'select', @EMPASSETDOC_TYPE = '" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID +
                                        "',@EMP_LOGIN_ID='" + _obj_smhr_empassetdoc.LOGIN_ID + "'");
                }
                else if (_obj_smhr_empassetdoc.EMPASSETDOC_ID.ToString() != "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'select',@EMPASSETDOC_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_ID + "', @EMPASSETDOC_TYPE = '" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'select',@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "', @EMPASSETDOC_TYPE = '" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.Insert)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'select',@EMPASSETDOC_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_ID + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'Empty1'");
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'Check1',@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "', @EMPASSETDOC_TYPE = '" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'Get',@EMPDOCS_ASSETDOC_ID='" + _obj_smhr_empassetdoc.EMPDOCS_ASSETDOC_ID + "'");
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.get_Assets_Assigned)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'get_Assets_Assigned',@EMPASSETDOC_DEPT_ID = " + _obj_smhr_empassetdoc.EMPASSETDOC_DEPT_ID + ",@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "',@EMPASSETDOC_ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "',@EMPASSETDOC_TYPE='" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "'");
            }
            else if (_obj_smhr_empassetdoc.OPERATION == operation.get_All_Assets)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'get_All_Assets',@EMPASSETDOC_DEPT_ID = " + _obj_smhr_empassetdoc.EMPASSETDOC_DEPT_ID + ",@EMPASSETDOC_EMP_ID = " + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + ",@EMPASSETDOC_ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPASSETDOC @Operation = 'Empty', @EMPASSETDOC_TYPE = '" + _obj_smhr_empassetdoc.EMPASSETDOC_TYPE + "',@EMPASSETDOC_EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_EmpAssetDocBU(SMHR_EMPASSETDOC _obj_smhr_empassetdoc)
        {
            if (_obj_smhr_empassetdoc.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_EMP_ESS @EMP_ID = '" + _obj_smhr_empassetdoc.EMPASSETDOC_EMP_ID + "', @MODE = '2',@ORGANISATION_ID='" + _obj_smhr_empassetdoc.ORGANISATION_ID + "'");
            }
            else
            {
                return null;
            }
        }

        #endregion

        #region SMHR_BUSINESSUNIT

        /// <summary>
        ///  Method to Get Business Unit Based on the BusinessUnitID
        /// </summary>
        /// <param name="BUSINESSUNIT_ID"></param>
        /// <returns>Datatable with BusinessUnit Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-10 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_BusinessUnit(SMHR_BUSINESSUNIT _obj_Smhr_BusinessUnit)
        {
            if (_obj_Smhr_BusinessUnit.OPERATION == operation.Select)
            {
                if (_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID == null)
                {
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'select', " +
                                        " @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                        ",@BUSINESSUNIT_ISDELETED=" + (_obj_Smhr_BusinessUnit.ISDELETED == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.ISDELETED) + "'"));
                }
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'select'," +
                                        "@BUSINESSUNIT_ID='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID) + "'" +
                                        ", @BUSINESSUNIT_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_BusinessUnit.ORGANISATION_ID) + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Get'," +
                                    " @BUSINESSUNIT_CODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE) + "'," +
                                    " @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Check)
            {
                if (_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID == null)
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Check'," +
                                        "@BUSINESSUNIT_CODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE) + "'" +
                                        ", @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Check', " +
                                        " @BUSINESSUNIT_CODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE) + "'," +
                                        " @BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "" +
                                                                                 ", @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'"));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Check1', " +
                                    " @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                    ",@BU_LOGIN_ID = '" + _obj_Smhr_BusinessUnit.BU_LOGIN_ID + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Empty', " +
                                    "@BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "" +
                                                                            ",@BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'"));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Validate'," +
                                    " @BUSINESSUNIT_CODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE) + "'," +
                                    " @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.SELECTEMPLOYEE1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTEMPLOYEE1', @EMP_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                    ",@emp_id = '" + _obj_Smhr_BusinessUnit.BUID + "',@EMP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + ""));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.SELECTEMPLOYEE)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTEMPLOYEE', @EMP_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                    ",@EMP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + ""));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.SELECTEMPLOYEE3)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTEMPLOYEE3', @EMP_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                    ",@emp_id = '" + _obj_Smhr_BusinessUnit.BUID + "',@EMP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "" +
                                                                                                                                 ",@EMP_REPORTINGEMPLOYEE='" + _obj_Smhr_BusinessUnit.REPORTINGEMPLOYEE + " '"));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.SELECTEMPLOYEE)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTEMPLOYEE', @EMP_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'" +
                                    ",@EMP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + ""));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.load)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'load', " +
                                    "@BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "" +
                                                                            ",@BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'"));
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Validate1)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Validate1',@BUSINESSUNIT_EMP_ID='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_EMP_ID + "',@ORGANISATION_ID='" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Get_BU)
            {
                return ExecuteQuery("EXEC USP_SMHR_ORGANISATION @Mode='10',@ORGANISATION_ID='" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Select3)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Select3',@BUSINESSUNIT_ID='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "'");
            }
            // FOR CHECKING PARENT START DATE AND END DATE WITH NEWLY CREATED BUSINESS UNIT
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Select2',@ORGANISATION_ID='" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID +
                                    "',@BUSINESSUNIT_ENDDATE='" + _obj_Smhr_BusinessUnit.ENDDATE + "',@BUSINESSUNIT_STARTDATE='" + _obj_Smhr_BusinessUnit.STARTDATE + "'");
            }
            else if (_obj_Smhr_BusinessUnit.OPERATION == operation.Get_BULocalization)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='Get_Localization',@BUSINESSUNIT_ID='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_ID +
                                    "',@ORGANISATION_ID='" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'");
            }

            else
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Empty1', " +
                                    "@BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID + "" +
                                                                            ",@BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID + "'"));
            }
        }

        /// <summary>
        /// Method to Insert or update into the BusinessUnit table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_BusinessUnit"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-11
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_BusinessUnit(SMHR_BUSINESSUNIT _obj_Smhr_BusinessUnit)
        {
            bool status = false;
            switch (_obj_Smhr_BusinessUnit.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Insert', @BUSINESSUNIT_CODE='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE +
                                        "', @BUSINESSUNIT_DESC='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_DESC
                                        //  + "', @BUSINESSUNIT_CATAGORY_ID='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CATAGORY_ID)
                                        +
                                        "',@BUSNIESSUNIT_ISVARIABLEPAY='" + Convert.ToString(_obj_Smhr_BusinessUnit.IS_VARIABLEPAY) +
                                        "' , @BUSINESSUNIT_PARENT_BUSINESSUNIT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID)) +
                                        " , @BUSINESSUNIT_CURRENCY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID)) +
                                        " , @BUSINESSUNIT_DATEFORMAT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID)) +
                                        " , @BUSINESSUNIT_ADDRESS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS) + "'") +
                                        " , @BUSINESSUNIT_OVERTIME=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME) + "'") +
                                        " , @BUSINESSUNIT_COUNTRY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID)) +
                                        " , @BUSINESSUNIT_DIRECTORATE_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID)) +
                                        " , @BUSINESSUNIT_AGE=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE + "'") +
                                        " , @BUSINESSUNIT_FISCALYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR + "'") +
                                        " , @BUSINESSUNIT_CALENDERYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR + "'") +
                                        " , @BUSINESSUNIT_EMPCODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_EMPCODE) +
                                        "', @BUSINESSUNIT_PAYTYPE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYTYPE) +
                                        "', @BUSINESSUNIT_SUPERVISOR = " + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_SUPERVISOR) +
                                        ",  @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID +
                                        "', @BUSINESSUNIT_STARTDATE=" + (_obj_Smhr_BusinessUnit.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_BusinessUnit.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @BUSINESSUNIT_ENDDATE=" + (_obj_Smhr_BusinessUnit.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_BusinessUnit.ENDDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @BUSINESSUNIT_PAYMENTMETHODS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS + "'") +
                                        " ,@BUSINESSUNIT_ISMETRO = '" + Convert.ToBoolean(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ISMETRO) + "'" +
                                        ", @BUSINESSUNIT_CREATEDBY= " + Convert.ToString(_obj_Smhr_BusinessUnit.CREATEDBY) +
                                        " , @BUSINESSUNIT_CREATEDDATE='" + _obj_Smhr_BusinessUnit.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BUSINESSUNIT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnit.LASTMDFBY) +
                                        ",  @BUSINESSUNIT_LOCALISATION = '" + Convert.ToInt32(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOCALISATION1) + "'" +
                                        ",  @BUSINESSUNIT_LASTMDFDATE='" + _obj_Smhr_BusinessUnit.LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                        ",@BUSINESSUNIT_BASICPERCENT='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_BASICPERCENT + "'" +
                                        ",@BUSINESSUNIT_NOOFHOURS='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_NOOFHOURS + "'" +
                                        ",@BUSINESSUNIT_ANNUALPROCESS='" + Convert.ToBoolean(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ANNUALPROCESS) + "'" +
                                        ",@BUSINESSUNIT_LOGO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO) + "'" +
                                        ",@BUSINESSUNIT_LOGO_FULLPATH='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO_FULLPATH) + "'" +
                                        ",@BUSINESSUNIT_ABN_NO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ABN_NO) + "'" +
                                        ",@BUSINESSUNIT_FACTOR='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_FACTOR + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Insert1', @BUSINESSUNIT_CODE='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE +
                                        "', @BUSINESSUNIT_DESC='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_DESC
                                        //   + "', @BUSINESSUNIT_CATAGORY_ID='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CATAGORY_ID)
                                        +
                                        "',@BUSNIESSUNIT_ISVARIABLEPAY='" + Convert.ToString(_obj_Smhr_BusinessUnit.IS_VARIABLEPAY) +
                                        "' , @BUSINESSUNIT_PARENT_BUSINESSUNIT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID)) +
                                        "' , @BUSINESSUNIT_CURRENCY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID)) +
                                        " , @BUSINESSUNIT_DATEFORMAT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID)) +
                                        " , @BUSINESSUNIT_ADDRESS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS) + "'") +
                                        " , @BUSINESSUNIT_OVERTIME=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME) + "'") +
                                        " , @BUSINESSUNIT_COUNTRY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID)) +
                                        " , @BUSINESSUNIT_DIRECTORATE_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID)) +
                                        " , @BUSINESSUNIT_AGE=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE + "'") +
                                        " , @BUSINESSUNIT_FISCALYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR + "'") +
                                        " , @BUSINESSUNIT_CALENDERYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR + "'") +
                                        " , @BUSINESSUNIT_EMPCODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_EMPCODE) +
                                        "', @BUSINESSUNIT_PAYTYPE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYTYPE) +
                                        "', @BUSINESSUNIT_SUPERVISOR = " + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_SUPERVISOR) +
                                        ",  @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID +
                                        "', @BUSINESSUNIT_SDATE=" + (_obj_Smhr_BusinessUnit.SDATE == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.SDATE) + "'") +
                                        " , @BUSINESSUNIT_EDATE=" + (_obj_Smhr_BusinessUnit.EDATE == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.EDATE) + "'") +
                                        " , @BUSINESSUNIT_PAYMENTMETHODS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS + "'") +
                                        " ,@BUSINESSUNIT_ISMETRO = '" + Convert.ToBoolean(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ISMETRO) + "'" +
                                        ", @BUSINESSUNIT_CREATEDBY= " + Convert.ToString(_obj_Smhr_BusinessUnit.CREATEDBY) +
                                        " , @BUSINESSUNIT_CREATEDDATE='" + _obj_Smhr_BusinessUnit.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BUSINESSUNIT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnit.LASTMDFBY) +
                                        ",  @BUSINESSUNIT_LOCALISATION = '" + Convert.ToInt32(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOCALISATION1) + "'" +
                                        ",  @BUSINESSUNIT_LASTMDFDATE='" + _obj_Smhr_BusinessUnit.LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                        ",@BUSINESSUNIT_BASICPERCENT='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_BASICPERCENT + "'" +
                                        ",@BUSINESSUNIT_NOOFHOURS='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_NOOFHOURS + "'" +
                                        ",@BUSINESSUNIT_ANNUALPROCESS='" + Convert.ToBoolean(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ANNUALPROCESS) + "'" +
                                        ",@BUSINESSUNIT_LOGO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO) + "'" +
                                        ",@BUSINESSUNIT_LOGO_FULLPATH='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO_FULLPATH) + "'" +
                                        ",@BUSINESSUNIT_ABN_NO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ABN_NO) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Update',@BUSINESSUNIT_ID=" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID) +
                                        " , @BUSINESSUNIT_CODE='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CODE +
                                        "', @BUSINESSUNIT_DESC='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_DESC
                                        //  + "', @BUSINESSUNIT_CATAGORY_ID='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CATAGORY_ID)
                                        +
                                        "',@BUSNIESSUNIT_ISVARIABLEPAY='" + Convert.ToString(_obj_Smhr_BusinessUnit.IS_VARIABLEPAY) +
                                        "' , @BUSINESSUNIT_PARENT_BUSINESSUNIT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PARENT_BUSINESSUNIT_ID)) +
                                        " , @BUSINESSUNIT_CURRENCY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_CURRENCY_ID)) +
                                        " , @BUSINESSUNIT_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnit.ORGANISATION_ID +
                                        "' , @BUSINESSUNIT_DATEFORMAT_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DATEFORMAT_ID)) +
                                        " , @BUSINESSUNIT_ADDRESS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ADDRESS) + "'") +
                                        " , @BUSINESSUNIT_OVERTIME=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME == null ? "null" : "'" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_OVERTIME) + "'") +
                                        " , @BUSINESSUNIT_COUNTRY_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_COUNTRY_ID)) +
                                        " , @BUSINESSUNIT_DIRECTORATE_ID=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID == null ? "null" : Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_DIRECTORATE_ID)) +
                                        " , @BUSINESSUNIT_AGE=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_AGE + "'") +
                                        " , @BUSINESSUNIT_FISCALYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_FISCALYEAR + "'") +
                                        " , @BUSINESSUNIT_CALENDERYEAR=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_CALENDERYEAR + "'") +
                                        " , @BUSINESSUNIT_PAYMENTMETHODS=" + (_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS == null ? "null" : "'" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYMENTMETHODS + "'") +
                                        " , @BUSINESSUNIT_EMPCODE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_EMPCODE) +
                                        "', @BUSINESSUNIT_PAYTYPE ='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_PAYTYPE) +
                                        "', @BUSINESSUNIT_SUPERVISOR = " + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_SUPERVISOR) +
                                        ",  @BUSINESSUNIT_STARTDATE=" + (_obj_Smhr_BusinessUnit.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_BusinessUnit.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @BUSINESSUNIT_ENDDATE=" + (_obj_Smhr_BusinessUnit.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_BusinessUnit.ENDDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @BUSINESSUNIT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnit.LASTMDFBY) +
                                        ", @BUSINESSUNIT_LOCALISATION = '" + Convert.ToInt32(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOCALISATION1) + "'" +
                                        " , @BUSINESSUNIT_LASTMDFDATE='" + _obj_Smhr_BusinessUnit.LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                        ",@BUSINESSUNIT_BASICPERCENT='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_BASICPERCENT + "'" +
                                        ",@BUSINESSUNIT_NOOFHOURS='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_NOOFHOURS + "'" +
                                        ",@BUSINESSUNIT_ANNUALPROCESS='" + Convert.ToBoolean(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ANNUALPROCESS) + "'" +
                                        ",@BUSINESSUNIT_LOGO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO) + "'" +
                                        ",@BUSINESSUNIT_LOGO_FULLPATH='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_LOGO_FULLPATH) + "'" +
                                        ",@BUSINESSUNIT_ABN_NO='" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ABN_NO) + "'" +
                                        ",@BUSINESSUNIT_FACTOR='" + _obj_Smhr_BusinessUnit.BUSINESSUNIT_FACTOR + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation = 'Delete',@BUSINESSUNIT_ID=" + Convert.ToString(_obj_Smhr_BusinessUnit.BUSINESSUNIT_ID) +
                                        " , @BUSINESSUNIT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnit.LASTMDFBY) +
                                        " , @BUSINESSUNIT_LASTMDFDATE='" + _obj_Smhr_BusinessUnit.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert_New:
                    if (ExecuteNonQuery("EXEC USP_CONVERT_IMAGE_BINARY"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }


        public static DataTable Get_VoteCodeEntry(SMHR_VOTECODEENTRY _obj_smhr_votecodeentry)
        {
            DataTable dt = new DataTable();

            if (_obj_smhr_votecodeentry.OPERATION == operation.GET)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_VOTECODE @OPERATION='GET',@VOTECODE_ORG_ID="
                    + _obj_smhr_votecodeentry.VOTECODE_ORG_ID
                    + ",@VOTECODE_BU_ID=" + _obj_smhr_votecodeentry.VOTECODE_BU_ID
                    + ",@VOTECODE_SALSTRUCT_ID=" + _obj_smhr_votecodeentry.VOTECODE_SALSTRUCT_ID + "");
            }
            else if (_obj_smhr_votecodeentry.OPERATION == operation.Select)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_VOTECODE @OPERATION='SELECT',@VOTECODE_ORG_ID=" + _obj_smhr_votecodeentry.VOTECODE_ORG_ID + "");
            }
            return dt;
        }

        public static bool Set_VoteCodeEntry(SMHR_VOTECODEENTRY _obj_smhr_votecodeentry)
        {
            bool status = false;

            switch (_obj_smhr_votecodeentry.OPERATION)
            {
                case operation.Insert:

                    List<SqlParameter> lstSqlparams = new List<SqlParameter>();

                    lstSqlparams.Add(new SqlParameter("@OPERATION", "INSERT"));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_CREATEDBY", _obj_smhr_votecodeentry.VOTECODE_CREATEDBY));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_CREATEDDATE", _obj_smhr_votecodeentry.VOTECODE_CREATEDDATE.ToString("MM/dd/yyyy")));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_LASTMDFBY", _obj_smhr_votecodeentry.VOTECODE_LASTMDFBY));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_LASTMDFDATE", _obj_smhr_votecodeentry.VOTECODE_LASTMDFDATE.ToString("MM/dd/yyyy")));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_DATA", _obj_smhr_votecodeentry.VOTECODE_GRIDDATA));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_BU_ID", _obj_smhr_votecodeentry.VOTECODE_BU_ID));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_SALSTRUCT_ID", _obj_smhr_votecodeentry.VOTECODE_SALSTRUCT_ID));
                    lstSqlparams.Add(new SqlParameter("@VOTECODE_ORG_ID", _obj_smhr_votecodeentry.VOTECODE_ORG_ID));

                    int result = ExecuteNonQuery("USP_SMHR_VOTECODE", lstSqlparams.ToArray());

                    if (result > 0)
                        status = true;
                    else
                        status = false;
                    break;

                case operation.Insert1:

                    if (ExecuteNonQuery("EXEC USP_SMHR_VOTECODE @OPERATION = 'INSERT1', @VOTECODE_ORG_ID = " + _obj_smhr_votecodeentry.VOTECODE_ORG_ID +
                                                        ", @VOTECODE_BU_ID = " + _obj_smhr_votecodeentry.VOTECODE_BU_ID +
                                                        ", @VOTECODE_SALSTRUCT_ID = " + _obj_smhr_votecodeentry.VOTECODE_SALSTRUCT_ID +
                                                        ", @VOTECODE_PAYITEM_ID = " + _obj_smhr_votecodeentry.VOTECODE_PAYITEM_ID +
                                                        ", @VOTECODE_CODE = '" + _obj_smhr_votecodeentry.VOTECODE_CODE + "'" +
                                                        ", @VOTECODE_NAME = '" + _obj_smhr_votecodeentry.VOTECODE_NAME + "'" +
                                                        ", @VOTECODE_CREATEDBY = " + _obj_smhr_votecodeentry.VOTECODE_CREATEDBY +
                                                        ", @VOTECODE_LASTMDFBY = " + _obj_smhr_votecodeentry.VOTECODE_LASTMDFBY))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable Get_Divisions(SMHR_BUSINESSUNIT _obj_smhr_businessunit)
        {
            //return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @OPERATION=SELECT1,@ORGANISATION_ID='" + _obj_smhr_businessunit.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_smhr_businessunit.BUID + "'");
            return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @OPERATION=SELECT1,@ORGANISATION_ID='" + _obj_smhr_businessunit.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_smhr_businessunit.BUID + "',@DEPARTMENT_ID='" + _obj_smhr_businessunit.DEPARTMENT_ID + "',@DIRECTORATE_ID='" + _obj_smhr_businessunit.DIRECTORATE_ID + "'");
        }

        #endregion

        #region SMHR_CATEGORY

        /// <summary>
        ///  Method to Get Category Based on the CATEGORY_ID
        /// </summary>
        /// <param name="CATEGORY_ID"></param>
        /// <returns>Datatable with Categories Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-11 
        ///  Last Modified on   : BK 
        ///  Last Modfied by    : 2009-08-19
        /// </remarks>
        public static DataTable get_Category(SMHR_CATEGORY _obj_Smhr_Category)
        {
            if (_obj_Smhr_Category.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Category.CATEGORY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CATEGORY @Operation = 'select',@CATEGORY_ORGANISATION_ID='" + _obj_Smhr_Category.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CATEGORY @Operation = 'select', @CATEGORY_ID =" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ID) + ",@CATEGORY_ORGANISATION_ID='" + _obj_Smhr_Category.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Category.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Get', @CATEGORY_CODE ='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_CODE) + "',@CATEGORY_ORGANISATION_ID='" + _obj_Smhr_Category.CATEGORY_ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Category.CATEGORY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Check', @CATEGORY_CODE ='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_CODE) + "',@CATEGORY_ORGANISATION_ID='" + _obj_Smhr_Category.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Check', @CATEGORY_CODE ='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_CODE) + "', @CATEGORY_ID =" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ID) + ",@CATEGORY_ORGANISATION_ID='" + _obj_Smhr_Category.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_CATEGORY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-11
        ///  Last Modified on   : BK
        ///  Last Modfied by    : 2009-08-19
        /// </remarks>
        public static bool set_Category(SMHR_CATEGORY _obj_Smhr_Category)
        {
            bool status = false;
            switch (_obj_Smhr_Category.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Insert', @CATEGORY_CODE='" + _obj_Smhr_Category.CATEGORY_CODE +
                                        "', @CATEGORY_DESC='" + _obj_Smhr_Category.CATEGORY_DESC +
                                        "', @CATEGORY_ORGANISATION_ID = '" + _obj_Smhr_Category.ORGANISATION_ID +
                                        "', @CATEGORY_ISOVERTIME='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISOVERTIME) +
                                        "', @CATEGORY_NEEDBANKINFO='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_NEEDBANKINFO) +
                                        "', @CATEGORY_ISFISCALYEAR='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISFISCALYEAR) +
                                        "', @CATEGORY_ISCURRENCY='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCURRENCY) +
                                        "', @CATEGORY_ISDATEFORMAT='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISDATEFORMAT) +
                                        "', @CATEGORY_ISCOUNTRY='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCOUNTRY) +
                                        "', @CATEGORY_ISADDRESS='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISADDRESS) +
                                        "', @CATEGORY_ISAGE='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISAGE) +
                                        "', @CATEGORY_ISPAYMENTMODE='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISPAYMENTMODE) +
                                        "', @CATEGORY_ISCALENDERYEAR='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCALENDERYEAR) +
                                        "', @CATEGORY_LOCALISATION = '" + Convert.ToString(_obj_Smhr_Category.CATEGORY_LOCALISATION) +
                                        "', @CATEGORY_CREATEDBY= " + Convert.ToString(_obj_Smhr_Category.CREATEDBY) +
                                        " , @CATEGORY_CREATEDDATE='" + _obj_Smhr_Category.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @CATEGORY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Category.LASTMDFBY) +
                                        " , @CATEGORY_LASTMDFDATE='" + _obj_Smhr_Category.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Update',@CATEGORY_ID=" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ID) +
                                        ", @CATEGORY_CODE='" + _obj_Smhr_Category.CATEGORY_CODE +
                                        "', @CATEGORY_DESC='" + _obj_Smhr_Category.CATEGORY_DESC +
                                        "', @CATEGORY_ORGANISATION_ID = '" + _obj_Smhr_Category.ORGANISATION_ID +
                                        "', @CATEGORY_ISOVERTIME='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISOVERTIME) +
                                        "', @CATEGORY_NEEDBANKINFO='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_NEEDBANKINFO) +
                                        "', @CATEGORY_ISFISCALYEAR='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISFISCALYEAR) +
                                        "', @CATEGORY_ISCURRENCY='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCURRENCY) +
                                        "', @CATEGORY_ISDATEFORMAT='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISDATEFORMAT) +
                                        "', @CATEGORY_ISCOUNTRY='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCOUNTRY) +
                                        "', @CATEGORY_ISADDRESS='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISADDRESS) +
                                        "', @CATEGORY_ISAGE='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISAGE) +
                                        "', @CATEGORY_ISPAYMENTMODE='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISPAYMENTMODE) +
                                        "', @CATEGORY_ISCALENDERYEAR='" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ISCALENDERYEAR) +
                                        "', @CATEGORY_LOCALISATION = '" + Convert.ToString(_obj_Smhr_Category.CATEGORY_LOCALISATION) +
                                        "', @CATEGORY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Category.LASTMDFBY) +
                                        " , @CATEGORY_LASTMDFDATE='" + _obj_Smhr_Category.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CATEGORY @Operation = 'Delete', @CATEGORY_ID=" + Convert.ToString(_obj_Smhr_Category.CATEGORY_ID) +
                                        " , @CATEGORY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Category.LASTMDFBY) +
                                        " , @CATEGORY_LASTMDFDATE='" + _obj_Smhr_Category.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_COUNTRY

        /// <summary>
        ///  Method to Get Country Based on the COUNTRY_ID
        /// </summary>
        /// <param name="COUNTRY_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Country(SMHR_COUNTRY _obj_Smhr_Country)
        {
            if (_obj_Smhr_Country.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Country.COUNTRY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_COUNTRY @Operation = 'select',@COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_COUNTRY @Operation = 'select', @COUNTRY_ID =" + Convert.ToString(_obj_Smhr_Country.COUNTRY_ID) + ",@COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Country.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Get', @COUNTRY_CODE ='" + Convert.ToString(_obj_Smhr_Country.COUNTRY_CODE) + "',@COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Country.COUNTRY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Check', @COUNTRY_CODE ='" + Convert.ToString(_obj_Smhr_Country.COUNTRY_CODE) + "',@COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Check', @COUNTRY_CODE ='" + Convert.ToString(_obj_Smhr_Country.COUNTRY_CODE) + "', @COUNTRY_ID =" + Convert.ToString(_obj_Smhr_Country.COUNTRY_ID) + ",@COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_COUNTRY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Country"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Country(SMHR_COUNTRY _obj_Smhr_Country)
        {
            bool status = false;
            switch (_obj_Smhr_Country.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Insert', @COUNTRY_CODE='" + _obj_Smhr_Country.COUNTRY_CODE +
                                        "', @COUNTRY_NAME='" + _obj_Smhr_Country.COUNTRY_NAME +
                                        "', @COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID +
                                        "', @COUNTRY_CREATEDBY= " + Convert.ToString(_obj_Smhr_Country.CREATEDBY) +
                                        " , @COUNTRY_CREATEDDATE='" + _obj_Smhr_Country.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @COUNTRY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Country.LASTMDFBY) +
                                        " , @COUNTRY_LASTMDFDATE='" + _obj_Smhr_Country.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Update',@COUNTRY_ID=" + Convert.ToString(_obj_Smhr_Country.COUNTRY_ID) +
                                        " , @COUNTRY_CODE='" + _obj_Smhr_Country.COUNTRY_CODE +
                                        "', @COUNTRY_NAME='" + _obj_Smhr_Country.COUNTRY_NAME +
                                        "', @COUNTRY_ORGANISATION_ID = '" + _obj_Smhr_Country.ORGANISATION_ID +
                                        "', @COUNTRY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Country.LASTMDFBY) +
                                        " , @COUNTRY_LASTMDFDATE='" + _obj_Smhr_Country.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Delete', @COUNTRY_ID=" + Convert.ToString(_obj_Smhr_Country.COUNTRY_ID) +
                                        " , @COUNTRY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Country.LASTMDFBY) +
                                        " , @COUNTRY_LASTMDFDATE='" + _obj_Smhr_Country.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region County

        public static DataTable get_County(SMHR_COUNTY _obj_Smhr_County)
        {
            if (_obj_Smhr_County.OPERATION == operation.Select)
            {
                if (_obj_Smhr_County.COUNTY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'select',@COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'select', @COUNTY_ID =" + Convert.ToString(_obj_Smhr_County.COUNTY_ID) + ",@COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_County.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'Get', @COUNTY_CODE ='" + Convert.ToString(_obj_Smhr_County.COUNTY_CODE) + "',@COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_County.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'Select2', @COUNTY_ORGANISATION_ID ='" + Convert.ToString(_obj_Smhr_County.ORGANISATION_ID) + "',@COUNTRY_ID = '" + _obj_Smhr_County.COUNTRY_ID + "'");
            }
            else
            {
                if (_obj_Smhr_County.COUNTY_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'Check', @COUNTY_CODE ='" + Convert.ToString(_obj_Smhr_County.COUNTY_CODE) + "',@COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_COUNTY @Operation = 'Check', @COUNTY_CODE ='" + Convert.ToString(_obj_Smhr_County.COUNTY_CODE) + "', @COUNTY_ID =" + Convert.ToString(_obj_Smhr_County.COUNTY_ID) + ",@COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID + "'");
            }
        }

        public static bool set_County(SMHR_COUNTY _obj_Smhr_County)
        {
            bool status = false;
            switch (_obj_Smhr_County.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTY @Operation = 'Insert', @COUNTY_CODE='" + _obj_Smhr_County.COUNTY_CODE +
                                        "', @COUNTY_NAME='" + _obj_Smhr_County.COUNTY_NAME +
                                        "', @COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID +
                                        "', @COUNTRY_ID = '" + _obj_Smhr_County.COUNTRY_ID +
                                        "', @COUNTY_CREATEDBY= " + Convert.ToString(_obj_Smhr_County.CREATEDBY) +
                                        " , @COUNTY_CREATEDDATE='" + _obj_Smhr_County.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @COUNTY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_County.LASTMDFBY) +
                                        " , @COUNTY_LASTMDFDATE='" + _obj_Smhr_County.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTY @Operation = 'Update',@COUNTY_ID=" + Convert.ToString(_obj_Smhr_County.COUNTY_ID) +
                                        " , @COUNTY_CODE='" + _obj_Smhr_County.COUNTY_CODE +
                                        "', @COUNTY_NAME='" + _obj_Smhr_County.COUNTY_NAME +
                                        "', @COUNTY_ORGANISATION_ID = '" + _obj_Smhr_County.ORGANISATION_ID +
                                        "', @COUNTRY_ID = '" + _obj_Smhr_County.COUNTRY_ID +
                                        "', @COUNTY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_County.LASTMDFBY) +
                                        " , @COUNTY_LASTMDFDATE='" + _obj_Smhr_County.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTY @Operation = 'Delete', @COUNTY_ID=" + Convert.ToString(_obj_Smhr_County.COUNTY_ID) +
                                        " , @COUNTY_LASTMDFBY =" + Convert.ToString(_obj_Smhr_County.LASTMDFBY) +
                                        " , @COUNTY_LASTMDFDATE='" + _obj_Smhr_County.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Directorate

        /// <summary>
        ///  Method to Get Country Based on the COUNTRY_ID
        /// </summary>
        /// <param name="COUNTRY_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK    
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Directorate(SMHR_DIRECTORATE _obj_Smhr_Directorate)
        {
            if (_obj_Smhr_Directorate.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Directorate.DIRECTORATE_ID.ToString() == "0" && _obj_Smhr_Directorate.BUSINESSUNIT_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'select',@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
                else if (_obj_Smhr_Directorate.BUSINESSUNIT_ID.ToString() != "0")
                    return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'select', @DIRECTORATE_ID =" + Convert.ToInt32(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@BUSINESSUNIT_ID = " + _obj_Smhr_Directorate.BUSINESSUNIT_ID + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'select', @DIRECTORATE_ID =" + Convert.ToInt32(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Check_Emp)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'INACTIVE', @DIRECTORATE_ID =" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@BUSINESSUNIT_ID = " + _obj_Smhr_Directorate.BUSINESSUNIT_ID + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'parentDir',@BUSINESSUNIT_ID = " + _obj_Smhr_Directorate.BUSINESSUNIT_ID + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Available)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'checkparent',@DIRECTORATE_ID =" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@DIRECTORATE_BUSINESSUNIT_ID = " + _obj_Smhr_Directorate.BUSINESSUNIT_ID + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Delete1)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'statusinactive', @DIRECTORATE_ID =" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) + "");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Delete)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'directorate', @DIRECTORATE_ID =" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@BUSINESSUNIT_ID = " + _obj_Smhr_Directorate.BUSINESSUNIT_ID + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Directorate.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Get', @DIRECTORATE_CODE ='" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_CODE) + "',@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Directorate.DIRECTORATE_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Check', @DIRECTORATE_CODE ='" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_CODE) + "',@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "',@DIRECTORATE_BUSINESSUNIT_ID = '" + _obj_Smhr_Directorate.BUSINESSUNIT_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Check', @DIRECTORATE_CODE ='" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_CODE) + "', @DIRECTORATE_ID =" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) + ",@DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID + "',@DIRECTORATE_BUSINESSUNIT_ID = '" + _obj_Smhr_Directorate.BUSINESSUNIT_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_COUNTRY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Country"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Directorate(SMHR_DIRECTORATE _obj_Smhr_Directorate)
        {
            bool status = false;
            switch (_obj_Smhr_Directorate.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Insert', @DIRECTORATE_CODE='" + _obj_Smhr_Directorate.DIRECTORATE_CODE +
                                        "', @DIRECTORATE_NAME='" + _obj_Smhr_Directorate.DIRECTORATE_NAME +
                                        "', @DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID +
                                        "', @DIRECTORATE_PARENTDIRECTORATE_ID = '" + _obj_Smhr_Directorate.DIRECTORATE_PARENTDIRECTORATE_ID +
                                        "', @DIRECTORATE_BUSINESSUNIT_ID = '" + _obj_Smhr_Directorate.BUSINESSUNIT_ID +
                                        "', @DIRECTORATE_CREATEDBY= " + Convert.ToString(_obj_Smhr_Directorate.CREATEDBY) +
                                        " , @DIRECTORATE_CREATEDDATE='" + _obj_Smhr_Directorate.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @DIRECTORATE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Directorate.LASTMDFBY) +
                                        ",@DIRECTORATE_STATUS =" + _obj_Smhr_Directorate.DIRECTORATE_STATUS +
                                        " , @DIRECTORATE_LASTMDFDATE='" + _obj_Smhr_Directorate.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Update',@DIRECTORATE_ID=" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) +
                                        " , @DIRECTORATE_CODE='" + _obj_Smhr_Directorate.DIRECTORATE_CODE +
                                        "', @DIRECTORATE_NAME='" + _obj_Smhr_Directorate.DIRECTORATE_NAME +
                                        "', @DIRECTORATE_ORGANISATION_ID = '" + _obj_Smhr_Directorate.ORGANISATION_ID +
                                        "', @DIRECTORATE_PARENTDIRECTORATE_ID = '" + _obj_Smhr_Directorate.DIRECTORATE_PARENTDIRECTORATE_ID +
                                        "', @DIRECTORATE_BUSINESSUNIT_ID = '" + _obj_Smhr_Directorate.BUSINESSUNIT_ID +
                                        "', @DIRECTORATE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Directorate.LASTMDFBY) +
                                        ",@DIRECTORATE_STATUS =" + _obj_Smhr_Directorate.DIRECTORATE_STATUS +
                                        " , @DIRECTORATE_LASTMDFDATE='" + _obj_Smhr_Directorate.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIRECTORATE @Operation = 'Delete', @DIRECTORATE_ID=" + Convert.ToString(_obj_Smhr_Directorate.DIRECTORATE_ID) +
                                        " , @DIRECTORATE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Directorate.LASTMDFBY) +
                                        " , @DIRECTORATE_LASTMDFDATE='" + _obj_Smhr_Directorate.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        /// <summary>
        /// 
        /// </summary>
        /// 
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : A.A 
        ///  Created on         : 2010-11-25
        ///  Last Modified on   : N/ASS
        ///  Last Modfied by    : N/A
        /// </remarks>

        #region SMHR_LEAVEDETAILS

        public static bool set_LEAVEDETAILS(SMHR_LEAVEPROCESS obj_smhr_leave)
        {
            bool status = false;
            string strQuery = string.Empty;
            switch (obj_smhr_leave.MODE)
            {
                case 2:
                    if (Dal.ExecuteNonQuery("EXEC USP_SMHR_LEAVE_PROCESS @MODE=2,@QUERY='" + obj_smhr_leave.Query + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static string set_LEAVEDETAILS_VALUES(SMHR_LEAVEPROCESS obj_smhr_leave)
        {
            string strQuery = string.Empty;
            switch (obj_smhr_leave.MODE)
            {
                case 3:
                    strQuery = " \n EXEC USP_SMHR_LEAVE_PROCESS @mode=3 , @FROM_PERIOD_ID= " + obj_smhr_leave.FROMPERIOD + ", @TO_PERIOD_ID= " + obj_smhr_leave.TOPERIOD + ",@BUID = " + obj_smhr_leave.BUID + ",@LP_Enc_Leaves=" + obj_smhr_leave.LP_Enc_Leaves + ",@LP_CF_Leaves=" + obj_smhr_leave.LP_CF_Leaves + ",@EMP_ID=" + obj_smhr_leave.EMP_ID + ",@LEAVETYPE_ID=" + obj_smhr_leave.LEAVETYPE_ID + ", @LP_PAYITEM_HEAD=" + obj_smhr_leave.LPPAYITEMHEAD + ",@TotalAmount=" + obj_smhr_leave.TotalAmount + " , @PERIOD_ELEMENT=" + obj_smhr_leave.PERIODELEMENT + ",@SMHR_LP_CREATED_BY=" + obj_smhr_leave.LPCREATEDBY + ",@ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + ",@LP_STATUS=" + obj_smhr_leave.LP_STATUS + " ,@SMHR_PAYITEM_ID= ''" + obj_smhr_leave.PAYITEMID + "''";
                    //  strQuery = " \n EXEC USP_SMHR_LEAVE_PROCESS @mode=3 , @FROM_PERIOD_ID= " + obj_smhr_leave.FROMPERIOD + ", @TO_PERIOD_ID= " + obj_smhr_leave.TOPERIOD + ",@BUID = " + obj_smhr_leave.BUID + ",@LP_Enc_Leaves=" + obj_smhr_leave.LP_Enc_Leaves + ",@LP_CF_Leaves=" + obj_smhr_leave.LP_CF_Leaves + ",@EMP_ID=" + obj_smhr_leave.EMP_ID + ",@LEAVETYPE_ID=" + obj_smhr_leave.LEAVETYPE_ID + ",@TotalAmount=" + obj_smhr_leave.TotalAmount + " , @PERIOD_ELEMENT=" + obj_smhr_leave.PERIODELEMENT + ",@SMHR_LP_CREATED_BY=" + obj_smhr_leave.LPCREATEDBY + ",@SMHR_LP_CREATED_DATE='" + obj_smhr_leave.LPCREATEDDATE + "',@ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + " "; 

                    break;
                case 5:

                    strQuery = " \n EXEC USP_SMHR_LEAVE_PROCESS @mode=5 , @LP_CF_Leaves=" + obj_smhr_leave.LP_CF_Leaves + ",@EMP_ID=" + obj_smhr_leave.EMP_ID + " ,@TO_PERIOD_ID= " + obj_smhr_leave.TOPERIOD + ",@LEAVETYPE_ID=" + obj_smhr_leave.LEAVETYPE_ID + ",@FROM_PERIOD_ID= " + obj_smhr_leave.FROMPERIOD + ",@ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + ",@LP_STATUS=" + obj_smhr_leave.LP_STATUS + ",@SMHR_LP_CREATED_BY=" + obj_smhr_leave.LPCREATEDBY + " ";

                    break;
            }
            return strQuery;
        }

        public static DataTable Get_LEAVEDETAILS(SMHR_LEAVEPROCESS obj_smhr_leave)
        {
            if (obj_smhr_leave.MODE == 1)
            {
                //return ExecuteQuery("EXEC USP_SMHR_CALCULATE_LEAVE_ENC_CF_TESTAPP @ORGANISATION_ID='" + obj_smhr_leave.ORGANISATION_ID + "',@Leaveprocesstype=" + obj_smhr_leave.LEAVEPROCESSTYPE + ",@PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ",@BUID=" + obj_smhr_leave.BUID + ",@PAYITEM='" + obj_smhr_leave.PAYITEM + "' ");
                return ExecuteQuery("EXEC USP_SMHR_CALCULATE_LEAVE_ENC_CF_TESTAPP @ORGANISATION_ID='" + obj_smhr_leave.ORGANISATION_ID + "',@PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ",@BUID=" + obj_smhr_leave.BUID + ",@PAYITEM='" + obj_smhr_leave.PAYITEM + "' ,@TO_PERIOD_ID='" + obj_smhr_leave.TOPERIOD + "'");
            }
            else if (obj_smhr_leave.MODE == 4)
            {
                // To get payitem details in listbox
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=4 ,@PAYITEM_ORGANISATION_ID = " + obj_smhr_leave.ORGANISATION_ID + "");
            }
            else if (obj_smhr_leave.MODE == 6)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=6 ,@PAYITEM_ORGANISATION_ID = " + obj_smhr_leave.ORGANISATION_ID + "");
            }
            else if (obj_smhr_leave.MODE == 7)
            {
                //To Get Leave History
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=7 ,@TO_PERIOD_ID = " + obj_smhr_leave.TOPERIOD + ",@BUID=" + obj_smhr_leave.BUID + " ");
            }
            else if (obj_smhr_leave.MODE == 8)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=8 , @ORGANISATION_ID='" + obj_smhr_leave.ORGANISATION_ID + "',@BUID=" + obj_smhr_leave.BUID + ",@FROM_PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ",@TO_PERIOD_ID=" + obj_smhr_leave.TOPERIOD + "");
                // return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=8"); SMHR_LP_FROM_PERIOD_ID= @FROM_PERIOD_ID and  SMHR_LP_TO_PERIOD_ID =@TO_PERIOD_ID
            }
            else if (obj_smhr_leave.MODE == 10)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=10, @TO_PERIOD_ID=" + obj_smhr_leave.TOPERIOD + "");
            }
            else if (obj_smhr_leave.MODE == 12)
            {
                //      return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=12, @TO_PERIOD_ID=" + obj_smhr_leave.TOPERIOD + ", @FROM_PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ", @BUID=" + obj_smhr_leave.BUID + ", @ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + " ");
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=12, @TO_PERIOD_ID=" + obj_smhr_leave.TOPERIOD + ", @FROM_PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ", @BUID=" + obj_smhr_leave.BUID + " ");
            }
            else if (obj_smhr_leave.MODE == 13)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=13,@TO_PERIOD_ID=" + obj_smhr_leave.TOPERIOD + ", @FROM_PERIOD_ID=" + obj_smhr_leave.FROMPERIOD + ", @BUID=" + obj_smhr_leave.BUID + ",@ORGANISATION_ID='" + obj_smhr_leave.ORGANISATION_ID + "' ");
                //, @PERIODDTLID=" + obj_smhr_leave.PERIODELEMENT + "");
            }
            else if (obj_smhr_leave.MODE == 14)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=14, @ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + "");
            }
            else if (obj_smhr_leave.MODE == 15)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=15, @ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + "");
            }
            else if (obj_smhr_leave.MODE == 16)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=16, @FINANCE_PERIOD=" + obj_smhr_leave.FINANCEPERIOD + ", @ORGANISATION_ID=" + obj_smhr_leave.ORGANISATION_ID + "");
            }
            else if (obj_smhr_leave.MODE == 17)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=17, @TO_PERIOD_ID='" + obj_smhr_leave.TOPERIOD + "',@EMP_ID=" + obj_smhr_leave.EMP_ID + ",@LEAVETYPE_ID='" + obj_smhr_leave.LEAVETYPE_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVE_PROCESS @mode=9, @PERIODDTLID=" + obj_smhr_leave.PERIODELEMENT + "");
            }
        }

        #endregion

        #region SMHR_MAPPINGPAYROLL

        public static DataTable get_Organisation(SMHR_ORGANISATION _obj_Organisation)
        {
            if (_obj_Organisation.MODE == 1)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'");
            }
            else if (_obj_Organisation.MODE == 6)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'" +
                                        ",@ORGANISATION_NAME = '" + _obj_Organisation.ORGANISATION_NAME + "'");
            }
            else if (_obj_Organisation.MODE == 8)
            {
                return ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE='8',@ORGANISATION_ID = '" + _obj_Organisation.ORGANISATION_ID + "'");
            }
            else
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_Organisation.ORGANISATION_ID + "'");
            }
        }

        public static DataTable Get_PayRefer(SMHR_PAYROLL_REFEREPAYTYPE _OBJ_PAYROLL_REFEREPAYTYPE)
        {
            return Dal.ExecuteQuery("EXEC USP_SMHR_PAYROLL_REFERPAYTYPE @OPERATION= '" + _OBJ_PAYROLL_REFEREPAYTYPE.OPERATION + "'");
        }

        public static DataTable get_mappingrefpayitem(SMHR_MAPING_REFERPAYITEM _OBJ_SMHR_MAPING_REFERPAYITEM)
        {
            DataTable dt = new DataTable();
            if (_OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION == operation.Check)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_MAPING_REFERPAYITEM @Operation = 'Check',@PAYITEMREFERID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.PAYITEMREFERID) +
                                  "',@ORGANISATION_ID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.ORGANISATION_ID) + "',@BUSINESSUNIT_ID='" + _OBJ_SMHR_MAPING_REFERPAYITEM.BUSINESSUNIT_ID +
                                  "',@ORGPAYITEM_ID='" + _OBJ_SMHR_MAPING_REFERPAYITEM.ORGPAYITEM_ID + "'");
            }
            else if (_OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION == operation.Check1)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_MAPING_REFERPAYITEM  @Operation ='Check1',@ORGANISATION_ID='" + _OBJ_SMHR_MAPING_REFERPAYITEM.ORGANISATION_ID + "'");
            }
            else if (_OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION == operation.Edit)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_MAPING_REFERPAYITEM  @Operation ='Edit',@ID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.ID) + "'");
            }
            else if (_OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION == operation.Validate)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_MAPING_REFERPAYITEM @Operation = 'Validate',@PAYITEMREFERID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.PAYITEMREFERID) +
                                  "',@ORGANISATION_ID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.ORGANISATION_ID) + "',@BUSINESSUNIT_ID='" + _OBJ_SMHR_MAPING_REFERPAYITEM.BUSINESSUNIT_ID +
                                  "'");
            }
            return dt;
        }

        public static bool set_mappingrefpayitem(SMHR_MAPING_REFERPAYITEM _OBJ_SMHR_MAPING_REFERPAYITEM)
        {
            bool status = false;
            switch (_OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_MAPING_REFERPAYITEM @Operation = '" + _OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION + "'" +
                                        ",@PAYITEMREFERID = '" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.PAYITEMREFERID) + "'" +
                                        ",@ORGPAYITEM_ID = '" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.ORGPAYITEM_ID) + "'" +
                                        ",@ORGANISATION_ID = '" + Convert.ToString(_OBJ_SMHR_MAPING_REFERPAYITEM.ORGANISATION_ID) + "'" +
                                        ",@STATUS = '" + Convert.ToString(_OBJ_SMHR_MAPING_REFERPAYITEM.STATUS) + "'" +
                                        ",@BUSINESSUNIT_ID='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.BUSINESSUNIT_ID) + "'" +
                                        ",@MP_CREATED_BY='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.MP_CREATEDBY) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_MAPING_REFERPAYITEM @Operation = '" + _OBJ_SMHR_MAPING_REFERPAYITEM.OPERATION +
                                        "',@STATUS = '" + Convert.ToString(_OBJ_SMHR_MAPING_REFERPAYITEM.STATUS) +
                                        "',@ID='" + _OBJ_SMHR_MAPING_REFERPAYITEM.ID + "'" +
                                       ",@MP_LSTMDFBY='" + Convert.ToInt32(_OBJ_SMHR_MAPING_REFERPAYITEM.MP_LSTMDFBY) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable get_payitems(SMHR_PAYROLL_REFEREPAYTYPE _OBJ_PAYROLL_REFEREPAYTYPE)
        {
            DataTable dt = new DataTable();
            if (_OBJ_PAYROLL_REFEREPAYTYPE.OPERATION == operation.Select)
            {
                if (_OBJ_PAYROLL_REFEREPAYTYPE.ORG_ID != null)
                {
                    dt = ExecuteQuery("EXEC USP_SMHR_PAYROLL_REFERPAYTYPE @OPERATION='SELECT',@ORGANISATION_ID='" + _OBJ_PAYROLL_REFEREPAYTYPE.ORG_ID + "'");
                }
            }
            return dt;
        }

        #endregion

        #region SMHR_CURRENCY

        /// <summary>
        ///  Method to Get SMHR_CURRENCY Based on the CURR_ID
        /// </summary>
        /// <param name="CURR_ID"></param>
        /// <returns>Datatable with Currency Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Currency(SMHR_CURRENCY _obj_Smhr_Currency)
        {
            if (_obj_Smhr_Currency.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Currency.CURR_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'select',@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'select', @CURR_ID =" + Convert.ToString(_obj_Smhr_Currency.CURR_ID));
            }
            if (_obj_Smhr_Currency.OPERATION == operation.Selects)
            {
                if (_obj_Smhr_Currency.CURR_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'selects',@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'selects', @CURR_ID =" + Convert.ToString(_obj_Smhr_Currency.CURR_ID));
            }
            else if (_obj_Smhr_Currency.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Get', @CURR_CODE ='" + Convert.ToString(_obj_Smhr_Currency.CURR_CODE) + "'" +
                                    ",@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Currency.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Select1',@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "',@CURR_COUNTRY_ID='" + _obj_Smhr_Currency.CURR_COUNTRY_ID + "'");
            }
            else if (_obj_Smhr_Currency.OPERATION == operation.Selects)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY @operation='Selects',@CURR_ORGANISATION_ID='" + _obj_Smhr_Currency.ORGANISATION_ID + "',@CURR_ID='" + _obj_Smhr_Currency.CURR_ID + "' ");
            }
            else if (_obj_Smhr_Currency.OPERATION == operation.Check)
            {
                if (_obj_Smhr_Currency.CURR_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Check', @CURR_CODE ='" + Convert.ToString(_obj_Smhr_Currency.CURR_CODE) + "'" +
                                        ",@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Check', @CURR_CODE ='" + Convert.ToString(_obj_Smhr_Currency.CURR_CODE) + "'" +
                                        ", @CURR_ID =" + Convert.ToString(_obj_Smhr_Currency.CURR_ID) + "" +
                                        ",@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Currency.CURR_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Validate', @CURR_COUNTRY_ID ='" + Convert.ToInt32(_obj_Smhr_Currency.CURR_COUNTRY_ID) + "'" +
                                        ",@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Validate', @CURR_COUNTRY_ID ='" + Convert.ToInt32(_obj_Smhr_Currency.CURR_COUNTRY_ID) + "'," +
                                        ",@CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID + "'" +
                                        ",@CURR_ID =" + Convert.ToString(_obj_Smhr_Currency.CURR_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_COUNTRY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Currency"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Currency(SMHR_CURRENCY _obj_Smhr_Currency)
        {
            bool status = false;
            switch (_obj_Smhr_Currency.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Insert', @CURR_CODE='" + _obj_Smhr_Currency.CURR_CODE +
                                        "', @CURR_DESCRIPTION='" + _obj_Smhr_Currency.CURR_DESCRIPTION +
                                        "', @CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID +
                                        "', @CURR_COUNTRY_ID=" + Convert.ToString(_obj_Smhr_Currency.CURR_COUNTRY_ID) +
                                        " , @CURR_SYMBOL='" + _obj_Smhr_Currency.CURR_SYMBOL +
                                        "', @CURR_PRECESION =" + Convert.ToString(_obj_Smhr_Currency.CURR_PRECESION) +
                                        " , @CURR_CREATEDBY= " + Convert.ToString(_obj_Smhr_Currency.CREATEDBY) +
                                        " , @CURR_CREATEDDATE='" + _obj_Smhr_Currency.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @CURR_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Currency.LASTMDFBY) +
                                        " , @CURR_LASTMDFDATE ='" + _obj_Smhr_Currency.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Update', @CURR_ID=" + Convert.ToString(_obj_Smhr_Currency.CURR_ID) +
                                        " , @CURR_CODE='" + _obj_Smhr_Currency.CURR_CODE +
                                        "', @CURR_DESCRIPTION='" + _obj_Smhr_Currency.CURR_DESCRIPTION +
                                        "', @CURR_ORGANISATION_ID = '" + _obj_Smhr_Currency.ORGANISATION_ID +
                                        "', @CURR_COUNTRY_ID=" + Convert.ToString(_obj_Smhr_Currency.CURR_COUNTRY_ID) +
                                        " , @CURR_SYMBOL='" + _obj_Smhr_Currency.CURR_SYMBOL +
                                        "', @CURR_PRECESION =" + Convert.ToString(_obj_Smhr_Currency.CURR_PRECESION) +
                                        " , @CURR_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Currency.LASTMDFBY) +
                                        " , @CURR_LASTMDFDATE ='" + _obj_Smhr_Currency.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CURRENCY @Operation = 'Delete', @CURR_ID=" + Convert.ToString(_obj_Smhr_Currency.CURR_ID) +
                                        " , @CURR_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Currency.LASTMDFBY) +
                                        " , @CURR_LASTMDFDATE ='" + _obj_Smhr_Currency.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_DATEFORMAT

        /// <summary>
        ///  Method to Get SMHR_DATEFORMAT Based on the DATEFORMAT_ID
        /// </summary>
        /// <param name="DATEFORMAT_ID"></param>
        /// <returns>Datatable with DateFormat Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_DateFormat(SMHR_DATEFORMAT _obj_Smhr_DateFormat)
        {
            if (_obj_Smhr_DateFormat.OPERATION == operation.Select)
            {
                if (_obj_Smhr_DateFormat.DATEFORMAT_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'select', @DATEFORMAT_ID =" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_ID));
            }
            else if (_obj_Smhr_DateFormat.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Get', @DATEFORMAT_CODE ='" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_CODE) + "'");
            }
            else
            {
                if (_obj_Smhr_DateFormat.DATEFORMAT_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Check', @DATEFORMAT_CODE ='" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_CODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Check', @DATEFORMAT_CODE ='" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_CODE) + "', @DATEFORMAT_ID =" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_DATEFORMAT table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_DateFormat"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_DateFormat(SMHR_DATEFORMAT _obj_Smhr_DateFormat)
        {
            bool status = false;
            switch (_obj_Smhr_DateFormat.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Insert', @DATEFORMAT_CODE='" + _obj_Smhr_DateFormat.DATEFORMAT_CODE +
                                        "', @DATEFORMAT_DESC='" + _obj_Smhr_DateFormat.DATEFORMAT_DESC +
                                        "', @DATEFORMAT_FORMAT='" + _obj_Smhr_DateFormat.DATEFORMAT_FORMAT +
                                        "', @DATEFORMAT_CREATEDBY= " + Convert.ToString(_obj_Smhr_DateFormat.CREATEDBY) +
                                        " , @DATEFORMAT_CREATEDDATE='" + _obj_Smhr_DateFormat.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @DATEFORMAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DateFormat.LASTMDFBY) +
                                        " , @DATEFORMAT_LASTMDFDATE ='" + _obj_Smhr_DateFormat.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Update', @DATEFORMAT_ID=" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_ID) +
                                        " , @DATEFORMAT_CODE='" + _obj_Smhr_DateFormat.DATEFORMAT_CODE +
                                        "', @DATEFORMAT_DESC='" + _obj_Smhr_DateFormat.DATEFORMAT_DESC +
                                        "', @DATEFORMAT_FORMAT='" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_FORMAT) +
                                        "', @DATEFORMAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DateFormat.LASTMDFBY) +
                                        " , @DATEFORMAT_LASTMDFBY ='" + _obj_Smhr_DateFormat.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DATEFORMAT @Operation = 'Delete', @DATEFORMAT_ID=" + Convert.ToString(_obj_Smhr_DateFormat.DATEFORMAT_ID) +
                                        " , @DATEFORMAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DateFormat.LASTMDFBY) +
                                        " , @DATEFORMAT_LASTMDFBY ='" + _obj_Smhr_DateFormat.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_BUSINESSUNITBANK

        /// <summary>
        ///  Method to Get Business Unit Bank Based on the BUSUNTBANK_ID
        /// </summary>
        /// <param name="BUSUNTBANK_ID"></param>
        /// <returns>Datatable with BusinessUnit bank Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-21 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_BusinessUnitBank(SMHR_BUSINESSUNITBANK _obj_Smhr_BusinessUnitBank)
        {
            if (_obj_Smhr_BusinessUnitBank.OPERATION == operation.Select)
            {
                if (_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'select', @BUSUNTBANK_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnitBank.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'select', @BUSUNTBANK_ID =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ID));
            }
            else if (_obj_Smhr_BusinessUnitBank.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'Empty', @BUSUNTBANK_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_BUSINESSUNIT_ID));
            }
            else if (_obj_Smhr_BusinessUnitBank.OPERATION == operation.Combination)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'Combination' , @BUSUNTBANK_NAME ='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_NAME + " ', @BUSUNTBANK_ACCOUNTNO = '" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ACCOUNTNO + "',@BUSUNTBANK_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_BUSINESSUNIT_ID));
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'FillUnit'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_BUSINESSUNITBANK table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_BusinessUnitBank"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_BusinessUnitBank(SMHR_BUSINESSUNITBANK _obj_Smhr_BusinessUnitBank)
        {
            bool status = false;
            switch (_obj_Smhr_BusinessUnitBank.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'Insert', @BUSUNTBANK_BUSINESSUNIT_ID=" + Convert.ToInt32(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_BUSINESSUNIT_ID) +
                                        ", @BUSUNTBANK_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnitBank.ORGANISATION_ID +
                                        "', @BUSUNTBANK_NAME='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_NAME +
                                        "', @BUSUNTBANK_BRANCH='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_BRANCH +
                                        "', @BUSUNTBANK_ADDRESS='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ADDRESS +
                                        "', @BUSUNTBANK_ACCOUNTNO='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ACCOUNTNO +
                                        "', @BUSUNTBANK_ISACTIVE='" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ISACTIVE) +
                                        "', @BUSUNTBANK_ISDEFAULT='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ISDEFAULT +
                                        "', @BUSUNTBANK_SWIFT='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_BSBCODE +
                                        "', @BUSUNTBANK_CREATEDBY= " + Convert.ToString(_obj_Smhr_BusinessUnitBank.CREATEDBY) +
                                        " , @BUSUNTBANK_CREATEDDATE='" + _obj_Smhr_BusinessUnitBank.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BUSUNTBANK_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.LASTMDFBY) +
                                        " , @BUSUNTBANK_LASTMDFDATE='" + _obj_Smhr_BusinessUnitBank.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'Update',@BUSUNTBANK_ID=" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ID) +
                                        " , @BUSUNTBANK_BUSINESSUNIT_ID=" + Convert.ToInt32(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_BUSINESSUNIT_ID) +
                                        ", @BUSUNTBANK_ORGANISATION_ID = '" + _obj_Smhr_BusinessUnitBank.ORGANISATION_ID +
                                        "', @BUSUNTBANK_NAME='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_NAME +
                                        "', @BUSUNTBANK_BRANCH='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_BRANCH +
                                        "', @BUSUNTBANK_ADDRESS='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ADDRESS +
                                        "', @BUSUNTBANK_ACCOUNTNO='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ACCOUNTNO +
                                        "', @BUSUNTBANK_SWIFT='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_BSBCODE +
                                        "', @BUSUNTBANK_ISACTIVE='" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ISACTIVE) +
                                        "', @BUSUNTBANK_ISDEFAULT='" + _obj_Smhr_BusinessUnitBank.BUSUNTBANK_ISDEFAULT +
                                        "', @BUSUNTBANK_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.LASTMDFBY) +
                                        " , @BUSUNTBANK_LASTMDFDATE='" + _obj_Smhr_BusinessUnitBank.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUSINESSUNITBANK @Operation = 'Delete', @COUNTRY_ID=" + Convert.ToString(_obj_Smhr_BusinessUnitBank.BUSUNTBANK_ID) +
                                        " , @BUSUNTBANK_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BusinessUnitBank.LASTMDFBY) +
                                        " , @BUSUNTBANK_LASTMDFDATE='" + _obj_Smhr_BusinessUnitBank.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_JOBS

        /// <summary>
        ///  Method to Get Jobs Unit Based on the JOBS_ID
        /// </summary>
        /// <param name="JOBS_ID"></param>
        /// <returns>Datatable with SMHR_JOBS Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-24 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Jobs(SMHR_JOBS _obj_Smhr_Jobs)
        {
            if (_obj_Smhr_Jobs.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Jobs.JOBS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'select',@JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "',@JOBS_ISDELETED=" + (_obj_Smhr_Jobs.ISDELETED == null ? "null" : "'" + Convert.ToString(_obj_Smhr_Jobs.ISDELETED) + "'"));
                else
                    return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'select', @JOBS_ID=" + Convert.ToString(_obj_Smhr_Jobs.JOBS_ID) + "");
            }
            else if (_obj_Smhr_Jobs.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'position', @JOBS_ID=" + Convert.ToString(_obj_Smhr_Jobs.JOBS_ID) + ",@JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Jobs.OPERATION == operation.Delete1)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'loadactivejobs',@JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "',@JOBS_ISDELETED=" + (_obj_Smhr_Jobs.ISDELETED == null ? "null" : "'" + Convert.ToString(_obj_Smhr_Jobs.ISDELETED) + "'"));
            }
            /// FOR VALIDATING THE BUSINESS UNIT START DATE
            else if (_obj_Smhr_Jobs.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'VALIDATE',@JOB_BUID ='" + Convert.ToString(_obj_Smhr_Jobs.BUID) + "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "',@JOBS_ENDDATE='" + _obj_Smhr_Jobs.ENDDATE + "',@JOBS_STARTDATE='" + _obj_Smhr_Jobs.STARTDATE + "'");
            }
            else if (_obj_Smhr_Jobs.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'Get',@JOB_BUID ='" + Convert.ToString(_obj_Smhr_Jobs.BUID) + "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Jobs.JOBS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'Check',@JOBS_CODE ='" + Convert.ToString(_obj_Smhr_Jobs.JOBS_CODE) + "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_JOBS @Operation = 'Check', @JOBS_CODE ='" + Convert.ToString(_obj_Smhr_Jobs.JOBS_CODE) + "', @JOBS_ID =" + Convert.ToString(_obj_Smhr_Jobs.JOBS_ID) + ", @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the Jobs table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Jobs"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-11
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Jobs(SMHR_JOBS _obj_Smhr_Jobs)
        {
            bool status = false;
            switch (_obj_Smhr_Jobs.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBS @Operation = 'Insert', @JOBS_CODE='" + _obj_Smhr_Jobs.JOBS_CODE +
                                        "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID +
                                        "', @JOBS_DESC='" + _obj_Smhr_Jobs.JOBS_DESC
                                        //+ "', @JOBS_GRADE_ID=" + (_obj_Smhr_Jobs.JOBS_GRADE_ID == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_GRADE_ID))
                                        //+ " , @JOBS_MAXSAL=" + (_obj_Smhr_Jobs.JOBS_MAXSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MAXSAL))
                                        //+ " , @JOBS_MINSAL=" + (_obj_Smhr_Jobs.JOBS_MINSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MINSAL))

                                        +
                                        "' , @JOBS_STARTDATE=" + (_obj_Smhr_Jobs.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Jobs.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @JOBS_ENDDATE=" + (_obj_Smhr_Jobs.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Jobs.ENDDATE).ToString("MM/dd/yyyy") + "'")

                                        //+ " , @JOBS_SKILLS=" + (_obj_Smhr_Jobs.JOBS_SKILLS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_SKILLS + "'")
                                        +
                                        " , @JOBS_LOCATIONS=" + (_obj_Smhr_Jobs.JOBS_LOCATIONS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_LOCATIONS + "'") +
                                        ",@JOBS_STATUS=" + _obj_Smhr_Jobs.JOBS_STATUS +
                                        " , @JOBS_CREATEDBY= " + Convert.ToString(_obj_Smhr_Jobs.CREATEDBY) +
                                        " , @JOBS_CREATEDDATE='" + _obj_Smhr_Jobs.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @JOBS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Jobs.LASTMDFBY) +
                                        " , @JOBS_LASTMDFDATE ='" + _obj_Smhr_Jobs.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBS @Operation = 'Update', @JOBS_ID=" + Convert.ToString(_obj_Smhr_Jobs.JOBS_ID) +
                                        " , @JOBS_CODE='" + _obj_Smhr_Jobs.JOBS_CODE +
                                        "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID +
                                        "', @JOBS_DESC='" + _obj_Smhr_Jobs.JOBS_DESC
                                        //+ "', @JOBS_GRADE_ID=" + (_obj_Smhr_Jobs.JOBS_GRADE_ID == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_GRADE_ID))
                                        //+ " , @JOBS_MAXSAL=" + (_obj_Smhr_Jobs.JOBS_MAXSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MAXSAL))
                                        //+ " , @JOBS_MINSAL=" + (_obj_Smhr_Jobs.JOBS_MINSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MINSAL))

                                        +
                                        "' , @JOBS_STARTDATE=" + (_obj_Smhr_Jobs.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Jobs.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @JOBS_ENDDATE=" + (_obj_Smhr_Jobs.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Jobs.ENDDATE).ToString("MM/dd/yyyy") + "'")

                                        //+ " , @JOBS_SKILLS=" + (_obj_Smhr_Jobs.JOBS_SKILLS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_SKILLS + "'")
                                        +
                                        " , @JOBS_LOCATIONS=" + (_obj_Smhr_Jobs.JOBS_LOCATIONS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_LOCATIONS + "'") +
                                        ",@JOBS_STATUS=" + _obj_Smhr_Jobs.JOBS_STATUS +
                                        " , @JOBS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Jobs.LASTMDFBY) +
                                        " , @JOBS_LASTMDFDATE ='" + _obj_Smhr_Jobs.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1://Import Functionality
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBS @Operation = 'Import', @JOBS_CODE='" + _obj_Smhr_Jobs.JOBS_CODE +
                                        "', @JOBS_ORGANISATION_ID='" + _obj_Smhr_Jobs.ORGANISATION_ID +
                                        "', @JOBS_DESC='" + _obj_Smhr_Jobs.JOBS_DESC
                                        //+ "', @JOBS_GRADE_ID=" + (_obj_Smhr_Jobs.JOBS_GRADE_ID == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_GRADE_ID))
                                        //+ " , @JOBS_MAXSAL=" + (_obj_Smhr_Jobs.JOBS_MAXSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MAXSAL))
                                        //+ " , @JOBS_MINSAL=" + (_obj_Smhr_Jobs.JOBS_MINSAL == null ? "null" : Convert.ToString(_obj_Smhr_Jobs.JOBS_MINSAL))

                                        +
                                        "' , @JOBS_SDATE='" + _obj_Smhr_Jobs.SDATE +
                                        "' , @JOBS_EDATE='" + _obj_Smhr_Jobs.EDATE

                                        //+ "' , @JOBS_SKILLS=" + (_obj_Smhr_Jobs.JOBS_SKILLS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_SKILLS + "'")
                                        +
                                        " , @JOBS_LOCATIONS=" + (_obj_Smhr_Jobs.JOBS_LOCATIONS == null ? "null" : "'" + _obj_Smhr_Jobs.JOBS_LOCATIONS + "'") +
                                        " , @JOBS_CREATEDBY= " + Convert.ToString(_obj_Smhr_Jobs.CREATEDBY) +
                                        " , @JOBS_CREATEDDATE='" + _obj_Smhr_Jobs.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @JOBS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Jobs.LASTMDFBY) +
                                        " , @JOBS_LASTMDFDATE ='" + _obj_Smhr_Jobs.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBS @Operation = 'Delete', @JOBS_ID=" + Convert.ToString(_obj_Smhr_Jobs.JOBS_ID) +
                                        " , @BUSINESSUNIT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Jobs.LASTMDFBY) +
                                        " , @BUSINESSUNIT_LASTMDFDATE='" + _obj_Smhr_Jobs.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_POSITIONS

        /// <summary>
        ///  Method to Get Positions Based on the POSITIONS_ID
        /// </summary>
        /// <param name="POSITIONS_ID"></param>
        /// <returns>Datatable with SMHR_POSITIONS Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-26 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Positions(SMHR_POSITIONS _obj_Smhr_Positions)
        {
            if (_obj_Smhr_Positions.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Positions.POSITIONS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'select',@POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'select', @POSITIONS_ID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_ID) + ",@POSITIONS_JOBSID=" + _obj_Smhr_Positions.POSITIONS_JOBSID + ",@POSITIONS_ORGANISATION_ID='" + _obj_Smhr_Positions.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Positions.OPERATION == operation.Check)
            {
                if (_obj_Smhr_Positions.POSITIONS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Check', @POSITIONS_CODE ='" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_CODE) + "',@POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "',@POSITIONS_JOBSID= '" + _obj_Smhr_Positions.POSITIONS_JOBSID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Check', @POSITIONS_CODE ='" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_CODE) + "', @POSITIONS_ID =" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_ID) + ", @POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Positions.OPERATION == operation.JOBPOSITIONS)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'JOBPOSITIONS',@POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "'" + ",@POSITIONS_JOBSID='" + _obj_Smhr_Positions.POSITIONS_JOBSID + "'");
            }
            //else if (_obj_Smhr_Positions.OPERATION == operation.POSITIONSGRADE)
            //{
            //    return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'POSITIONSGRADE',@POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "'" + ",@POSITIONS_ID='" + _obj_Smhr_Positions.POSITIONS_ID + "'");
            //}
            else if (_obj_Smhr_Positions.OPERATION == operation.GETVACANCY)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'GETVACANCY',@POSITIONS_ORGANISATION_ID= '" + _obj_Smhr_Positions.ORGANISATION_ID + "'" + ",@POSITIONS_ID='" + _obj_Smhr_Positions.POSITIONS_ID + "',@PERIOD_ID='" + _obj_Smhr_Positions.POSITIN_PERIOD_ID + "'");
            }
            else if (_obj_Smhr_Positions.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Select2',@POSITIONS_ID='" + _obj_Smhr_Positions.POSITIONS_ID + "'");
            }
            else if (_obj_Smhr_Positions.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS @OPERATION = '" + _obj_Smhr_Positions.OPERATION +
                                    "', @POSITIONS_ID = " + _obj_Smhr_Positions.POSITIONS_ID);
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Empty', @POSITIONS_ID =" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_ID) + ",@POSITIONS_ORGANISATION_ID='" + _obj_Smhr_Positions.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        ///  Method to Get Positions Based on the BU_ID
        /// </summary>
        /// <param name="BU_ID"></param>
        /// <returns>Datatable with SMHR_POSITIONS AND SMHR_JOBLOCATIONS Information</returns>
        /// <remarks>
        ///  Author             : Joseph 
        ///  Created on         : 2009-11-21 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_BUPositions(SMHR_POSITIONS _obj_Smhr_Positions)
        {
            return ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'EMPTY',  " +
                                " @POSITIONS_ISDELETED = 1, " +
                                " @JOBLOC_BUSINESSUNIT_ID=" + Convert.ToString(_obj_Smhr_Positions.JOBLOC_BUSINESSUNIT_ID) +
                                ",@POSITIONS_ORGANISATION_ID='" + _obj_Smhr_Positions.ORGANISATION_ID + "'");
        }

        /// <summary>
        /// Method to Insert or update into the Positions table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Positions"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Positions(SMHR_POSITIONS _obj_Smhr_Positions)
        {
            bool status = false;
            switch (_obj_Smhr_Positions.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Insert', @POSITIONS_CODE='" + _obj_Smhr_Positions.POSITIONS_CODE +
                                        "', @POSITIONS_ORGANISATION_ID = '" + _obj_Smhr_Positions.ORGANISATION_ID +
                                        "', @POSITIONS_DESC='" + _obj_Smhr_Positions.POSITIONS_DESC +
                                        "', @POSITIONS_NOESTABLISHMENT='" + _obj_Smhr_Positions.POSITIONS_NOESTABLISHMENT +
                                        "', @POSITIONS_JOBSID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_JOBSID) +
                                        " , @POSITIONS_STATUS=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_STATUS) +
                                        " , @POSITIONS_STARTDATE=" + (_obj_Smhr_Positions.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Positions.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @POSITIONS_ENDDATE=" + (_obj_Smhr_Positions.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Positions.ENDDATE).ToString("MM/dd/yyyy") + "'") +
                                        ", @POSITIONS_GRADE_ID=" + (_obj_Smhr_Positions.POSITIONS_GRADE_ID == null ? "null" : Convert.ToString(_obj_Smhr_Positions.POSITIONS_GRADE_ID)) +
                                        " , @POSITIONS_SKILLS=" + (_obj_Smhr_Positions.POSITIONS_SKILLS == null ? "null" : "'" + _obj_Smhr_Positions.POSITIONS_SKILLS + "'") +
                                        " , @POSITIONS_CREATEDBY= " + Convert.ToString(_obj_Smhr_Positions.CREATEDBY) +
                                        " , @POSITIONS_QUALIFICATION= '" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_QUALIFICATION) +
                                        "' , @POSITIONS_CREATEDDATE='" + _obj_Smhr_Positions.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @POSITIONS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Positions.LASTMDFBY) +
                                        " , @POSITIONS_LASTMDFDATE ='" + _obj_Smhr_Positions.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "' , @ESTABLISHMENTS_PERIODID =" + _obj_Smhr_Positions.POSITIN_PERIOD_ID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Update', @POSITIONS_ID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_ID) +
                                        " , @POSITIONS_ORGANISATION_ID = " + _obj_Smhr_Positions.ORGANISATION_ID +
                                        " , @POSITIONS_CODE='" + _obj_Smhr_Positions.POSITIONS_CODE +
                                        "', @POSITIONS_DESC='" + _obj_Smhr_Positions.POSITIONS_DESC +
                                        "', @POSITIONS_NOESTABLISHMENT='" + _obj_Smhr_Positions.POSITIONS_NOESTABLISHMENT +
                                        "', @POSITIONS_JOBSID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_JOBSID) +
                                        " , @POSITIONS_STATUS=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_STATUS) +
                                        " , @POSITIONS_STARTDATE=" + (_obj_Smhr_Positions.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Positions.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                        " , @POSITIONS_ENDDATE=" + (_obj_Smhr_Positions.ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Positions.ENDDATE).ToString("MM/dd/yyyy") + "'") +
                                        ", @POSITIONS_GRADE_ID=" + (_obj_Smhr_Positions.POSITIONS_GRADE_ID == null ? "null" : Convert.ToString(_obj_Smhr_Positions.POSITIONS_GRADE_ID)) +
                                        " , @POSITIONS_MAXSAL=" + (_obj_Smhr_Positions.POSITIONS_MAXSAL == null ? "null" : Convert.ToString(_obj_Smhr_Positions.POSITIONS_MAXSAL)) +
                                        " , @POSITIONS_MINSAL=" + (_obj_Smhr_Positions.POSITIONS_MINSAL == null ? "null" : Convert.ToString(_obj_Smhr_Positions.POSITIONS_MINSAL)) +
                                        " , @POSITIONS_SKILLS=" + (_obj_Smhr_Positions.POSITIONS_SKILLS == null ? "null" : "'" + _obj_Smhr_Positions.POSITIONS_SKILLS + "'") +
                                        " , @POSITIONS_QUALIFICATION= '" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_QUALIFICATION) +
                                        "' , @POSITIONS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Positions.LASTMDFBY) +
                                        " , @POSITIONS_LASTMDFDATE ='" + _obj_Smhr_Positions.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "' , @ESTABLISHMENTS_PERIODID =" + _obj_Smhr_Positions.POSITIN_PERIOD_ID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1://Import Functionality
                    if (ExecuteNonQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Import', @POSITIONS_CODE='" + _obj_Smhr_Positions.POSITIONS_CODE +
                                        "', @POSITIONS_ORGANISATION_ID = '" + _obj_Smhr_Positions.ORGANISATION_ID +
                                        "', @POSITIONS_DESC='" + _obj_Smhr_Positions.POSITIONS_DESC +
                                        "', @POSITIONS_NOESTABLISHMENT='" + _obj_Smhr_Positions.POSITIONS_NOESTABLISHMENT +
                                        "', @POSITIONS_JOBSID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_JOBSID) +
                                        " , @POSITIONS_QUALIFICATION= '" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_QUALIFICATION) +
                                        "' , @POSITIONS_STATUS=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_STATUS) +
                                        " , @STARTDATE='" + _obj_Smhr_Positions.SDATE +
                                        "' , @ENDDATE='" + _obj_Smhr_Positions.EDATE +
                                        "' , @POSITIONS_CREATEDBY= " + Convert.ToString(_obj_Smhr_Positions.CREATEDBY) +
                                        " , @POSITIONS_CREATEDDATE='" + _obj_Smhr_Positions.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @POSITIONS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Positions.LASTMDFBY) +
                                        " , @POSITIONS_LASTMDFDATE ='" + _obj_Smhr_Positions.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_POSITIONS @Operation = 'Delete', @POSITIONS_ID=" + Convert.ToString(_obj_Smhr_Positions.POSITIONS_ID) +
                                        " , @POSITIONS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_Positions.LASTMDFBY) +
                                        " , @POSITIONS_LASTMDFDATE ='" + _obj_Smhr_Positions.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable Get_Emp_Position(int empID)
        {
            return ExecuteQuery("EXEC USP_SMHR_POSITIONS @OPERATION = 'GET_EMP_POSITION', @EMP_ID = " + empID);
        }

        #endregion

        #region SMHR_LOCATION

        /// <summary>
        ///  Method to Get Positions Based on the POSITIONS_ID
        /// </summary>

        /// </remarks>
        public static DataTable get_Location(SMHR_LOCATION _obj_smhr_loc)
        {
            if (_obj_smhr_loc.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOCATION @MODE = 'CHECK', @LOC_ID='" + _obj_smhr_loc.LOC_ID + "'");
            }
            else if (_obj_smhr_loc.MODE == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOCATION @MODE = 'CHECK1', @LOC_ORGID='" + _obj_smhr_loc.ORGANISATION_ID + "',@LOC_NAME='" + _obj_smhr_loc.LOC_NAME + "'");
            }
            else if (_obj_smhr_loc.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOCATION @MODE = 'CHECK2', @LOC_ORGID='" + _obj_smhr_loc.ORGANISATION_ID + "',@LOC_ID=" + _obj_smhr_loc.LOC_ID + "");
            }
            else if (_obj_smhr_loc.MODE == 0)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOCATION @MODE = 'SELECT1', @LOC_ORGID='" + _obj_smhr_loc.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LOCATION @MODE = 'SELECT', @LOC_ORGID='" + _obj_smhr_loc.ORGANISATION_ID + "'");
            }
        }

        public static bool set_Location(SMHR_LOCATION _obj_smhr_loc)
        {
            bool status = false;
            switch (_obj_smhr_loc.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOCATION @MODE = 'INSERT', @LOC_NAME='" + _obj_smhr_loc.LOC_NAME +
                                        "', @LOC_DESC='" + _obj_smhr_loc.LOC_DESC +
                                        "', @LOC_ORGID = '" + _obj_smhr_loc.ORGANISATION_ID +
                                        "', @LOC_ISACTIVE = '" + _obj_smhr_loc.ISACTIVE +
                                        "', @LOC_CREATEDBY= " + Convert.ToString(_obj_smhr_loc.CREATEDBY) +
                                        " , @LOC_CREATEDDATE='" + _obj_smhr_loc.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOC_LASTMDFBY =" + Convert.ToString(_obj_smhr_loc.LASTMDFBY) +
                                        " , @LOC_LASTMDFDATE='" + _obj_smhr_loc.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOCATION @MODE = 'Update',@LOC_ID=" + _obj_smhr_loc.LOC_ID + ",@LOC_DESC='" + _obj_smhr_loc.LOC_DESC +
                                        "', @LOC_ISACTIVE = '" + _obj_smhr_loc.ISACTIVE +
                                        "', @LOC_LASTMDFBY =" + Convert.ToString(_obj_smhr_loc.LASTMDFBY) +
                                        " , @LOC_LASTMDFDATE='" + _obj_smhr_loc.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_WORKINGHOURS

        /// <summary>
        ///  Method to Get Working Hours Based on the WRKHRS_ID
        /// </summary>
        /// <param name="WRKHRS_ID"></param>
        /// <returns>Datatable with SMHR_WORKINGHOURS Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-26 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_WorkingHours(SMHR_WORKINGHOURS _obj_Smhr_WorkingHours)
        {
            if (_obj_Smhr_WorkingHours.OPERATION == operation.Select)
            {
                if (_obj_Smhr_WorkingHours.WRKHRS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'select', @WRKHRS_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_WorkingHours.ORGANISATION_ID));
                else
                    return ExecuteQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'select', @WRKHRS_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_ID));
            }
            else if (_obj_Smhr_WorkingHours.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Empty', @WRKHRS_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_BUSINESSUNIT_ID));
            }
            else
            {
                if (_obj_Smhr_WorkingHours.WRKHRS_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Check', @WRKHRS_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_BUSINESSUNIT_ID) + ", @WRKHRS_DAY_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_DAY_ID));
                else
                    return ExecuteQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Check', @WRKHRS_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_BUSINESSUNIT_ID) + ", @WRKHRS_DAY_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_DAY_ID) + ", @WRKHRS_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.@WRKHRS_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the Working Hours table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_WorkingHours"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_WorkingHours(SMHR_WORKINGHOURS _obj_Smhr_WorkingHours)
        {
            bool status = false;
            switch (_obj_Smhr_WorkingHours.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Insert', @WRKHRS_BUSINESSUNIT_ID=" + _obj_Smhr_WorkingHours.WRKHRS_BUSINESSUNIT_ID +
                                        ", @WRKHRS_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_WorkingHours.ORGANISATION_ID) +
                                        " , @WRKHRS_DAY_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_DAY_ID) +
                                        " , @WRKHRS_NOOFHOURS=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_NOOFHOURS) +
                                        " , @WRKHRS_STARTTIME='" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_STARTTIME) +
                                        "', @WRKHRS_ENDTIME ='" + _obj_Smhr_WorkingHours.WRKHRS_ENDTIME +
                                        "', @WRKHRS_CREATEDBY = " + Convert.ToString(_obj_Smhr_WorkingHours.CREATEDBY) +
                                        " , @WRKHRS_CREATEDDATE='" + _obj_Smhr_WorkingHours.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @WRKHRS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_WorkingHours.LASTMDFBY) +
                                        " , @WRKHRS_LASTMDFDATE ='" + _obj_Smhr_WorkingHours.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Update', @WRKHRS_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_ID) +
                                        ", @WRKHRS_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_WorkingHours.ORGANISATION_ID) +
                                        " , @WRKHRS_BUSINESSUNIT_ID=" + _obj_Smhr_WorkingHours.WRKHRS_BUSINESSUNIT_ID +
                                        " , @WRKHRS_DAY_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_DAY_ID) +
                                        " , @WRKHRS_NOOFHOURS=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_NOOFHOURS) +
                                        " , @WRKHRS_STARTTIME='" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_STARTTIME) +
                                        "', @WRKHRS_ENDTIME ='" + _obj_Smhr_WorkingHours.WRKHRS_ENDTIME +
                                        "', @WRKHRS_CREATEDBY = " + Convert.ToString(_obj_Smhr_WorkingHours.CREATEDBY) +
                                        " , @WRKHRS_CREATEDDATE='" + _obj_Smhr_WorkingHours.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @WRKHRS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_WorkingHours.LASTMDFBY) +
                                        " , @WRKHRS_LASTMDFDATE ='" + _obj_Smhr_WorkingHours.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_WORKINGHOURS @Operation = 'Delete', @WRKHRS_ID=" + Convert.ToString(_obj_Smhr_WorkingHours.WRKHRS_ID) +
                                        " , @WRKHRS_LASTMDFBY  =" + Convert.ToString(_obj_Smhr_WorkingHours.LASTMDFBY) +
                                        " , @WRKHRS_LASTMDFDATE ='" + _obj_Smhr_WorkingHours.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPNOTES

        /// <summary>
        ///  Method to Get Notes on Employee Based on the EMPNOTES_ID
        /// </summary>
        /// <param name="WRKHRS_ID"></param>
        /// <returns>Datatable with SMHR_EMPNOTES Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_EmpNotes(SMHR_EMPNOTES _obj_Smhr_EmpNotes)
        {
            if (_obj_Smhr_EmpNotes.OPERATION == operation.Select)
            {
                if (_obj_Smhr_EmpNotes.EMPNOTES_ID == 0)
                    //return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'select',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "',@EMP_LOGIN_ID='"+_obj_Smhr_EmpNotes.LOGIN_ID+"'");
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'select',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "',@EMP_LOGIN_ID ='" + _obj_Smhr_EmpNotes.LOGIN_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'select', @EMPNOTES_ID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_ID) + ",@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_EmpNotes.OPERATION == operation.Empty)
            {
                if (_obj_Smhr_EmpNotes.EMPNOTES_EMPID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation='EMPTY',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation='EMPTY',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "', @EMPNOTES_EMPID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_EMPID) + "");
            }
            else if (_obj_Smhr_EmpNotes.OPERATION == operation.EMPTY_R)
            {
                if (_obj_Smhr_EmpNotes.EMPNOTES_EMPID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation='EMPTY_R',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation='EMPTY_R',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "', @EMPNOTES_EMPID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_EMPID) + "");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'FILLEMP',@ORGANISATION_ID='" + _obj_Smhr_EmpNotes.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the Working Hours table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_EmpNotes"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_EmpNotes(SMHR_EMPNOTES _obj_Smhr_EmpNotes)
        {
            bool status = false;
            switch (_obj_Smhr_EmpNotes.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'Insert', @EMPNOTES_EMPID=" + _obj_Smhr_EmpNotes.EMPNOTES_EMPID +
                                        " , @EMPNOTES_RPTMNGID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_RPTMNGID) +
                                        ", @ORGANISATION_ID=" + _obj_Smhr_EmpNotes.ORGANISATION_ID +
                                        " , @EMPNOTES_REMARKS='" + _obj_Smhr_EmpNotes.EMPNOTES_REMARKS +
                                        "', @EMPNOTES_REASON ='" + _obj_Smhr_EmpNotes.EMPNOTES_REASON +
                                        "', @EMPNOTES_BU = " + _obj_Smhr_EmpNotes.EMPNOTES_BU +
                                        " , @EMPNOTES_DATE ='" + _obj_Smhr_EmpNotes.EMPNOTES_DATE.ToString("MM/dd/yyyy") +
                                        "', @EMPNOTES_CREATEDBY = " + Convert.ToString(_obj_Smhr_EmpNotes.CREATEDBY) +
                                        " , @EMPNOTES_CREATEDDATE='" + _obj_Smhr_EmpNotes.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @EMPNOTES_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpNotes.LASTMDFBY) +
                                        " , @EMPNOTES_LASTMDFDATE ='" + _obj_Smhr_EmpNotes.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'Update', @EMPNOTES_ID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_ID) +
                                        " , @EMPNOTES_EMPID=" + _obj_Smhr_EmpNotes.EMPNOTES_EMPID +
                                        " , @EMPNOTES_RPTMNGID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_RPTMNGID) +
                                        " , @EMPNOTES_REMARKS='" + _obj_Smhr_EmpNotes.EMPNOTES_REMARKS +
                                        "', @EMPNOTES_BU = " + _obj_Smhr_EmpNotes.EMPNOTES_BU +
                                        ", @ORGANISATION_ID=" + _obj_Smhr_EmpNotes.ORGANISATION_ID +
                                        " , @EMPNOTES_REASON ='" + _obj_Smhr_EmpNotes.EMPNOTES_REASON +
                                        "', @EMPNOTES_DATE ='" + _obj_Smhr_EmpNotes.EMPNOTES_DATE.ToString("MM/dd/yyyy") +
                                        "', @EMPNOTES_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpNotes.LASTMDFBY) +
                                        " , @EMPNOTES_LASTMDFDATE ='" + _obj_Smhr_EmpNotes.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPNOTES @Operation = 'Delete', @EMPNOTES_ID=" + Convert.ToString(_obj_Smhr_EmpNotes.EMPNOTES_ID) +
                                        "', @EMPNOTES_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpNotes.LASTMDFBY) +
                                        " , @EMPNOTES_LASTMDFDATE ='" + _obj_Smhr_EmpNotes.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPDISCIPLINARYACTION

        /// <summary>
        ///  Method to Get disciplinary action Notes on Employee Based on the EMPDSPACT_ID
        /// </summary>
        /// <param name="WRKHRS_ID"></param>
        /// <returns>Datatable with SMHR_EMPDISCIPLINARYACTION Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_EmpDiscNotes(SMHR_EMPDISCIPLINARYACTION _obj_Smhr_EmpdisciplinaryAction)
        {
            if (_obj_Smhr_EmpdisciplinaryAction.OPERATION == operation.Select)
            {
                if (_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ID == 0)
                    return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'select',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_Smhr_EmpdisciplinaryAction.LOGIN_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'select', @EMPDSPACT_ID=" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ID) + ",@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'");
            }
            if (_obj_Smhr_EmpdisciplinaryAction.OPERATION == operation.Select_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'Select_Self',@REPORTING_EMP_ID='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_RPTMNGID + "', @ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_EmpdisciplinaryAction.OPERATION == operation.Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'Self', @EMP_ID=" + Convert.ToInt32(_obj_Smhr_EmpdisciplinaryAction.EMP_ID) + ",@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_EmpdisciplinaryAction.OPERATION == operation.FILLEMP_Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'FILLEMP_Edit',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_EmpdisciplinaryAction.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'Empty1',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "',@EMPDSPACT_BUID='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_BUID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'FILLEMP',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the  SMHR_EMPDISCIPLINARYACTION table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_EmpdisciplinaryAction"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_EmpDiscNotes(SMHR_EMPDISCIPLINARYACTION _obj_Smhr_EmpdisciplinaryAction)
        {
            bool status = false;
            switch (_obj_Smhr_EmpdisciplinaryAction.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'Insert', @EMPDSPACT_EMPID=" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_EMPID +
                                        " , @EMPDSPACT_RPTMNGID=" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_RPTMNGID) +
                                        " , @EMPDSPACT_REMARKS='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_REMARKS +
                                        "', @EMPDSPACT_REASON ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_REASON +
                                        "', @EMPDSPACT_DATE ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_DATE.ToString("MM/dd/yyyy") +
                                        "', @EMPDSPACT_ATTACHMENT ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ATTACHMENT +
                                        "', @EMPDSPACT_CREATEDBY = " + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.CREATEDBY) +
                                        " , @EMPDSPACT_CREATEDDATE='" + _obj_Smhr_EmpdisciplinaryAction.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @EMPDSPACT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.LASTMDFBY) +
                                        " , @EMPDSPACT_BUID = " + Convert.ToInt32(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_BUID) +
                                        " , @EMPDSPACT_LASTMDFDATE ='" + _obj_Smhr_EmpdisciplinaryAction.LASTMDFDATE.ToString("MM/dd/yyyy") + "',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPDISCIPLINARYACTION @Operation = 'Update', @EMPDSPACT_ID=" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ID) +
                                        " , @EMPDSPACT_EMPID=" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_EMPID +
                                        " , @EMPDSPACT_RPTMNGID=" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_RPTMNGID) +
                                        " , @EMPDSPACT_REMARKS='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_REMARKS +
                                        "', @EMPDSPACT_REASON ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_REASON +
                                        "', @EMPDSPACT_DATE ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_DATE.ToString("MM/dd/yyyy") +
                                        "', @EMPDSPACT_ATTACHMENT ='" + _obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ATTACHMENT +
                                        "', @EMPDSPACT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.LASTMDFBY) +
                                        " , @EMPDSPACT_BUID = " + Convert.ToInt32(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_BUID) +
                                        " , @EMPDSPACT_LASTMDFDATE ='" + _obj_Smhr_EmpdisciplinaryAction.LASTMDFDATE.ToString("MM/dd/yyyy") + "',@ORGANISATION_ID='" + _obj_Smhr_EmpdisciplinaryAction.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC SMHR_EMPDISCIPLINARYACTION @Operation = 'Delete', @EMPDSPACT_ID=" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.EMPDSPACT_ID) +
                                        "', @EMPDSPACT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpdisciplinaryAction.LASTMDFBY) +
                                        " , @EMPDSPACT_LASTMDFDATE ='" + _obj_Smhr_EmpdisciplinaryAction.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_BUSINESSUNIT_DETAILS

        public static DataTable get_BusinessUnitIDDetails(SMHR_BUSINESSUNITIDDETAILS _obj_Smhr_BuIDDetails)
        {
            if (_obj_Smhr_BuIDDetails.OPERATION == operation.Select)
            {
                if (_obj_Smhr_BuIDDetails.BUIDDETAILS_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'select', @BUIDDETAILS_ID =" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID));
            }
            else if (_obj_Smhr_BuIDDetails.OPERATION == operation.Check1)
            {
                if (_obj_Smhr_BuIDDetails.BUIDDETAILS_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Check1',@BUIDDETAILS_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_BuIDDetails.ORGANISATION_ID) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Check1', @BUIDDETAILS_ID ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID) + "',@BUIDDETAILS_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_BuIDDetails.ORGANISATION_ID) + "'");
            }
            else if (_obj_Smhr_BuIDDetails.OPERATION == operation.Validate)
            {
                if (_obj_Smhr_BuIDDetails.BUIDDETAILS_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Validate', @BUIDDETAILS_NAME ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_NAME) + "',@BUIDDETAILS_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_BuIDDetails.ORGANISATION_ID) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Validate', @BUIDDETAILS_NAME ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_NAME) + "', @BUIDDETAILS_ID ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID) + "',@BUIDDETAILS_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_BuIDDetails.ORGANISATION_ID) + "'");
            }
            else
            {
                if (_obj_Smhr_BuIDDetails.BUIDDETAILS_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Check', @BUIDDETAILS_NAME ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_NAME) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Check', @BUIDDETAILS_NAME ='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_NAME) + "', @BUIDDETAILS_ID =" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID));
            }
        }

        public static bool set_BusinessUnitIDDetails(SMHR_BUSINESSUNITIDDETAILS _obj_Smhr_BuIDDetails)
        {
            bool status = false;
            switch (_obj_Smhr_BuIDDetails.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Insert',@BUIDDETAILS_BUID='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_BUID) +
                                        "', @BUIDDETAILS_NAME='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_NAME +
                                        "', @BUIDDETAILS_DESCRIPTION='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_DESCRIPTION +
                                        "', @BUIDDETAILS_VALUE='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_VALUE +
                                        "',@BUIDDETAILS_ORGANISATION_ID='" + _obj_Smhr_BuIDDetails.ORGANISATION_ID +
                                        "' , @BUIDDETAILS_CREATEDBY= " + Convert.ToString(_obj_Smhr_BuIDDetails.CREATEDBY) +
                                        " , @BUIDDETAILS_CREATEDDATE='" + _obj_Smhr_BuIDDetails.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BUIDDETAILS_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BuIDDetails.LASTMDFBY) +
                                        " , @BUIDDETAILS_LASTMDFDATE ='" + _obj_Smhr_BuIDDetails.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Update', @BUIDDETAILS_ID='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID) +
                                        "' , @BUIDDETAILS_BUID='" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_BUID) +
                                        "',    @BUIDDETAILS_NAME='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_NAME +
                                        "', @BUIDDETAILS_DESCRIPTION='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_DESCRIPTION +
                                        "',@BUIDDETAILS_ORGANISATION_ID='" + _obj_Smhr_BuIDDetails.ORGANISATION_ID +
                                        "', @BUIDDETAILS_VALUE='" + _obj_Smhr_BuIDDetails.BUIDDETAILS_VALUE +
                                        "' , @BUIDDETAILS_CREATEDBY= " + Convert.ToString(_obj_Smhr_BuIDDetails.CREATEDBY) +
                                        " , @BUIDDETAILS_CREATEDDATE='" + _obj_Smhr_BuIDDetails.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BUIDDETAILS_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BuIDDetails.LASTMDFBY) +
                                        " , @BUIDDETAILS_LASTMDFDATE ='" + _obj_Smhr_BuIDDetails.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_BUIDDETAILS @Operation = 'Delete', @BUIDDETAILS_ID=" + Convert.ToString(_obj_Smhr_BuIDDetails.BUIDDETAILS_ID) +
                                        " , @BUIDDETAILS_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BuIDDetails.LASTMDFBY) +
                                        " , @BUIDDETAILS_LASTMDFDATE ='" + _obj_Smhr_BuIDDetails.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_DAYS

        public static DataTable get_Days()
        {
            return ExecuteQuery("EXEC USP_SMHR_DAYS @Operation = 'Select'");
        }

        #endregion

        #region SMHR_BANKBRANCH

        public static DataTable get_BankBranch(SMHR_BANKBRANCH _obj_Smhr_BankBanch)
        {
            if (_obj_Smhr_BankBanch.OPERATION == operation.Select)
            {
                if (_obj_Smhr_BankBanch.BRANCH_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'select',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'select', @BRANCH_ID =" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) + ",@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BankBanch.OPERATION == operation.Check)
            {
                if (_obj_Smhr_BankBanch.BRANCH_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Check', @BRANCH_CODE ='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_CODE) + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Check', @BRANCH_CODE ='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_CODE) + "', @BRANCH_ID =" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) + ",@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BankBanch.OPERATION == operation.Check1)
            {
                if (_obj_Smhr_BankBanch.BRANCH_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation='Check1',@HR_MASTER_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation='Check1',@BRANCH_ID='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_BankBanch.OPERATION == operation.Validate1)
            {
                if (_obj_Smhr_BankBanch.BRANCH_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation='Validate1',@BRANCH_BANK_ID='" + _obj_Smhr_BankBanch.BRANCH_BANK_ID + "',@BRANCH_CODE='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_CODE) + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation='Validate1',@BRANCH_CODE='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_CODE) + "',@BRANCH_ID ='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Empty', @BRANCH_BANK_ID ='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_BANK_ID) + "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID + "'");
            }
        }

        public static bool set_BankBranch(SMHR_BANKBRANCH _obj_Smhr_BankBanch)
        {
            bool status = false;
            switch (_obj_Smhr_BankBanch.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Insert',@BRANCH_BANK_ID='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_BANK_ID) +
                                        "', @BRANCH_CODE='" + _obj_Smhr_BankBanch.BRANCH_CODE +
                                        "', @BRANCH_NAME='" + _obj_Smhr_BankBanch.BRANCH_NAME +
                                        "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID +
                                        "' , @BRANCH_CREATEDBY= " + Convert.ToString(_obj_Smhr_BankBanch.CREATEDBY) +
                                        " , @BRANCH_CREATEDDATE='" + _obj_Smhr_BankBanch.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BRANCH_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BankBanch.LASTMDFBY) +
                                        " , @BRANCH_LASTMDFDATE ='" + _obj_Smhr_BankBanch.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Update', @BRANCH_ID='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) +
                                        "' , @BRANCH_BANK_ID='" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_BANK_ID) +
                                        "',@BRANCH_ORGANISATION_ID='" + _obj_Smhr_BankBanch.ORGANISATION_ID +
                                        "',    @BRANCH_CODE='" + _obj_Smhr_BankBanch.BRANCH_CODE +
                                        "', @BRANCH_NAME='" + _obj_Smhr_BankBanch.BRANCH_NAME +
                                        " ', @BRANCH_CREATEDBY= " + Convert.ToString(_obj_Smhr_BankBanch.CREATEDBY) +
                                        " , @BRANCH_CREATEDDATE='" + _obj_Smhr_BankBanch.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @BRANCH_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BankBanch.LASTMDFBY) +
                                        " , @BRANCH_LASTMDFDATE ='" + _obj_Smhr_BankBanch.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERBANKBRANCH @Operation = 'Delete', @BRANCH_ID=" + Convert.ToString(_obj_Smhr_BankBanch.BRANCH_ID) +
                                        " , @BRANCH_LASTMDFBY =" + Convert.ToString(_obj_Smhr_BankBanch.LASTMDFBY) +
                                        " , @BRANCH_LASTMDFDATE ='" + _obj_Smhr_BankBanch.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_LOGINTYPE

        /// <summary>
        ///  Method to Get SMHR_LOGINTYPE Based on the LOGTYP_ID
        /// </summary>
        /// <param name="LOGTYP_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_LoginType(SMHR_LOGINTYPE _obj_Smhr_LoginInfo)
        {
            if (_obj_Smhr_LoginInfo.OPERATION == operation.Select)
            {
                if (_obj_Smhr_LoginInfo.LOGTYP_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'select',@LOGTYP_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'select', @LOGTYP_ID =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_ID));
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'select1'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.LOADUSERGROUP)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'LOADUSERGROUP', @LOGTYP_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "',@LOGTYP_ID='" + _obj_Smhr_LoginInfo.LOGIN_ID + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'select2',@LOGTYP_ID='" + _obj_Smhr_LoginInfo.LOGTYP_ID + "'");
            }
            else
            {
                if (_obj_Smhr_LoginInfo.LOGTYP_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'Check',@LOGTYP_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "', @LOGTYP_CODE ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_CODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'Check',@LOGTYP_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "', @LOGTYP_CODE ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_CODE) + "', @LOGTYP_ID =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_LOGINTYPE table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_LoginInfo"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks> 
        public static bool set_LoginType(SMHR_LOGINTYPE _obj_Smhr_LoginInfo)
        {
            bool status = false;
            switch (_obj_Smhr_LoginInfo.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'Insert', @LOGTYP_CODE='" + _obj_Smhr_LoginInfo.LOGTYP_CODE +
                                        "', @LOGTYP_DESC='" + _obj_Smhr_LoginInfo.LOGTYP_DESC +
                                        "', @LOGTYP_CREATEDBY= " + Convert.ToString(_obj_Smhr_LoginInfo.CREATEDBY) +
                                        " , @LOGTYP_CREATEDDATE='" + _obj_Smhr_LoginInfo.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOGTYP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGTYP_LASTMDFDATE ='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "',@LOGTYP_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'Update',@LOGTYP_ID=" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_ID) +
                                        " , @LOGTYP_CODE='" + _obj_Smhr_LoginInfo.LOGTYP_CODE +
                                        "', @LOGTYP_DESC='" + _obj_Smhr_LoginInfo.LOGTYP_DESC +
                                        "', @LOGTYP_CREATEDBY= " + Convert.ToString(_obj_Smhr_LoginInfo.CREATEDBY) +
                                        " , @LOGTYP_CREATEDDATE='" + _obj_Smhr_LoginInfo.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOGTYP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGTYP_LASTMDFDATE ='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGINTYPE @Operation = 'Delete', @LOGTYP_ID=" + Convert.ToString(_obj_Smhr_LoginInfo.LOGTYP_ID) +
                                        " , @LOGTYP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGTYP_LASTMDFDATE='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TYPESECURITY

        /// <summary>
        ///  Method to Get SMHR_TYPESECURITY Based on the TYPSEC_ID
        /// </summary>
        /// <param name="TYPSEC_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_AssignPrivilage(SMHR_TYPESECURITY _obj_Smhr_TypeSecurity)
        {
            if (_obj_Smhr_TypeSecurity.OPERATION == operation.Select)
            {
                if (_obj_Smhr_TypeSecurity.TYPSEC_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'select', @TYPSEC_ID =" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_ID));
            }
            else if (_obj_Smhr_TypeSecurity.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Mode = 4, @FORM_MODULE_ID =" + Convert.ToString(_obj_Smhr_TypeSecurity.MODULE_ID) + ", @TYPSEC_LOGTYP_ID=" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID));
            }
            else if (_obj_Smhr_TypeSecurity.OPERATION == operation.Select3)
            {
                return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Mode = 6 ");
            }
            else
            {
                if (_obj_Smhr_TypeSecurity.TYPSEC_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Check', @TYPSEC_FORMS_ID =" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_FORMS_ID) + ", @TYPSEC_LOGTYP_ID=" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID));
                else
                    return ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Check', @TYPSEC_FORMS_ID =" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_FORMS_ID) + ", @TYPSEC_LOGTYP_ID =" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID) + ", @TYPSEC_ID=" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_ID));
            }
        }

        public static DataTable get_FormsbyModule(SMHR_FORMS _obj_Smhr_forms)
        {
            return Dal.ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Validate',@FORM_MODULE_ID = '" + _obj_Smhr_forms.FORMS_MODULE_ID + "'");
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_TYPESECURITY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_TypeSecurity"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks> 
        public static bool set_AssignPrivilage(SMHR_TYPESECURITY _obj_Smhr_TypeSecurity)
        {
            bool status = false;
            switch (_obj_Smhr_TypeSecurity.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Insert', @TYPSEC_FORMS_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_FORMS_ID +
                                        " , @TYPSEC_LOGTYP_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID +
                                        " , @TYPSEC_READ='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_READ) +
                                        "', @TYPSEC_WRITE='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_WRITE) +
                                        "', @TYPSEC_MODULE_ID='" + Convert.ToString(_obj_Smhr_TypeSecurity.MODULE_ID) +
                                        "',@TYPESEC_ORG_ID='" + _obj_Smhr_TypeSecurity.TYPESEC_ORG_ID + "', @TYPSEC_CREATEDBY= " + Convert.ToString(_obj_Smhr_TypeSecurity.CREATEDBY) +
                                        " , @TYPSEC_CREATEDDATE='" + _obj_Smhr_TypeSecurity.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @TYPSEC_LASTMDFBY ='" + Convert.ToString(_obj_Smhr_TypeSecurity.LASTMDFBY) +
                                        "',@SMHR_MODULE_SUPER_MODULE_ID=" + _obj_Smhr_TypeSecurity.SUPER_MODULE_ID +
                                        " , @TYPSEC_LASTMDFDATE ='" + _obj_Smhr_TypeSecurity.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Update', @TYPSEC_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_ID +
                                        " , @TYPSEC_FORMS_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_FORMS_ID +
                                        " , @TYPSEC_LOGTYP_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID +
                                        " , @TYPSEC_READ='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_READ) +
                                        "', @TYPSEC_WRITE='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_WRITE) +
                                        "', @TYPSEC_MODULE_ID='" + Convert.ToString(_obj_Smhr_TypeSecurity.MODULE_ID) +
                                        "', @TYPSEC_LASTMDFBY =" + Convert.ToString(_obj_Smhr_TypeSecurity.LASTMDFBY) +
                                        " , @TYPSEC_LASTMDFDATE ='" + _obj_Smhr_TypeSecurity.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Select3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TYPESECURITY @Mode = 5, @TYPSEC_FORMS_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_FORMS_ID +
                                        " , @TYPSEC_LOGTYP_ID=" + _obj_Smhr_TypeSecurity.TYPSEC_LOGTYP_ID +
                                        " , @TYPSEC_READ='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_READ) +
                                        "', @TYPSEC_WRITE='" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_WRITE) +
                                        "', @TYPSEC_MODULE_ID='" + Convert.ToString(_obj_Smhr_TypeSecurity.MODULE_ID) +
                                        "',@SMHR_MODULE_SUPER_MODULE_ID='" + _obj_Smhr_TypeSecurity.SUPER_MODULE_ID +
                                        "',@TYPESEC_ORG_ID='" + _obj_Smhr_TypeSecurity.TYPESEC_ORG_ID + "', @TYPSEC_CREATEDBY= " + Convert.ToString(_obj_Smhr_TypeSecurity.CREATEDBY) +
                                        " , @TYPSEC_CREATEDDATE='" + _obj_Smhr_TypeSecurity.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @TYPSEC_LASTMDFBY =" + Convert.ToString(_obj_Smhr_TypeSecurity.LASTMDFBY) +
                                        " , @TYPSEC_LASTMDFDATE ='" + _obj_Smhr_TypeSecurity.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TYPESECURITY @Operation = 'Delete', @TYPSEC_ID=" + Convert.ToString(_obj_Smhr_TypeSecurity.TYPSEC_ID) +
                                        " , @TYPSEC_LASTMDFBY =" + Convert.ToString(_obj_Smhr_TypeSecurity.LASTMDFBY) +
                                        " , @TYPSEC_LASTMDFDATE ='" + _obj_Smhr_TypeSecurity.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_FORMS

        public static DataTable get_Forms(SMHR_FORMS _obj_Smhr_Forms)
        {
            if (_obj_Smhr_Forms.FORMS_ID.ToString() == "0")
                return ExecuteQuery("EXEC USP_SMHR_FORMS @Operation = 'select'");
            else
                return ExecuteQuery("EXEC USP_SMHR_FORMS @Operation = 'select', @FORMS_ID =" + Convert.ToString(_obj_Smhr_Forms.FORMS_ID));
        }

        #endregion

        #region SMHR_ATTENDANCE

        public static DataTable get_Attendance(SMHR_ATTENDANCE _obj_Smhr_Attendance)
        {
            DataTable dt_Attendance = new DataTable();

            switch (_obj_Smhr_Attendance.OPERATION)
            {
                case operation.Select: // For Employees based on Business Unit and Attendace Date
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='EMPLOYEE', @ATTENDANCE_BU_ID='" + _obj_Smhr_Attendance.ATTENDANCE_BU_ID + "', @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) + "',@ATTENDANCE_PERIOD_DTL_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID) + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    break;
                case operation.Insert:
                    break;
                case operation.Update:
                    break;
                case operation.Check:  //  For Attendance Details fron SMHR_ATTENDANCE table if any
                    if (_obj_Smhr_Attendance.ATTENDANCE_MODE == true)
                        dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='CHECK', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                                     ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    else
                        dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='CHECKUNOIN', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                                     ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    break;
                case operation.Delete: // for Period
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='PERIOD'");
                    break;
                case operation.Empty: // For BusinessUnit
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='BUNIT'");
                    break;
                case operation.Get: // For BusinessUnit
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='Get',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    break;
                case operation.GetAttendance:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='GetAttendance',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    break;
                case operation.SELECTEMPLOYEE:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='SELECTEMPLOYEE',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    break;
                case operation.Validate:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='VALIDATE',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "',@ATTENDANCE_EMP_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_EMP_ID) + "',@ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) + "'");
                    break;
                case operation.Check1:
                    dt_Attendance = ExecuteQuery("EXEc USP_SMHR_ATTENDANCE @OPERATION='CHECK1',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    break;
                case operation.GET_MONTH:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='GET_MONTH',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    break;
                case operation.Select3:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='Select3',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "',@ATTENDANCE_PERIOD='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_ID + "'");
                    break;
                case operation.Check_New:  //  For Attendance Details fron SMHR_ATTENDANCE table if any
                    if (_obj_Smhr_Attendance.ATTENDANCE_MODE == true)
                        dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='CHECK_NEW', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                                     ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    else
                        dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='CHECKUNOIN', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                                     ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    break;
                case operation.Select_New: // For Employees based on Business Unit and Attendace Date
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='Select_New', @ATTENDANCE_EMP_ID='" + _obj_Smhr_Attendance.ATTENDANCE_EMP_ID + "',@ATTENDANCE_ORG_ID='" + _obj_Smhr_Attendance.ORGANISATION_ID + "'");
                    break;
                case operation.CHKATT:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='CHKATT', @ATTENDANCE_BU_ID='" + _obj_Smhr_Attendance.ATTENDANCE_BU_ID + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "'");
                    break;
                case operation.Select4:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='Select4',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "',@ATTENDANCE_PERIOD='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_ID + "'");
                    break;
                case operation.Select1:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='Select1',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID + "',@ATTENDANCE_PERIOD='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_ID +
                                                 "',@ATTENDANCE_EMP_ID='" + _obj_Smhr_Attendance.ATTENDANCE_EMP_ID + "'");
                    break;
                default:
                    break;
            }

            return dt_Attendance;
        }

        public static DataTable get_Attendance1(SMHR_ATTENDANCE _obj_Smhr_Attendance, int pageSize, int PageCount)
        {
            DataTable dt_Attendance = new DataTable();

            switch (_obj_Smhr_Attendance.OPERATION)
            {
                case operation.GetAttendance:
                    dt_Attendance = ExecuteQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='GetAttendance1',@ATTENDANCE_BU_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) + "',@ATTENDANCE_PERIOD_DTL_ID='" + _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID +
                                                 "', @PageSize='" + pageSize +
                                                 "', @Page ='" + PageCount + "'");
                    break;
                default:
                    break;
            }

            return dt_Attendance;
        }

        public static bool set_Attendance(SMHR_ATTENDANCE _obj_Smhr_Attendance)
        {
            bool status = false;
            switch (_obj_Smhr_Attendance.OPERATION)
            {
                case operation.Select:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='EMPLOYEE', @ATTENDANCE_BU_ID='" + _obj_Smhr_Attendance.ATTENDANCE_BU_ID + "', @ATTENDANCE_DATE='" + _obj_Smhr_Attendance.ATTENDANCE_DATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='INSERT', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                        ", @ATTENDANCE_PERIOD_DTL_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID) +
                                        ", @ATTENDANCE_EMP_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_EMP_ID) +
                                        ", @ATTENDANCE_DATE='" + _obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy") +
                                        "' , @ATTENDANCE_STATUS='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_STATUS)
                                        //+ "', @ATTENDANCE_INTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_INTIME)
                                        // + "', @ATTENDANCE_OUTTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_OUTTIME)
                                        +
                                        "',@ATTENDANCE_ORG_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ORGANISATION_ID) +
                                        "', @ATTENDANCE_FINALIZE=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_FINALIZE) +
                                        ",@ATTENDANCE_NOOFHOURS=" + Convert.ToDouble(_obj_Smhr_Attendance.ATTENDANCE_NOOFHOURS) +
                                        ",@ATTENDANCE_CREATEDBY=" + (_obj_Smhr_Attendance.CREATEDBY) +
                                        ",@ATTENDANCE_CREATEDDATE='" + _obj_Smhr_Attendance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "',@ATTENDANCE_MODIFIEDBY=" + (_obj_Smhr_Attendance.LASTMDFBY) +
                                        ",@ATTENDANCE_MODIFIEDDATE='" + _obj_Smhr_Attendance.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='INSERT1', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                        ", @ATTENDANCE_PERIOD_DTL_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID) +
                                        ", @ATTENDANCE_EMP_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_EMP_ID) +
                                        ", @DATE_string = '" + _obj_Smhr_Attendance.DATE_STRING + "'" +
                                        " , @ATTENDANCE_STATUS=" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_STATUS)
                                        //+ ", @ATTENDANCE_INTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_INTIME)
                                        //+ "', @ATTENDANCE_OUTTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_OUTTIME)
                                        +
                                        ",@ATTENDANCE_ORG_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ORGANISATION_ID) +
                                        "', @ATTENDANCE_FINALIZE=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_FINALIZE) +
                                        ",@ATTENDANCE_NOOFHOURS=" + Convert.ToDouble(_obj_Smhr_Attendance.ATTENDANCE_NOOFHOURS) +
                                        ",@ATTENDANCE_CREATEDBY=" + (_obj_Smhr_Attendance.CREATEDBY) +
                                        ",@ATTENDANCE_CREATEDDATE='" + _obj_Smhr_Attendance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (_obj_Smhr_Attendance.ATTENDANCE_MODE == true)
                    {
                        if (ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='UPDATESUB', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                            ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) +
                                            "', @ATTENDANCE_EMP_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_EMP_ID) +
                                            ", @ATTENDANCE_PERIOD_DTL_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID) +
                                            ", @ATTENDANCE_STATUS=" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_STATUS)
                                            // + " , @ATTENDANCE_INTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_INTIME)
                                            // + "', @ATTENDANCE_OUTTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_OUTTIME)
                                            +
                                            ",@ATTENDANCE_ORG_ID='" + Convert.ToInt32(_obj_Smhr_Attendance.ORGANISATION_ID) +
                                            "', @ATTENDANCE_FINALIZE=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_FINALIZE) +
                                            ",@ATTENDANCE_NOOFHOURS=" + Convert.ToDouble(_obj_Smhr_Attendance.ATTENDANCE_NOOFHOURS) +
                                            ",@ATTENDANCE_CREATEDBY=" + (_obj_Smhr_Attendance.CREATEDBY) +
                                            ",@ATTENDANCE_CREATEDDATE='" + _obj_Smhr_Attendance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                            "'"))
                            status = true;
                        else
                            status = false;
                    }
                    else
                    {
                        if (ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCE @OPERATION='UPDATEFINAL', @ATTENDANCE_BU_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_BU_ID) +
                                            ", @ATTENDANCE_DATE='" + Convert.ToDateTime(_obj_Smhr_Attendance.ATTENDANCE_DATE.ToString("MM/dd/yyyy")) +
                                            "', @ATTENDANCE_EMP_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_EMP_ID) +
                                            ", @ATTENDANCE_STATUS=" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_STATUS) +
                                            ", @ATTENDANCE_FINALIZE=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_FINALIZE) +
                                            ",@ATTENDANCE_NOOFHOURS=" + Convert.ToDouble(_obj_Smhr_Attendance.ATTENDANCE_NOOFHOURS) +
                                            ",@ATTENDANCE_PERIOD_DTL_ID=" + Convert.ToInt32(_obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID) +
                                            ",@DATE_string = '" + _obj_Smhr_Attendance.DATE_STRING + "'"
                                            //+ ",@ATTENDANCE_INTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_INTIME)
                                            // + "',@ATTENDANCE_OUTTIME='" + Convert.ToString(_obj_Smhr_Attendance.ATTENDANCE_OUTTIME + "'")
                                            +
                                            ",@ATTENDANCE_CREATEDBY=" + (_obj_Smhr_Attendance.CREATEDBY) +
                                            ",@ATTENDANCE_CREATEDDATE='" + _obj_Smhr_Attendance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                            "',@ATTENDANCE_MODIFIEDBY=" + (_obj_Smhr_Attendance.LASTMDFBY) +
                                            ",@ATTENDANCE_MODIFIEDDATE='" + _obj_Smhr_Attendance.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                            "'"))
                            status = true;
                        else
                            status = false;
                    }
                    break;
                case operation.Insert2:
                    List<SqlParameter> lstSqlparams = new List<SqlParameter>();
                    lstSqlparams.Add(new SqlParameter("@OPERATION", "INSERT"));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_PERIOD_DTL_ID", _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_PERIOD", _obj_Smhr_Attendance.ATTENDANCE_PERIOD_ID));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_BU_ID", _obj_Smhr_Attendance.ATTENDANCE_BU_ID));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_ORG_ID", _obj_Smhr_Attendance.ORGANISATION_ID));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_CREATEDDATE", _obj_Smhr_Attendance.CREATEDDATE));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE_CREATEDBY", _obj_Smhr_Attendance.CREATEDBY));
                    //lstSqlparams.Add(new SqlParameter("@BULKATTENDANCE", _obj_Smhr_Attendance.dtEmpAttendance));
                    lstSqlparams.Add(new SqlParameter("@ATTENDANCE", _obj_Smhr_Attendance.dtEmpAttendance));
                    //int result = ExecuteNonQuery("USP_SMHR_ATTENDANCE_TEST", lstSqlparams.ToArray());
                    int result = ExecuteNonQuery("USP_SMHR_ATTENDANCE_TEST_COMESA", lstSqlparams.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_BulkAttendance(SMHR_ATTENDANCE _obj_Smhr_Attendance)
        {
            try
            {
                bool status = false;
                switch (_obj_Smhr_Attendance.OPERATION)
                {
                    case operation.Insert2:
                        List<SqlParameter> lstSqlparams = new List<SqlParameter>();
                        lstSqlparams.Add(new SqlParameter("@OPERATION", "INSERT"));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_PERIOD_DTL_ID", _obj_Smhr_Attendance.ATTENDANCE_PERIOD_DTL_ID));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_PERIOD", _obj_Smhr_Attendance.ATTENDANCE_PERIOD_ID));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_BU_ID", _obj_Smhr_Attendance.ATTENDANCE_BU_ID));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_ORG_ID", _obj_Smhr_Attendance.ORGANISATION_ID));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_CREATEDDATE", _obj_Smhr_Attendance.CREATEDDATE));
                        lstSqlparams.Add(new SqlParameter("@ATTENDANCE_CREATEDBY", _obj_Smhr_Attendance.CREATEDBY));
                        lstSqlparams.Add(new SqlParameter("@BULKATTENDANCE", _obj_Smhr_Attendance.dtEmpAttendance));
                        //lstSqlparams.Add(new SqlParameter("@ATTENDANCE", _obj_Smhr_Attendance.dtEmpAttendance));
                        int result = ExecuteNonQuery("USP_SMHR_ATTENDANCE_TEST", lstSqlparams.ToArray());
                        //int result = ExecuteNonQuery("USP_SMHR_ATTENDANCE_TEST_COMESA", lstSqlparams.ToArray());
                        //if (result > 0)
                        status = true;
                        //else
                        // status = false;
                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region SMHR_LOGININFO

        /// <summary>
        ///  Method to Get SMHR_LOGININFO Based on the LOGIN_ID
        /// </summary>
        /// <param name="LOGIN_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_LoginInfo(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            if (_obj_Smhr_LoginInfo.OPERATION == operation.Select)
            {
                if (_obj_Smhr_LoginInfo.LOGIN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'select', @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'select', @LOGIN_ID =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_ID));
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Select3)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'select3', @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "',@LOGIN_EMP_ID='" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'getforms', " +
                                    " @LOGIN_USERNAME ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_USERNAME) + "'" +
                                    ", @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "',@LOGIN_PASS_CODE = '" + _obj_Smhr_LoginInfo.LOGIN_PASS_CODE
                                    + "',@LOGIN_ID='" + _obj_Smhr_LoginInfo.LOGIN_ID + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Empty', @LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.LOADUSERGROUP)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'LOADUSERGROUP', @LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "',@LOGTYP_ID='" + _obj_Smhr_LoginInfo.LOGIN_TYPE + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.getLogin)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation='getLogin',@LOGIN_EMP_ID='" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "',@LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.LOGIN_ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Select4)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select4',@LOGIN_EMP_ID='" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "'");
            }
            else
            {
                if (_obj_Smhr_LoginInfo.LOGIN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Check', " +
                                        " @LOGIN_USERNAME ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_USERNAME) + "'" +
                                        ", @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Check', " +
                                        "@LOGIN_USERNAME ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_USERNAME) + "', " +
                                        " @LOGIN_ID=" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_ID) + "" +
                                        ", @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'" +
                                        ",@LOGIN_TYPE='" + _obj_Smhr_LoginInfo.LOGIN_TYPE + "'");
            }
        }

        public static DataTable get_Login(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select', @LOGIN_USERNAME ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_USERNAME) + "'" +
                                ", @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
        }

        public static DataTable get_Login_Validate(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Check1', " +
                                " @LOGIN_USERNAME ='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_USERNAME) + "'" +
                                ",@LOGIN_PASS_CODE = '" + _obj_Smhr_LoginInfo.LOGIN_PASS_CODE + "'" +
                                ",@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
        }

        public static DataTable get_Loginval(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login',@LOGIN_ID = '" + _obj_Smhr_LoginInfo.LOGIN_ID + "'");
        }

        public static DataTable get_Logindetails(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login1',@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.LOGIN_ORGANISATION_ID + "'");
        }

        public static DataTable get_Loginusergroups(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login2',@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.LOGIN_ORGANISATION_ID + "'");
        }

        public static DataTable get_usergroups(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login3'");
        }

        public static DataTable get_priviliges(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login4'");
        }

        public static DataTable get_mac(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Get'");
        }

        public static DataTable get_LoginInfo1(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            if (_obj_Smhr_LoginInfo.OPERATION == operation.Select1)
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select1'");
            else if (_obj_Smhr_LoginInfo.OPERATION == operation.Select2)
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select2',@LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select5',@LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID
                                        + "', @LOGIN_EMP_ID ='" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "'");
        }

        public static DataTable get_adminlogins(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select_admins',@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
        }

        public static DataTable get_userpriviliges(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Login5',@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.LOGIN_ORGANISATION_ID + "'");
        }

        public static DataTable get_emp(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            if (_obj_Smhr_LoginInfo.OPERATION == operation.CheckEmp)

                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'CheckEmp',@LOGIN_EMP_ID = '" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "',@LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Select_New',@LOGIN_EMP_ID = '" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "',@LOGIN_ORGANISATION_ID='" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
        }

        public static DataTable get_BU_Admins(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Get_BU'");
        }

        public static DataTable get_DateFormat(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            if (_obj_Smhr_LoginInfo.OPERATION == operation.Empty1)
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Empty1',@LOGIN_EMP_ID = '" + _obj_Smhr_LoginInfo.LOGIN_EMP_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Empty2',@LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'");
        }

        public static bool Upadate_Admins(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            try
            {
                bool status = false;
                switch (_obj_Smhr_LoginInfo.OPERATION)
                {
                    case operation.Update_Bu:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_LOGININFO @OPERATION='Update_Bu',@LOGIN_BUSINESSUNITID='" + _obj_Smhr_LoginInfo.LOGIN_BUSINESSUNITID + "',@LOGIN_ID='" + _obj_Smhr_LoginInfo.LOGIN_ID + "'"))
                        {
                            status = true;
                        }
                        break;
                    default:
                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_LOGININFO table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_LoginInfo"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-31
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks> 
        public static bool set_LoginInfo(SMHR_LOGININFO _obj_Smhr_LoginInfo)
        {
            bool status = false;
            switch (_obj_Smhr_LoginInfo.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Insert',  @LOGIN_USERNAME='" + _obj_Smhr_LoginInfo.LOGIN_USERNAME +
                                        "', @LOGIN_PASSWORD='" + _obj_Smhr_LoginInfo.LOGIN_PASSWORD +
                                        "', @LOGIN_EMP_ID =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_EMP_ID) +
                                        " , @LOGIN_EMAILID='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_EMAILID) +
                                        "', @LOGIN_TYPE =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_TYPE) +
                                        " , @LOGIN_STATUS='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_STATUS) +
                                        "', @LOGIN_BUSINESSUNITID='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_BUSINESSUNITID) +
                                        "', @LOGIN_CREATEDBY= " + Convert.ToString(_obj_Smhr_LoginInfo.CREATEDBY) +
                                        ",  @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'" +
                                        ",  @LOGIN_PASS_CODE = '" + _obj_Smhr_LoginInfo.LOGIN_PASS_CODE + "'" +
                                        " , @LOGIN_CREATEDDATE='" + _obj_Smhr_LoginInfo.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOGIN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGIN_LASTMDFDATE ='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Update', @LOGIN_ID=" + _obj_Smhr_LoginInfo.@LOGIN_ID +
                                        " , @LOGIN_USERNAME='" + _obj_Smhr_LoginInfo.LOGIN_USERNAME +
                                        "', @LOGIN_PASSWORD='" + _obj_Smhr_LoginInfo.LOGIN_PASSWORD +
                                        "', @LOGIN_EMP_ID =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_EMP_ID) +
                                        " , @LOGIN_EMAILID='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_EMAILID) +
                                        "', @LOGIN_TYPE =" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_TYPE) +
                                        " , @LOGIN_STATUS='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_STATUS) +
                                        "', @LOGIN_BUSINESSUNITID='" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_BUSINESSUNITID) +
                                        "', @LOGIN_ORGANISATION_ID = '" + _obj_Smhr_LoginInfo.ORGANISATION_ID + "'" +
                                        ",  @LOGIN_PASS_CODE = '" + _obj_Smhr_LoginInfo.LOGIN_PASS_CODE + "'" +
                                        ",  @LOGIN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGIN_LASTMDFDATE ='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOGININFO @Operation = 'Delete', @LOGIN_ID=" + Convert.ToString(_obj_Smhr_LoginInfo.LOGIN_ID) +
                                        " , @LOGIN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoginInfo.LASTMDFBY) +
                                        " , @LOGIN_LASTMDFDATE ='" + _obj_Smhr_LoginInfo.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_LEAVEAPP

        /// <summary>
        ///  Method to Get SMHR_LEAVEAPP Based on the LEAVEAPP_ID
        /// </summary>
        /// <param name="LEAVEAPP_ID"></param>
        /// <returns>Datatable with SMHR_LEAVEAPP Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-09-02
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_LeaveApp(SMHR_LEAVEAPP _obj_Smhr_LeaveApp)
        {
            if (_obj_Smhr_LeaveApp.OPERATION == operation.Select)
            {
                if (_obj_Smhr_LeaveApp.LEAVEAPP_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'select', @ORGANISATION_ID = " + _obj_Smhr_LeaveApp.ORGANISATION_ID + ",@EMP_LOGIN_ID='" + _obj_Smhr_LeaveApp.LOGIN_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'select', @LEAVEAPP_ID =" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_ID));
            }

            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'GET_LEAVES', @ORGANISATION_ID = " + _obj_Smhr_LeaveApp.ORGANISATION_ID);
            }

            # region RAJ

            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Available)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'LEAVEDETAILS', @ORGANISATION_ID = " + _obj_Smhr_LeaveApp.ORGANISATION_ID + ",@EMP_LOGIN_ID='" + _obj_Smhr_LeaveApp.LOGIN_ID + "',@LEAVEAPP_EMP_ID = " + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Delete)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'EMPLOYEEUNDREP', @ORGANISATION_ID = " + _obj_Smhr_LeaveApp.ORGANISATION_ID + ",@EMP_LOGIN_ID='" + _obj_Smhr_LeaveApp.LOGIN_ID + "',@LEAVEAPP_EMP_ID = " + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "");
            }

            #endregion

            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Insert)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'FILLLEAVE', @LEAVEAPP_EMP_ID = " + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID);
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'DAYS', @LEAVEAPP_EMP_ID = '" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID +
                                    "', @LEAVEAPP_LEAVETYPE_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID +
                                    "', @LEAVEAPP_FROMDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE.ToString("MM/dd/yyyy") +
                                    "', @LEAVEAPP_TODATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_TODATE.ToString("MM/dd/yyyy") +
                                    "', @LEAVEAPP_FIRSTHALF='" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_FIRSTHALF) +
                                    "', @LEAVEAPP_SECONDHALF='" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_SECONDHALF) + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Update)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Gethalf', @LEAVEAPP_LEAVETYPE_ID = " + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID + ", @LEAVEAPP_EMP_ID=" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID);
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPPSTATUS @operation='Select_New',@EMP_ID='" + _obj_Smhr_LeaveApp.EMP_ID + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Check_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPPSTATUS @operation='Check_New',@LEAVEAPP_STATUS='" + _obj_Smhr_LeaveApp.LEAVEAPP_STATUS + "',@LeaveApp_ApprovedBy='" + _obj_Smhr_LeaveApp.LEAVEAPP_APPROVEDBY + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @operation='Check1',@LEAVEAPP_EMP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "',@LEAVEAPP_FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@LEAVEAPP_TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@LEAVEAPP_ORGANISATION_ID='" + _obj_Smhr_LeaveApp.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @OPERATION='VALIDATE',@LEAVEAPP_EMP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "',@LEAVEAPP_ORGANISATION_ID='" + _obj_Smhr_LeaveApp.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @OPERATION='Select1',@LEAVEAPP_EMP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "',@LEAVEAPP_LEAVETYPE_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.VALIDATEPERIOD)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @OPERATION='GET_DAYS',@LEAVEAPP_FROMDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE
                                + "',@LEAVEAPP_TODATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_TODATE + "', @SD = " + _obj_Smhr_LeaveApp.SD + ", @ED = " + _obj_Smhr_LeaveApp.ED);
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.EMPTY_R)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @OPERATION = 'EMPTY_R', @LEAVEAPP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_LeaveApp.BUSINESSUNIT_ID) +
                                    ", @LEAVEAPP_EMP_ID = " + (_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID));
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.Validate1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Validate1', @EMP_REPORTINGEMPLOYEE = '" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID +
                                    "',@EMP_ORGANISATION_ID=" + _obj_Smhr_LeaveApp.ORGANISATION_ID +
                                    ",@EMP_LOGIN_ID='" + _obj_Smhr_LeaveApp.LOGIN_ID + "'");
            }
            else if (_obj_Smhr_LeaveApp.OPERATION == operation.CHECKEXISTS)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'CHECKEXISTS', @LEAVEAPP_LEAVETYPE_ID = " + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID);
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'check', @EMP_REPORTINGEMPLOYEE = '" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID + "',@EMP_ORGANISATION_ID=" + _obj_Smhr_LeaveApp.ORGANISATION_ID + "");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_LEAVEAPP table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_LeaveApp"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-09-02
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_LeaveApp(SMHR_LEAVEAPP _obj_Smhr_LeaveApp)
        {
            bool status = false;
            switch (_obj_Smhr_LeaveApp.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Insert', @LEAVEAPP_EMP_ID=" + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID +
                                        " , @LEAVEAPP_LEAVETYPE_ID= " + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID +
                                        " , @LEAVEAPP_STATUS= " + _obj_Smhr_LeaveApp.LEAVEAPP_STATUS +
                                        " , @LEAVEAPP_APPLIEDDATE= '" + _obj_Smhr_LeaveApp.LEAVEAPP_APPLIEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_FROMDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_TODATE= '" + _obj_Smhr_LeaveApp.LEAVEAPP_TODATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_FIRSTHALF= '" + _obj_Smhr_LeaveApp.LEAVEAPP_FIRSTHALF.ToString() +
                                        "', @LEAVEAPP_SECONDHALF= '" + _obj_Smhr_LeaveApp.LEAVEAPP_SECONDHALF.ToString() +
                                        //"', @LEAVEAPP_DAYS=" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS +
                                        "', @LEAVEAPP_DOCUMENT = '" + _obj_Smhr_LeaveApp.LEAVEAPP_DOCUMENT +
                                        "', @LEAVEAPP_REASON= '" + _obj_Smhr_LeaveApp.LEAVEAPP_REASON +
                                        "', @LEAVEAPP_ORGANISATION_ID='" + _obj_Smhr_LeaveApp.ORGANISATION_ID +
                                        "', @LEAVEAPP_CREATEDBY= " + Convert.ToString(_obj_Smhr_LeaveApp.CREATEDBY) +
                                        " , @LEAVEAPP_CREATEDDATE='" + _obj_Smhr_LeaveApp.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LASTMDFBY) +
                                        " , @LEAVEAPP_LASTMDFDATE='" + _obj_Smhr_LeaveApp.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_INCIDENT_ID =" + _obj_Smhr_LeaveApp.LEAVEAPP_INCIDENT_ID +
                                        ",  @LEAVEAPP_CAL_PERIOD = " + _obj_Smhr_LeaveApp.LEAVEAPP_CAL_PERIOD +
                                        ",  @LEAVEAPP_DAYS = " + _obj_Smhr_LeaveApp.LEAVEAPPDAYS))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Update',@LEAVEAPP_ID=" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_ID) +
                                        " , @LEAVEAPP_LEAVETYPE_ID=" + _obj_Smhr_LeaveApp.LEAVEAPP_LEAVETYPE_ID +
                                        " , @LEAVEAPP_EMP_ID= " + _obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID +
                                        " , @LEAVEAPP_STATUS= " + _obj_Smhr_LeaveApp.LEAVEAPP_STATUS +
                                        " , @LEAVEAPP_APPLIEDDATE= '" + _obj_Smhr_LeaveApp.LEAVEAPP_APPLIEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_FROMDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_TODATE= '" + _obj_Smhr_LeaveApp.LEAVEAPP_TODATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_FIRSTHALF= '" + _obj_Smhr_LeaveApp.LEAVEAPP_FIRSTHALF.ToString() +
                                        "', @LEAVEAPP_SECONDHALF= '" + _obj_Smhr_LeaveApp.LEAVEAPP_SECONDHALF.ToString() +
                                        //"', @LEAVEAPP_DAYS=" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS +
                                        "', @LEAVEAPP_DOCUMENT = '" + _obj_Smhr_LeaveApp.LEAVEAPP_DOCUMENT +
                                        "', @LEAVEAPP_REASON= '" + _obj_Smhr_LeaveApp.LEAVEAPP_REASON +
                                        "', @LEAVEAPP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LASTMDFBY) +
                                        " , @LEAVEAPP_LASTMDFDATE='" + _obj_Smhr_LeaveApp.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_INCIDENT_ID =" + _obj_Smhr_LeaveApp.LEAVEAPP_INCIDENT_ID +
                                        " , @LEAVEAPP_CAL_PERIOD = " + _obj_Smhr_LeaveApp.LEAVEAPP_CAL_PERIOD +
                                        ",  @LEAVEAPP_DAYS = " + _obj_Smhr_LeaveApp.LEAVEAPPDAYS))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Delete', @LEAVEAPP_ID=" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_ID) +
                                        " , @LEAVEAPP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LASTMDFBY) +
                                        " , @LEAVEAPP_LASTMDFDATE='" + _obj_Smhr_LeaveApp.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Rollback', @LEAVEAPP_APPROVEDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_APPROVEDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVE_ROLLBACKDATE='" + _obj_Smhr_LeaveApp.LEAVE_ROLLBACKDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_STATUS=" + _obj_Smhr_LeaveApp.LEAVEAPP_STATUS +
                                        " , @LEAVEAPP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LASTMDFBY) +
                                        " , @LEAVEAPP_LASTMDFDATE='" + _obj_Smhr_LeaveApp.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "',@LEAVEAPP_ORGANISATION_ID='" + _obj_Smhr_LeaveApp.ORGANISATION_ID +
                                        "'  ,@LEAVEAPP_ID=" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEAPP @Operation = 'Check', @LEAVEAPP_REASON='" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_REASON) +
                                        "', @LEAVEAPP_APPROVEDBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_APPROVEDBY) +
                                        " , @LEAVEAPP_APPROVEDATE='" + _obj_Smhr_LeaveApp.LEAVEAPP_APPROVEDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEAPP_STATUS=" + _obj_Smhr_LeaveApp.LEAVEAPP_STATUS +
                                        " , @LEAVEAPP_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveApp.LASTMDFBY) +
                                        " , @LEAVEAPP_LASTMDFDATE='" + _obj_Smhr_LeaveApp.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "',@LEAVEAPP_ORGANISATION_ID='" + _obj_Smhr_LeaveApp.ORGANISATION_ID +
                                        "',@LEAVEAPP_REJECT_REASON ='" + _obj_Smhr_LeaveApp.LEAVEAPP_REJECT_REASON + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool get_Leave_Mail(SMHR_LEAVEAPP _obj_Smhr_LeaveApp)
        {
            bool status = false;
            switch (_obj_Smhr_LeaveApp.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@LEAVE_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@LEAVE_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 5:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "',@LEAVEAPP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 6:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "',@LEAVEAPP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
                case 7:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVE_MAIL @EMPID= '" + Convert.ToString(_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID) + "',@MODE='" + Convert.ToInt32(_obj_Smhr_LeaveApp.MODE) + "'" +
                                        ",@FROMDATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_FROMDATE).ToString("MM/dd/yyyy") + "',@TODATE='" + Convert.ToDateTime(_obj_Smhr_LeaveApp.LEAVEAPP_TODATE).ToString("MM/dd/yyyy") + "',@TOTALDAYS='" + _obj_Smhr_LeaveApp.LEAVEAPP_DAYS + "',@LEAVEAPP_ID='" + _obj_Smhr_LeaveApp.LEAVEAPP_ID + "'"))
                    {
                        status = true;
                    }
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable
        get_EmpLeaveDetails(SMHR_LEAVEAPP _obj_Smhr_LeaveApp)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_LeaveApp.MODE)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_LEAVEAPP  @MODE = 1,@ORGANISATION_ID = " + _obj_Smhr_LeaveApp.ORGANISATION_ID);
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @MODE = 2, @LEAVEAPP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_LeaveApp.BUSINESSUNIT_ID));
                    break;
                case 3:
                    dt = ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @MODE = 3, @LEAVEAPP_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_LeaveApp.BUSINESSUNIT_ID) +
                                      ", @LEAVEAPP_EMP_ID = " + (_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID));
                    break;
                case 4:
                    dt = ExecuteQuery("EXEC USP_SMHR_LEAVEAPP @MODE = 4, @LEAVEAPP_EMP_ID = " + (_obj_Smhr_LeaveApp.LEAVEAPP_EMP_ID));
                    break;
                default:
                    break;
            }
            return dt;
        }

        #endregion

        #region SMHR_EMPOTTRANS

        /// <summary>
        ///  Method to Get SMHR_EMPOTTRANS Based on the EMPOTTRANS_ID
        /// </summary>
        /// <param name="EMPOTTRANS_ID"></param>
        /// <returns>Datatable with SMHR_EMPOTTRANS Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-09-02
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_EmpOTTrans(SMHR_EMPOTTRANS _obj_Smhr_EmpOTTrans)
        {
            if (_obj_Smhr_EmpOTTrans.OPERATION == operation.Select)
            {
                if (_obj_Smhr_EmpOTTrans.EMPOTTRANS_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'select', @EMPOTTRANS_ID =" + Convert.ToString(_obj_Smhr_EmpOTTrans.EMPOTTRANS_ID));
            }
            else if (_obj_Smhr_EmpOTTrans.OPERATION == operation.Insert)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'FILLOTTYPE', @EMPOTTRANS_EMPID = " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID + "" +
                                    "");
            }
            else if (_obj_Smhr_EmpOTTrans.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'PERIODMAIN'");
            }
            else if (_obj_Smhr_EmpOTTrans.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'Empty', @EMPOTTRANS_APPROVEDBY = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_APPROVEDBY + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'PERIODDTL', @EMPOTTRANS_PERIOD_ID = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_PERIOD_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_EMPOTTRANS table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_EmpOTTrans"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-09-02
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_EmpOTTrans(SMHR_EMPOTTRANS _obj_Smhr_EmpOTTrans)
        {
            bool status = false;
            switch (_obj_Smhr_EmpOTTrans.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'Insert', @EMPOTTRANS_TYPEID=" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_TYPEID +
                                        " , @EMPOTTRANS_EMPID= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID +
                                        " , @EMPOTTRANS_PERIOD_ID= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_PERIOD_ID +
                                        " , @EMPOTTRANS_HOURS= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_HOURS +
                                        " , @EMPOTTRANS_DATE='" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_DATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'Update',@EMPOTTRANS_ID=" + Convert.ToString(_obj_Smhr_EmpOTTrans.EMPOTTRANS_ID) +
                                        " , @EMPOTTRANS_TYPEID=" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_TYPEID +
                                        " , @EMPOTTRANS_EMPID= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID +
                                        " , @EMPOTTRANS_PERIOD_ID= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_PERIOD_ID +
                                        " , @EMPOTTRANS_HOURS= " + _obj_Smhr_EmpOTTrans.EMPOTTRANS_HOURS +
                                        " , @EMPOTTRANS_DATE='" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_DATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'Delete', @EMPOTTRANS_ID=" + Convert.ToString(_obj_Smhr_EmpOTTrans.EMPOTTRANS_ID)))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'check', @EMPOTTRANS_STATUS=" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_STATUS + "" +
                                        ",@EMPOTTRANS_APPROVEDBY = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_APPROVEDBY + "'" +
                                        ",@EMPOTTRANS_APPROVEDDATE = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_APPROVEDDATE + "'" +
                                        ",@EMPOTTRANS_EMPLOYEE = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPLOYEE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool Set_Ot(SMHR_EMPOTTRANS _obj_Smhr_EmpOTTrans)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_OTCALC @Mode = '" + _obj_Smhr_EmpOTTrans.MODE + "', @OTCALC_EMPID='" + Convert.ToString(_obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID) + "',@EMPOTTRANS_PERIODDTL_ID='" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_PERIODDTL_ID +
                                "',@BUID='" + _obj_Smhr_EmpOTTrans.BUID +
                                "',@OTCALC_DATE = '" + Convert.ToDateTime(_obj_Smhr_EmpOTTrans.OTCALC_DATE).ToString("MM/dd/yyyy") + "'"))
                status = true;
            return status;
        }

        /// <summary>
        /// Method to Get the BU and Employee Details Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_EmpOTTrans"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-11-23
        ///  Last Modified on   : 2009-11-28
        ///  Last Modified by    : Joseph
        /// </remarks>
        public static DataTable getValues_EmpOTTrans(SMHR_EMPOTTRANS _obj_Smhr_EmpOTTrans)
        {
            if ((_obj_Smhr_EmpOTTrans.BUID.ToString() == "0") && (_obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID.ToString() == "0"))
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'BU'");
            else if (_obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID.ToString() == "0")
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'BUEMP', @BUID =" + Convert.ToString(_obj_Smhr_EmpOTTrans.BUID));
            else if ((_obj_Smhr_EmpOTTrans.BUID.ToString() != "0") && (_obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID.ToString() != "0"))
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'EMPBU'" +
                                    ",@BUID = '" + _obj_Smhr_EmpOTTrans.BUID + "'" +
                                    ",@EMPOTTRANS_EMPID = '" + _obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_EMPOTTRANS @Operation = 'EMPDOJ', @EMPOTTRANS_EMPID =" + Convert.ToString(_obj_Smhr_EmpOTTrans.EMPOTTRANS_EMPID));
        }

        /// <summary>
        /// This method is used to calculated OT amount based on hrs provided. This is exclusively for NWH implemenattion.
        /// Done by MKD on 22/6/2010
        /// </summary>
        /// <param name="UserName"></param>
        /// <returns></returns>
        public static DataTable calculate_OT(SMHR_EMPOTTRANS _obj_smhr_EmpOTTRANS)
        {
            try
            {

                if (_obj_smhr_EmpOTTRANS.MODE == 0)
                {
                    return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE=0,@OTCALC_ORG_ID=" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID +
                                        ",@OTCALC_EMPID=" + _obj_smhr_EmpOTTRANS.EMPOTTRANS_EMPID + "");
                }
                //else if (_obj_smhr_EmpOTTRANS.MODE==0 && _obj_smhr_EmpOTTRANS.MODE==2)
                //{
                //    return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE=10,@OTCALC_ORG_ID=" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID + "");

                //}

                else if (_obj_smhr_EmpOTTRANS.OPERATION == operation.Select && _obj_smhr_EmpOTTRANS.MODE == 1)
                {
                    return ExecuteQuery("EXEC USP_SMHR_OTCALC @operation='select',@OTCALC_ID='" + _obj_smhr_EmpOTTRANS.EMPOTTRANS_ID + "',@OTCALC_ORG_ID='" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID + "'");
                }
                else if (_obj_smhr_EmpOTTRANS.OPERATION == operation.Empty)
                {
                    return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE=4,@OTCALC_APPROVEDBY='" + _obj_smhr_EmpOTTRANS.EMPOTTRANS_APPROVEDBY + "',@OTCALC_ORG_ID='" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID + "'");
                }
                else if (_obj_smhr_EmpOTTRANS.MODE == 1)
                {
                    /*return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE='" + _obj_smhr_EmpOTTRANS.MODE + "',@BUID =" + Convert.ToString(_obj_smhr_EmpOTTRANS.BUID) +
                                        ",  @EMPOTTRANS_PERIODDTL_ID = " + _obj_smhr_EmpOTTRANS.EMPOTTRANS_PERIODDTL_ID +
                                        ",  @OTCALC_ORG_ID=" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID +
                                        ",  @OTCALC_DATE = '" + _obj_smhr_EmpOTTRANS.OTCALC_DATE + "'");*/
                    return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE='" + _obj_smhr_EmpOTTRANS.MODE + "', @OTCALC_ORG_ID=" + _obj_smhr_EmpOTTRANS.ORGANISATION_ID +
                                        ",@OTCALC_EMPID=" + _obj_smhr_EmpOTTRANS.EMPOTTRANS_EMPID + "");
                }

                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_OTCALC @MODE='" + _obj_smhr_EmpOTTRANS.MODE + "',@BUID =" + Convert.ToString(_obj_smhr_EmpOTTRANS.BUID) + ", @EMPOTTRANS_PERIODDTL_ID = " + _obj_smhr_EmpOTTRANS.EMPOTTRANS_PERIODDTL_ID);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        public static bool Cal_OTAmount(SMHR_EMPOTTRANS _obj_Smhr_EmpOTTrans, string StrQuery)
        {
            bool status = false;
            switch (_obj_Smhr_EmpOTTrans.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case 5:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region USERS_MENU

        public static DataTable get_Users(string UserName)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation = 'select', @LOGIN_USERNAME='" + UserName + "'");
        }

        public static DataTable get_pwd(string UserName, int org)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @MODE = 1, @LOGIN_USERNAME='" + UserName + "', @LOGIN_ORGANISATION_ID= '" + org + "'");
        }

        public static DataTable get_Menus(string UserType, int supermodule_id)
        {
            return ExecuteQuery("EXEC USP_SMHR_SECURITY @Operation ='MENUS', @USERTYPE='" + UserType + "',@SUPER_MODULE_ID='" + supermodule_id + "'");
        }

        public static DataTable get_Forms()
        {
            return ExecuteQuery("EXEC USP_SMHR_SECURITY @Operation='Forms'");
        }

        public static DataTable get_Forms_org()
        {
            return ExecuteQuery("EXEC USP_SMHR_SECURITY @Operation='Get'");
        }

        public static DataTable Get_Emp_Dept_id(int EMP_ID)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOGININFO @Operation='GetDept_id',@LOGIN_EMP_ID=" + EMP_ID);
        }

        #endregion

        #region CHART DATA

        public static DataTable get_ChartData(string type, string empID, int ORGANISATION_ID, int BUID, int DEPARTMENT_ID)
        {
            if (type.ToUpper() == "ORG")
                return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'ORG',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
            else if (type.ToUpper() == "BUSINESSUNIT")
                return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'BUSINESSUNIT',@ORGANISATION_ID='" + ORGANISATION_ID + "',@BU_ID='" + BUID + "'");
            else if (type.ToUpper() == "DEPARTMENT")
                return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'BUSINESSUNIT',@ORGANISATION_ID='" + ORGANISATION_ID + "',@DEPARTMENT='" + DEPARTMENT_ID + "'");
            else
            {
                if (empID == string.Empty)
                    return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'EMP',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'EMP', @EMP_REPORTINGEMPLOYEE='" + empID + "',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_ChartBUData(string type, string empID, int ORGANISATION_ID, int BUID)
        {
            return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'Select',@ORGANISATION_ID='" + ORGANISATION_ID + "',@BU_ID='" + BUID + "'");
        }

        #endregion

        #region SMHR_MASTERS

        /// <summary>
        ///  Method to Get Master Records Based on the Master Type
        /// </summary>
        /// <param name="MASTER_TYPE"></param>
        /// <returns>Datatable with MasterRecords Information</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-11 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks> 
        public static DataTable get_MasterRecords(SMHR_MASTERS _obj_Smhr_Masters)
        {
            if (_obj_Smhr_Masters.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @MODE = '3',@HR_MASTER_TYPE = '" + _obj_Smhr_Masters.MASTER_TYPE + "', @HR_MASTER_ORGANISATION_ID =" + _obj_Smhr_Masters.ORGANISATION_ID);
            }

            if (_obj_Smhr_Masters.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Masters.MASTER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'select',@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                        ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'select', @HR_MASTER_ID='" + Convert.ToString(_obj_Smhr_Masters.MASTER_ID) + "'" +
                                        ",@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "',@HR_MASTER_ORGANISATION_ID='" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
            if (_obj_Smhr_Masters.OPERATION == operation.Approve)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'selectresource',@HR_MASTER_ORGANISATION_ID=" + _obj_Smhr_Masters.HR_MASTER_ORGANISATION_ID + " ");
            }
            else if (_obj_Smhr_Masters.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Get', @HR_MASTER_CODE ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_CODE) + "'" +
                                    ",@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                    ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Masters.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation='Select1',@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                    ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Masters.OPERATION == operation.Chk)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Chk',@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Masters.OPERATION == operation.Select4)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = '" + _obj_Smhr_Masters.OPERATION + "', @HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Masters.OPERATION == operation.Get_ID)
            {
                return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = '" + _obj_Smhr_Masters.OPERATION + "', @HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "',@BRANCH_BANK_ID = '" + _obj_Smhr_Masters.BANKID + "'");
            }
            else
            {
                if (_obj_Smhr_Masters.MASTER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Check', @HR_MASTER_CODE ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_CODE) + "'" +
                                        ",@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                        ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Check', @HR_MASTER_CODE ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_CODE) + "'" +
                                        ",@HR_MASTER_TYPE='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                        ",@HR_MASTER_ID ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_ID) + "'" +
                                        ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the Master_HR table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-17
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Master(SMHR_MASTERS _obj_Smhr_Masters)
        {
            switch (_obj_Smhr_Masters.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Insert',@HR_MASTER_TYPE ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                    ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'" +
                                    ",@HR_MASTER_CODE = '" + Convert.ToString(_obj_Smhr_Masters.MASTER_CODE) + "'" +
                                    ",@HR_MASTER_DESC = '" + Convert.ToString(_obj_Smhr_Masters.MASTER_DESC) + "'" +
                                    ",@HR_MASTER_ISDELETED = 0,@HR_MASTER_CREATEDBY = '" + _obj_Smhr_Masters.CREATEDBY + "'" +
                                    ",@HR_MASTER_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_Masters.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@HR_MASTER_LASTMDFBY = '" + _obj_Smhr_Masters.LASTMDFBY + "'" +
                                    ",@HR_MASTER_PRIORITY_ID = '" + _obj_Smhr_Masters.MASTER_PRIORITYID + "'" +
                                    ",@HR_MASTER_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Masters.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@HR_MASTER_STATUS= '" + _obj_Smhr_Masters.IsActive + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_HR_MASTER @Operation = 'Update',@HR_MASTER_ID = '" + Convert.ToString(_obj_Smhr_Masters.MASTER_ID) + "'" +
                                    ",@HR_MASTER_TYPE ='" + Convert.ToString(_obj_Smhr_Masters.MASTER_TYPE) + "'" +
                                    ",@HR_MASTER_ORGANISATION_ID = '" + _obj_Smhr_Masters.ORGANISATION_ID + "'" +
                                    ",@HR_MASTER_CODE = '" + Convert.ToString(_obj_Smhr_Masters.MASTER_CODE) + "'" +
                                    ",@HR_MASTER_DESC = '" + Convert.ToString(_obj_Smhr_Masters.MASTER_DESC) + "'" +
                                    ",@HR_MASTER_ISDELETED = 0,  @HR_MASTER_LASTMDFBY = '" + _obj_Smhr_Masters.LASTMDFBY + "'" +
                                    ",@HR_MASTER_PRIORITY_ID = '" + _obj_Smhr_Masters.MASTER_PRIORITYID + "'" +
                                    ",@HR_MASTER_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Masters.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@HR_MASTER_STATUS= '" + _obj_Smhr_Masters.IsActive + "'");
                    break;
                default:
                    break;
            }
            return true;
        }

        public static DataTable get_SMHR_ACTIONTAKEN1(SMHR_ACTIONTAKEN _obj_SMHR_ACTIONTAKEN)
        {
            return ExecuteQuery("EXEC USP_SMHR_ACTIONTAKEN @OPERATION='check',@ACTION_DISPORGRIV_ID = '" + _obj_SMHR_ACTIONTAKEN.ACTION_DISPORGRIV_ID + "',@ACTION_ORGANISATION_ID='" + _obj_SMHR_ACTIONTAKEN.ORGANISATION_ID + "'");
        }

        public static bool set_SMHR_ACTIONTAKEN(SMHR_ACTIONTAKEN _obj_SMHR_ACTIONTAKEN)
        {
            switch (_obj_SMHR_ACTIONTAKEN.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'Insert',@ACTION_DISPORGRIV_ID =" + Convert.ToString(_obj_SMHR_ACTIONTAKEN.ACTION_DISPORGRIV_ID) + "" +
                                    ",@ACTION_GRIVENCE_ID = " + _obj_SMHR_ACTIONTAKEN.ACTION_GRIVENCE_ID + "" +
                                    ",  @ACTION_OTHERMEMBERS='" + _obj_SMHR_ACTIONTAKEN.ACTION_OTHERMEMBERS + "'" +
                                    ",  @ACTION_DISCUSSEDWITH='" + _obj_SMHR_ACTIONTAKEN.ACTION_DISCUSSEDWITH + "'" +
                                    ",@ACTION_DATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_DATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_DATE + "'") + "" +
                                    ",@ACTION_SUSPDFROMDATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_SUSPDFROMDATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_SUSPDFROMDATE + "'") + "" +
                                    ",@ACTION_SUSPDTODATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_SUSPDTODATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_SUSPDTODATE + "'") + "" +
                                    ",@ACTION_DISCUSSEDDATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_DISCUSSEDDATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_DISCUSSEDDATE + "'") + "" +
                                    ",@ACTION_CREATED_DATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_CREATED_DATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_CREATED_DATE + "'") + "" +
                                    ",@ACTION_LASTMODIFIEDDATE = " + (_obj_SMHR_ACTIONTAKEN.ACTION_LASTMODIFIEDDATE == null ? "null" : "'" + _obj_SMHR_ACTIONTAKEN.ACTION_LASTMODIFIEDDATE + "'") + "" +
                                    ",@ACTION_REASON ='" + _obj_SMHR_ACTIONTAKEN.ACTION_REASON + "'" +
                                    ",@ACTION_ORGANISATION_ID=" + _obj_SMHR_ACTIONTAKEN.ORGANISATION_ID + "" +
                                    ",@ACTION_CREATED_BY = '" + _obj_SMHR_ACTIONTAKEN.CREATEDBY + "'" +
                                    ",@ACTION_LASTMODIFIED_BY = '" + _obj_SMHR_ACTIONTAKEN.LASTMDFBY + "',@ACTION_COURT_ATTACHMENT='" + _obj_SMHR_ACTIONTAKEN.ACTION_COURT_ATTACHMENT + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'UPDATEP',@ACTION_GRIVENCE_ID = " + _obj_SMHR_ACTIONTAKEN.ACTION_GRIVENCE_ID + ",@ACTION_COURT_ATTACHMENT='" + _obj_SMHR_ACTIONTAKEN.ACTION_COURT_ATTACHMENT + "'");
                    break;
                default:
                    break;
            }
            return true;
        }

        public static DataTable get_SMHR_ACTIONTAKEN(SMHR_ACTIONTAKEN _obj_SMHR_ACTIONTAKEN)
        {
            if (_obj_SMHR_ACTIONTAKEN.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'Edit',@ACTION_GRIVENCE_ID=" + _obj_SMHR_ACTIONTAKEN.ACTION_GRIVENCE_ID + " ");
            }
            else if (_obj_SMHR_ACTIONTAKEN.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'OTHE',@ACTION_CREATED_BY=" + _obj_SMHR_ACTIONTAKEN.ACTION_CREATED_BY + " ");
            }
            else if (_obj_SMHR_ACTIONTAKEN.OPERATION == operation.Delete1)
            {
                return ExecuteQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'COMITEMEMB',@ACTION_GRIVENCE_ID=" + _obj_SMHR_ACTIONTAKEN.ACTION_GRIVENCE_ID + " ");
            }
            else //if (_obj_SMHR_ACTIONTAKEN.OPERATION == operation.Delete)
            {
                return ExecuteQuery("EXEC USP_SMHR_ACTIONTAKEN @Operation = 'OTHERMEMB',@ACTION_GRIVENCE_ID=" + _obj_SMHR_ACTIONTAKEN.ACTION_GRIVENCE_ID + " ");
            }
        }

        #endregion

        #region SMHR_RESOURCE

        public static DataTable get_Resourc(SMHR_RESOURCE _obj_Smhr_Resourc)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_Resourc.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCE @MODE = 1 ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCE @MODE = 2,@RESOURCE_ID = " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCE @MODE = 5,@RESOURCE_ORG_ID=" + _obj_Smhr_Resourc.RESOURCE_ORG_ID + ",@RESOUCE_TRID = " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        /// <summary>
        /// This Method is used for insertion, deletion and updation of project based upon criteria
        /// </summary>
        /// <returns>
        /// Bool
        /// </returns>
        public static bool set_Resourc(SMHR_RESOURCE _obj_Smhr_Resourc)
        {
            bool status = false;
            switch (_obj_Smhr_Resourc.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCE @MODE = 3,@RESOUCE_TRID= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + "" +
                                        ",@RESOURCE_TYPEID= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_TYPEID) + "" +
                                        ",@RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_NAME) + "'" +
                                        ", @RESOURCE_DESC= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_DESC) + "'" +
                                        ", @RESOUCE_QTY= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_QTY) + "" +
                                        ", @RESOURCE_ESTIMATEDBUDGET= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_ESTIMATEDBUDGET) + "" +
                                        ", @RESOURCE_S_NO=" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_S_NO) + "" +
                                        ",@RESOURCE_ORG_ID=" + _obj_Smhr_Resourc.RESOURCE_ORG_ID + ", @RESOURCE_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_CREATEDBY) + "" +
                                        ", @RESOURCE_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_Resourc.RESOURCE_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 6:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCE @MODE = 6,@RESOUCE_TRID= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + "" +
                                        ",@RESOURCE_TYPEID= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_TYPEID) + "" +
                                        ",@RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_NAME) + "'" +
                                        ", @RESOURCE_DESC= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_DESC) + "'" +
                                        ", @RESOUCE_QTY= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_QTY) + "" +
                                        ", @RESOURCE_ESTIMATEDBUDGET= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_ESTIMATEDBUDGET) + "" +
                                        ", @RESOURCE_S_NO=" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_S_NO) + "" +
                                        ",@RESOURCE_ORG_ID=" + _obj_Smhr_Resourc.RESOURCE_ORG_ID + ", @RESOURCE_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_CREATEDBY) + "" +
                                        ", @RESOURCE_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_Resourc.RESOURCE_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCE @MODE = 4 , @RESOUCE_TRID= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + "" +
                                        ",@RESOURCE_TYPEID= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_TYPEID) + "" +
                                        ",@RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_NAME) + "'" +
                                        ", @RESOURCE_DESC= '" + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_DESC) + "'" +
                                        ", @RESOUCE_QTY= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_QTY) + "" +
                                        ", @RESOURCE_ESTIMATEDBUDGET= " + Convert.ToString(_obj_Smhr_Resourc.RESOURCE_ESTIMATEDBUDGET) + "" +
                                        ", @RESOURCE_S_NO=" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_S_NO) + "" +
                                        ",@RESOURCE_LASTMDFBY =" + Convert.ToInt32(_obj_Smhr_Resourc.RESOURCE_LASTMDFBY) + "" +
                                        ", @RESOURCE_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_Resourc.RESOURCE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;

                    break;
                case 5:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RECRUITMENT_TRAINING_SESSIONS @TR_ID= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + "" +
                                        " "))

                        status = true;
                    else
                        status = false;

                    break;
                case 7:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCE @MODE = 7, @RESOUCE_TRID= " + Convert.ToString(_obj_Smhr_Resourc.RESOUCE_TRID) + "" +
                                        " "))

                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_ESIMASTER

        public static DataTable get_ESIMASTER(SMHR_ESIMASTER _obj_Smhr_ESIMASTER)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_ESIMASTER.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE = 1,@SMHR_ESI_MASTER_ORGID = " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + " ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE = 2,@SMHR_ESI_MASTER_ID = " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE = 5,@SMHR_ESI_MASTER_BUID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_BUID) + "" +
                                      ",@SMHR_ESI_MASTER_ORGID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + "" +
                                      ",@SMHR_ESI_MASTER_EMPID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_EMPID) + "" +
                                      ",@SMHR_ESI_MASTER_IPNO= '" + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNO) + "'" +
                                      " ");

                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE = 6,@SMHR_ESI_MASTER_BUID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_BUID) + "" +
                                      ",@SMHR_ESI_MASTER_ORGID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + "" +
                                      " ");

                    break;
                case 7:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE = 7,@SMHR_ESI_MASTER_BUID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_BUID) + "" +
                                      ",@SMHR_ESI_MASTER_ORGID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + "" +
                                      ",@SMHR_ESI_MASTER_CREATEDBY= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_CREATEDBY) + "" +
                                      " ");

                    break;
                case 8:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE=8,@SMHR_ESI_MASTER_IPNO='" + _obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNO + "'");
                    break;
                case 9:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE=9,@SMHR_ESI_MASTER_EMPID='" + _obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_EMPID + "'");
                    break;
                case 10:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIMASTER @MODE=10,@SMHR_ESI_MASTER_CREATEDBY= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_CREATEDBY) + ",@SMHR_ESI_MASTER_BUID=" + _obj_Smhr_ESIMASTER.BUID + "");
                    break;
                default:
                    break;
            }
            return dt;
        }

        /// <summary>
        /// This Method is used for insertion, deletion and updation of project based upon criteria
        /// </summary>
        /// <returns>
        /// Bool
        /// </returns>
        public static bool set_ESIMASTER(SMHR_ESIMASTER _obj_Smhr_ESIMASTER)
        {
            bool status = false;
            switch (_obj_Smhr_ESIMASTER.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ESIMASTER @MODE = 3,@SMHR_ESI_MASTER_BUID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_BUID) + "" +
                                        ",@SMHR_ESI_MASTER_ORGID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + "" +
                                        ",@SMHR_ESI_MASTER_STATUS='" + _obj_Smhr_ESIMASTER.HR_MASTER_ISDELETED + "'" + //JUST FOR MAINTAINING WHETHER IT IS ACTIVE OR NOT
                                        ",@SMHR_ESI_MASTER_EMPID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_EMPID) + "" +
                                        ",@SMHR_ESI_MASTER_IPNO= '" + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNO) + "'" +
                                        ", @SMHR_ESI_MASTER_IPNAME= '" + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNAME) + "'" +
                                        ", @SMHR_ESI_MASTER_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_CREATEDBY) + "" +
                                        ", @SMHR_ESI_MASTER_CREATEDATE='" + Convert.ToDateTime(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_CREATEDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ESIMASTER @MODE = 4,@SMHR_ESI_MASTER_BUID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_BUID) + "" +
                                        ",@SMHR_ESI_MASTER_ID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ID) + "" +
                                        ",@SMHR_ESI_MASTER_ORGID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_ORGID) + "" +
                                        ",@SMHR_ESI_MASTER_STATUS='" + _obj_Smhr_ESIMASTER.HR_MASTER_ISDELETED + "'" + //JUST FOR MAINTAINING WHETHER IT IS ACTIVE OR NOT
                                        ",@SMHR_ESI_MASTER_EMPID= " + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_EMPID) + "" +
                                        ",@SMHR_ESI_MASTER_IPNO= '" + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNO) + "'" +
                                        ", @SMHR_ESI_MASTER_IPNAME= '" + Convert.ToString(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_IPNAME) + "'" +
                                        ", @SMHR_ESI_MASTER_MODIFIEDBY=" + Convert.ToInt32(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_MODIFIEDBY) + "" +
                                        ", @SMHR_ESI_MASTER_MODIFIEDDATE='" + Convert.ToDateTime(_obj_Smhr_ESIMASTER.SMHR_ESI_MASTER_MODIFIEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_ESIIMPORT

        public static DataTable get_ESIimport(SMHR_ESIIMPORT _obj_SMHR_ESIIMPORT)
        {
            DataTable dt = new DataTable();
            switch (_obj_SMHR_ESIIMPORT.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIIMPORT @MODE = 1,@ESIIMPORT_ORGID = " + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_ORGID) + " ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_ESIIMPORT @MODE = 2,@ESIIMPORT_PERIDEMLEMENTID= " + _obj_SMHR_ESIIMPORT.ESIIMPORT_PERIDEMLEMENTID + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        /// <summary>
        /// This Method is used for insertion, deletion and updation of project based upon criteria
        /// </summary>
        /// <returns>
        /// Bool
        /// </returns>
        public static bool set_ESIimport(SMHR_ESIIMPORT _obj_SMHR_ESIIMPORT)
        {
            bool status = false;
            switch (_obj_SMHR_ESIIMPORT.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ESIIMPORT @MODE = 3,@ESIIMPORT_BUID= " + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_BUID) + "" +
                                        ",@ESIIMPORT_ORGID= " + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_ORGID) + "" +
                                        ",@ESIIMPORT_EMP_ID =" + _obj_SMHR_ESIIMPORT.SMHR_ESIIMPORT_EMPID + "" +
                                        ",@ESIIMPORT_ISFINALISED=" + _obj_SMHR_ESIIMPORT.SMHR_ESIIMPORT_ISFINALISED + "" +
                                        ",@ESIIMPORT_FINANCIAL_PERIOD= " + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_FINANCIAL_PERIOD) + "" +
                                        ",@ESIIMPORT_EMPNAME= '" + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_EMPNAME) + "'" +
                                        ", @ESIIMPORT_IPNO= '" + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_IPNO) + "'" +
                                        ", @ESIIMPORT_IPNAME= '" + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_IPNAME) + "'" +
                                        ", @ESIIMPORT_PRESENTDAYS=" + Convert.ToInt32(_obj_SMHR_ESIIMPORT.ESIIMPORT_PRESENTDAYS) + "" +
                                        ", @ESIIMPORT_TOTALAMOUNT= '" + Convert.ToString(_obj_SMHR_ESIIMPORT.ESIIMPORT_TOTALAMOUNT) + "'" +
                                        ", @ESIIMPORT_REASONCODE=" + Convert.ToInt32(_obj_SMHR_ESIIMPORT.ESIIMPORT_REASONCODE) + "" +
                                        ", @ESIIMPORT_PERIDEMLEMENTID=" + Convert.ToInt32(_obj_SMHR_ESIIMPORT.ESIIMPORT_PERIDEMLEMENTID) + "" +
                                        " "))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_RESOURCES

        public static DataTable get_Resource(SMHR_RESOURCES _obj_Smhr_Resource)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_Resource.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCES @MODE = 1 ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCES @MODE = 2,@RESOURCE_ID = " + Convert.ToString(_obj_Smhr_Resource.RESOURCE_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_SMHR_RESOURCES @MODE = 5,@RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resource.RESOURCE_NAME) + "'" +
                                      " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        /// <summary>
        /// This Method is used for insertion, deletion and updation of project based upon criteria
        /// </summary>
        /// <returns>
        /// Bool
        /// </returns>
        public static bool set_Resource(SMHR_RESOURCES _obj_Smhr_Resource)
        {
            bool status = false;
            switch (_obj_Smhr_Resource.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCES @MODE = 3,@RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resource.RESOURCE_NAME) + "'" +
                                        ", @RESOURCE_DESCRIPTION= '" + Convert.ToString(_obj_Smhr_Resource.RESOURCE_DESCRIPTION) + "'" +
                                        ",  @RESOURCE_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_Resource.RESOURCE_CREATEDBY) + "" +
                                        ", @RESOURCE_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_Resource.RESOURCE_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESOURCES @MODE = 4 ,@RESOURCE_ID= " + Convert.ToString(_obj_Smhr_Resource.RESOURCE_ID) + "" +
                                        ", @RESOURCE_NAME= '" + Convert.ToString(_obj_Smhr_Resource.RESOURCE_NAME) + "'" +
                                        ", @RESOURCE_DESCRIPTION= '" + Convert.ToString(_obj_Smhr_Resource.RESOURCE_DESCRIPTION) + "'" +
                                        ",@RESOURCE_LASTMDFBY =" + Convert.ToInt32(_obj_Smhr_Resource.RESOURCE_LASTMDFBY) + "" +
                                        ", @RESOURCE_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_Resource.RESOURCE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_FEEDBACK_QUESTION

        public static DataTable get_FeedbackQuestion(SMHR_FEEDBACK_QUESTION _obj_SMHR_FEEDBACK_QUESTION)
        {
            try
            {
                DataTable dt = new DataTable();
                switch (_obj_SMHR_FEEDBACK_QUESTION.OPERATION)
                {
                    case operation.Select:
                        if ((_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION == "") && (_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS == "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Select', @FEEDBACKQUESTS_ORG_ID='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ORG_ID + "'");
                        }
                        else if ((_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION != "") && (_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS == "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Select' , @FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION + "'");
                        }
                        else if ((_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION == "") && (_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS != "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Select' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS + "'");
                        }

                        break;
                    case operation.Empty:

                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Empty', @FEEDBACKQUESTS_QUESTION_CATEGORY ='" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION_CATEGORY) + "',@FEEDBACKQUESTS_ORG_ID =  '" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.ORGANISATION_ID) + "'");

                        break;
                    case operation.EMPTY1:

                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'EMPTY1', @FEEDBACK_ID =  '" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.FEEDBACK_ID) + "'");
                        break;
                    case operation.Start:

                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Start', @FEEDBACKQUESTS_ORG_ID =  '" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ORG_ID) + "', @FEEDBACKQUESTS_QUESTION_CATEGORY ='" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION_CATEGORY) + "' ,@FEEDBACKQUESTS_QUESTION ='" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION) + "'");

                        break;
                    case operation.ADMIN:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Admin' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.TRAINER:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Trainer' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Course:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Course' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Counseller:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Counseller' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Check:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Check' , @FEEDBACKQUESTS_ID='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ID + "'");
                        break;
                    case operation.load:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Check' , @FEEDBACKQUESTS_ID='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ID + "'");
                        break;
                    default:
                        break;
                }
                return dt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static bool set_Feedbackquestion(SMHR_FEEDBACK_QUESTION _obj_SMHR_FEEDBACK_QUESTION)
        {
            try
            {
                bool status = false;
                switch (_obj_SMHR_FEEDBACK_QUESTION.OPERATION)
                {
                    case operation.Insert:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Insert', @FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION +
                                                "', @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS +
                                                "', @FEEDBACKQUESTS_OPTION1='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION1 +
                                                "', @FEEDBACKQUESTS_OPTION2='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION2 +
                                                "', @FEEDBACKQUESTS_OPTION3='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION3 +
                                                "', @FEEDBACKQUESTS_ORG_ID= " + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ORG_ID +
                                                ", @FEEDBACKQUESTS_OPTION4='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION4 +
                                                "', @FEEDBACKQUESTS_QUESTION_CATEGORY = '" + _obj_SMHR_FEEDBACK_QUESTION.@FEEDBACKQUESTS_QUESTION_CATEGORY +
                                                "', @FEEDBACKQUESTS_CREATEDBY= " + _obj_SMHR_FEEDBACK_QUESTION.CREATEDBY +
                                                " , @FEEDBACKQUESTS_CREATEDDATE='" + _obj_SMHR_FEEDBACK_QUESTION.CREATEDDATE.ToString("MM/dd/yyyy") + "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    case operation.Update:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTION @Operation = 'Update',@FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_QUESTION +
                                                "', @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_STATUS +
                                                "', @FEEDBACKQUESTS_OPTION1='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION1 +
                                                "', @FEEDBACKQUESTS_OPTION2='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION2 +
                                                "', @FEEDBACKQUESTS_OPTION3='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION3 +
                                                "', @FEEDBACKQUESTS_OPTION4='" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_OPTION4 +
                                                "', @FEEDBACKQUESTS_QUESTION_CATEGORY = '" + _obj_SMHR_FEEDBACK_QUESTION.@FEEDBACKQUESTS_QUESTION_CATEGORY +
                                                "', @FEEDBACKQUESTS_ID = '" + _obj_SMHR_FEEDBACK_QUESTION.FEEDBACKQUESTS_ID +
                                                "', @FEEDBACKQUESTS_LASTMDFBY =" + _obj_SMHR_FEEDBACK_QUESTION.LASTMDFBY +
                                                " , @FEEDBACKQUESTS_LASTMDFDATE='" + _obj_SMHR_FEEDBACK_QUESTION.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))

                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }

                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region SMHR_TRAININGFEEDBACK_RESPONSE

        public static DataTable get_FeedbackResponse(SMHR_TRAININGFEEDBACK_RESPONSE _obj_SMHR_TRAININGFEEDBACK_RESPONSE1)
        {
            try
            {
                DataTable dt = new DataTable();
                switch (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.OPERATION)
                {
                    case operation.Select:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Select'");
                        break;
                    case operation.Check:
                        if ((_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEBBACKRES_FEEDBACK_NO != 0) && (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TR_ID == 0) && (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID == 0))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Check' , @FEEBBACKRES_FEEDBACK_NO='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEBBACKRES_FEEDBACK_NO + "'");
                        }
                        else if ((_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEBBACKRES_FEEDBACK_NO == 0) && (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TR_ID != 0) && (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID != 0))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Check' , @FEEDBACKRES_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TR_ID + "', @FEEDBACKRES_USER_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID + "' ");
                        }
                        break;
                    case operation.Start:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Start' , @FEEDBACKRES_USER_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID + "'");
                        break;
                    case operation.Empty:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Empty' ");
                        break;
                    default:
                        break;
                }
                return dt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static bool set_FeedbackResponse(SMHR_TRAININGFEEDBACK_RESPONSE _obj_SMHR_TRAININGFEEDBACK_RESPONSE1)
        {
            try
            {
                bool status = false;
                switch (_obj_SMHR_TRAININGFEEDBACK_RESPONSE1.OPERATION)
                {
                    case operation.Insert:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Insert', @FEEDBACKRES_FEEDBACKQUESTS_ID ='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_FEEDBACKQUESTS_ID +
                                                "', @FEEBBACKRES_FEEDBACK_NO='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEBBACKRES_FEEDBACK_NO +
                                                "', @FEEDBACKRES_USER_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID +
                                                "', @FEEDBACKRES_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TR_ID +
                                                "', @FEEDBACKRES_RESPONSE = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_RESPONSE +
                                                "', @FEEDBACKRES_STATUS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_STATUS +
                                                "', @FEEDBACKRES_COMMENTS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_COMMENTS +
                                                "', @FEEDBACKRES_TRAINER_ID = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TRAINER_ID +
                                                "', @FEEDBACKRES_DATE = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_DATE +
                                                "', @FEEDBACKRES_CREATEDBY= " + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.CREATEDBY +
                                                " , @FEEDBACKRES_CREATEDDATE='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.CREATEDDATE + "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    case operation.Update:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_RESPONSE @Operation = 'Update', @FEEDBACKRES_FEEDBACKQUESTS_ID ='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_FEEDBACKQUESTS_ID +
                                                "', @FEEDBACKRES_USER_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_USER_ID +
                                                "', @FEEDBACKRES_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TR_ID +
                                                "', @FEEBBACKRES_FEEDBACK_NO='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEBBACKRES_FEEDBACK_NO +
                                                "', @FEEDBACKRES_RESPONSE = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_RESPONSE +
                                                "', @FEEDBACKRES_STATUS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_STATUS +
                                                "', @FEEDBACKRES_COMMENTS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_COMMENTS +
                                                "', @FEEDBACKRES_TRAINER_ID = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_TRAINER_ID +
                                                "', @FEEDBACKRES_DATE = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.FEEDBACKRES_DATE +
                                                "', @FEEDBACKRES_LASTMDFBY  =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.LASTMDFBY +
                                                " , @FEEDBACKRES_LASTMDFDATE='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE1.LASTMDFDATE + "'"))

                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }

                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region SMHR_TRAININGFEEDBACK

        public static DataTable get_FeedbackResponse(SMHR_TRAININGFEEDBACK _obj_SMHR_TRAININGFEEDBACK_RESPONSE)
        {
            try
            {
                DataTable dt = new DataTable();
                switch (_obj_SMHR_TRAININGFEEDBACK_RESPONSE.OPERATION)
                {
                    case operation.Select:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Select',@FEEDBACK_ORG_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ORG_ID + "");
                        break;
                    case operation.Check:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Check' , @FEEDBACK_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + "' ,@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "',@FEEDBACK_FEEDBACKQUESTS_ID=" + Convert.ToInt32(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_FEEDBACKQUESTS_ID) + " ");
                        break;
                    case operation.Empty:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'EMPTY' , @FEEDBACK_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + "' ,@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "',@FEEDBACK_FEEDBACKQUESTS_ID=" + Convert.ToInt32(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_FEEDBACKQUESTS_ID) + " ");
                        break;
                    case operation.EMPTY1:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'EMPTY1' , @FEEDBACK_TR_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + "' ,@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "'");
                        break;
                    case operation.Validate:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Validate', @FEEDBACK_TR_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + " ,@FEEDBACK_NAME='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_NAME + "',@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "',@FEEDBACK_BU_ID=" + Convert.ToInt32(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BU_ID) + " ");
                        break;
                    //case operation.Start:
                    //    dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Start' , @FEEDBACKRES_USER_ID='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACKRES_USER_ID + "'");
                    //    break;

                    //case operation.Empty:
                    //    dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Empty' ");
                    //    break;
                    case operation.MODE:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @MODE =1 ,@FEEDBACK_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ID + " ");
                        break;
                    case operation.MODE1:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @MODE1 =2,@FEEDBACK_ORG_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ORG_ID + ",  @FEEDBACK_TR_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + " ,@FEEDBACK_NAME='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_NAME + "',@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "',@FEEDBACK_BU_ID=" + Convert.ToInt32(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BU_ID) + " ");

                        break;
                    case operation.MODE2:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @MODE1 =3,@FEEDBACK_ID= '" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ID) + "'" +
                                              " ");
                        break;
                    case operation.MODE6:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK @MODE1 =6,@FEEDBACK_ORG_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ORG_ID + ",  @FEEDBACK_TR_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID + " ,@FEEDBACK_CATEGORY ='" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY) + "',@FEEDBACK_BU_ID=" + Convert.ToInt32(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BU_ID) + " ");

                        break;
                    default:
                        break;
                }
                return dt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static bool set_FeedbackResponse(SMHR_TRAININGFEEDBACK _obj_SMHR_TRAININGFEEDBACK_RESPONSE)
        {
            try
            {
                bool status = false;
                switch (_obj_SMHR_TRAININGFEEDBACK_RESPONSE.OPERATION)
                {
                    case operation.Insert:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Insert', @FEEDBACK_BU_ID =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BU_ID +
                                                ", @FEEDBACK_TR_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID +
                                                ", @FEEDBACK_CATEGORY = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY +
                                                "',@FEEDBACK_ORG_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ORG_ID + ", @FEEDBACK_STATUS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_STATUS +
                                                "',  @FEEDBACK_NAME= '" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_NAME) + "'" +
                                                ", @FEEDBACK_DESCRIPTION= '" + Convert.ToString(_obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_DESCRIPTION) + "'" +
                                                ", @FEEDBACK_CREATEDBY= " + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.CREATEDBY +
                                                ", @FEEDBACK_BACKDATE= " + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BACKDATE +
                                                " , @FEEDBACK_CREATEDDATE='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.CREATEDDATE.ToString("MM/dd/yyyy") + "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    case operation.Update:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'Update', @FEEDBACK_ID =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_ID +
                                                ", @FEEDBACK_BU_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_BU_ID +
                                                ", @FEEDBACK_TR_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID +
                                                ", @FEEDBACK_FEEDBACKQUESTS_ID=" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_FEEDBACKQUESTS_ID +
                                                ", @FEEDBACK_CATEGORY = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY +
                                                "', @FEEDBACK_STATUS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_STATUS +
                                                "', @FEEDBACK_LASTMDFBY  =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.LASTMDFBY +
                                                " , @FEEDBACK_LASTMDFDATE='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))

                            status = true;
                        else
                            status = false;
                        break;
                    case operation.load:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK @Operation = 'load', @FEEDBACK_TR_ID =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_TR_ID +
                                                ", @FEEDBACK_CATEGORY = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_CATEGORY +
                                                "', @FEEDBACK_STATUS = '" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.FEEDBACK_STATUS +
                                                "', @FEEDBACK_LASTMDFBY  =" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.LASTMDFBY +
                                                " , @FEEDBACK_LASTMDFDATE='" + _obj_SMHR_TRAININGFEEDBACK_RESPONSE.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))

                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }

                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region PMS_KRA_OBJECTIVES

        public static DataTable Get_Max_Kra_ID()
        {
            DataTable dt = ExecuteQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'GET_MAX_KRA_ID'");
            return dt;
        }

        public static bool set_PMS_KRA_OBJECTIVES(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            bool status = false;
            if (_obj_pms_kra_objectives.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'INSERT',   @KRA_OBJ_NAME = '" + _obj_pms_kra_objectives.KRA_OBJ_NAME +
                                    "',@KRA_OBJ_BU_ID = " + _obj_pms_kra_objectives.BUID +
                                    " ,@KRA_OBJ_KRA_ID = " + _obj_pms_kra_objectives.KRA_OBJ_KRA_ID +
                                    " ,@KRA_OBJ_ORG_ID = " + _obj_pms_kra_objectives.ORGANISATION_ID +
                                    " ,@KRA_OBJ_CREATED_BY = " + _obj_pms_kra_objectives.CREATEDBY +
                                    " ,@KRA_OBJ_CREATED_DATE = '" + _obj_pms_kra_objectives.CREATEDDATE +
                                    "',@KRA_OBJ_ISACTIVE = " + _obj_pms_kra_objectives.KRA_OBJ_ISACTIVE))
                    status = true;
                else
                    status = false;
            }
            if (_obj_pms_kra_objectives.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'UPDATE',@KRA_OBJ_NAME = '" + _obj_pms_kra_objectives.KRA_OBJ_NAME +
                                    "',@KRA_OBJ_BU_ID = " + _obj_pms_kra_objectives.BUID +
                                    " ,@KRA_OBJ_KRA_ID = " + _obj_pms_kra_objectives.KRA_OBJ_KRA_ID +
                                    " ,@KRA_OBJ_ORG_ID = " + _obj_pms_kra_objectives.ORGANISATION_ID +
                                    " ,@KRA_OBJ_MODIFIED_BY = " + _obj_pms_kra_objectives.LASTMDFBY +
                                    " ,@KRA_OBJ_MODIFIED_DATE = '" + _obj_pms_kra_objectives.LASTMDFDATE +
                                    "',@KRA_OBJ_ISACTIVE = " + _obj_pms_kra_objectives.KRA_OBJ_ISACTIVE +
                                    " ,@KRA_OBJ_ID = " + _obj_pms_kra_objectives.KRA_OBJ_ID))
                    status = true;
                else
                    status = false;
            }

            return status;
        }

        public static DataTable GET_PMS_KRA_OBJECTIVES(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            DataTable dt = ExecuteQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'GET_PMS_OBJ', @KRA_OBJ_KRA_ID = " + Convert.ToInt32(_obj_pms_kra_objectives.KRA_OBJ_KRA_ID)
                    + ", @KRA_OBJ_ORG_ID = " + _obj_pms_kra_objectives.ORGANISATION_ID);
            return dt;
        }

        public static DataTable GET_PMS_KRA_OBJECTIVESBY_OBJ_ID(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            DataTable dt = ExecuteQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'GET_PMS_KRA_OBJ', @KRA_OBJ_ID = " + Convert.ToInt32(_obj_pms_kra_objectives.KRA_OBJ_ID));
            return dt;
        }

        public static DataTable CHECK_KRA_NAME_EXISTS(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            DataTable dt = ExecuteQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'CHECK_KRA_NAME_EXISTS',   @KRA_OBJ_NAME = '" + _obj_pms_kra_objectives.KRA_OBJ_NAME + "'");
            return dt;
        }

        public static bool GET_INACTIVE_KRA_OBJ(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            bool status = false;

            if (_obj_pms_kra_objectives.OPERATION == operation.Insert1)
            {
                if (ExecuteNonQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'INACTIVE_KRA_OBJ', @KRA_OBJ_ID = " + _obj_pms_kra_objectives.KRA_OBJ_ID))
                    status = true;
            }
            else
            {
                if (ExecuteNonQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'ACTIVE_KRA_OBJ', @KRA_OBJ_ID = " + _obj_pms_kra_objectives.KRA_OBJ_ID))
                    status = true;
            }

            return status;
        }

        public static bool CHANGE_KRA_NAME(PMS_KRA_OBJECTIVES _obj_pms_kra_objectives)
        {
            bool status = false;

            if (ExecuteNonQuery("EXEC USP_PMS_KRA_OBJECTIVES @OPERATION = 'CHANGE_KRA_NAME', @KRA_OBJ_NAME = '" + _obj_pms_kra_objectives.KRA_OBJ_NAME +
                                "',@KRA_OBJ_ID = " + _obj_pms_kra_objectives.KRA_OBJ_ID +
                                " ,@KRA_OBJ_MODIFIED_BY = " + _obj_pms_kra_objectives.LASTMDFBY +
                                " ,@KRA_OBJ_MODIFIED_DATE = '" + _obj_pms_kra_objectives.LASTMDFDATE + "'"))
                status = true;

            return status;
        }

        #endregion

        #region SMHR_ASSIGNFEEDBACK_EMPLOYEE

        public static DataTable get__SMHR_ASSIGNFEEDBACK_EMPLOYEE(SMHR_ASSIGNFEEDBACK_EMPLOYEE _obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE)
        {
            DataTable dt = new DataTable();
            switch (_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE @MODE = 1");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE @MODE = 2,@ASSIGNFEED_FEEBAK_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGNFEED_FEEBAK_ID) +
                                      ",@ASSIGN_EMP_ID= " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_EMP_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE @MODE = 5,@ASSIGN_CREATEDBY  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_CREATEDBY) +
                                      ",@ASSIGN_EMP_ID= " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_EMP_ID) + " ");

                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE @MODE = 6,@ASSIGNFEED_FEEBAK_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGNFEED_FEEBAK_ID) +
                                      " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_SMHR_ASSIGNFEEDBACK_EMPLOYEE(SMHR_ASSIGNFEEDBACK_EMPLOYEE _obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE)
        {
            bool status = false;
            switch (_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE] @MODE = 3 ,@ASSIGNFEED_FEEBAK_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGNFEED_FEEBAK_ID) +
                                        ",@ASSIGN_EMP_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_EMP_ID) +
                                        ",@ASSIGN_CREATEDBY = " + Convert.ToInt32(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_CREATEDBY) +
                                        ",  @ASSIGN_CREATEDDATE = '" + Convert.ToDateTime(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_ASSIGNFEEDBACK_EMPLOYEE] @MODE = 4 ,@ASSIGNFEED_FEEBAK_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGNFEED_FEEBAK_ID) +
                                        ",@ASSIGN_EMP_ID  = " + Convert.ToString(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_EMP_ID) +
                                        ",@ASSIGN_LASTMDFBY = " + Convert.ToInt32(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_CREATEDBY) +
                                        ",  @ASSIGN_LASTMDFDATE = '" + Convert.ToDateTime(_obj_SMHR_ASSIGNFEEDBACK_EMPLOYEE.ASSIGN_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRAININGATTENDANCEDTLS

        public static DataTable get_TRgAttandencedtls(SMHR_TRAININGATTENDANCEDTLS _obj_Smhr_TrngAttendanceDtls)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TrngAttendanceDtls.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 1");
                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 5,@ATTENDANCE_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "'" +
                                      ",@ATTENDANCE_TR_ID= " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_TR_ID) + " ");

                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 6,@ATTENDANCE_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "'" +
                                      ",@ATTENDANCE_TR_ID= " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_TR_ID) + " ");

                    break;
                case 7:
                    dt = ExecuteQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 7,@ATTENDANCE_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "'" +
                                      ",@ATTENDANCE_TR_ID= " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_TR_ID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TRgAttandencedtls(SMHR_TRAININGATTENDANCEDTLS _obj_Smhr_TrngAttendanceDtls)
        {
            bool status = false;
            switch (_obj_Smhr_TrngAttendanceDtls.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 3 ,@ATTENDANCE_TR_ID  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_TR_ID) +
                                        ",@ATTENDANCE_BU_ID  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_BU_ID) +
                                        ",@ATTENDANCE_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@ATTENDANCE_EMP_ID  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_EMP_ID) +
                                        ",@ATTENDANCE_STATUS  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_STATUS) +
                                        ",@ATTENDANCE_ISFINAL  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_ISFINAL) +
                                        ",@ATTENDANCE_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_CREATEDBY) +
                                        ",  @ATTENDANCE_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_smhr_Trgattendancedtls @MODE = 4,@ATTENDANCE_EMP_ID  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_EMP_ID) +
                                        ",@ATTENDANCE_STATUS  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_STATUS) +
                                        ",@ATTENDANCE_ISFINAL  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_ISFINAL) +
                                        ",@ATTENDANCE_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@ATTENDANCE_TR_ID  = " + Convert.ToString(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_TR_ID) +
                                        ",@ATTENDANCE_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_LASTMDFBY) +
                                        ",  @ATTENDANCE_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TrngAttendanceDtls.ATTENDANCE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRGFEEDBACKQUESDTLS

        public static DataTable get_TRGFEEDBAKQUESTDTLS(SMHR_TRGFEEDBACKQUESDTLS _obj_Smhr_TRGFEEDBACKQUESDTLS)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TRGFEEDBACKQUESDTLS.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRGFEEDBACKDTLS] @MODE = 1 ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRGFEEDBACKDTLS] @MODE = 2,@TRFDBDTL_ID = " + Convert.ToString(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_ID) + " ");

                    break;
                case 4:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRGFEEDBACKDTLS] @MODE = 4,@TRFDBDTL_FDBID = " + Convert.ToString(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_FDBID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TRGFEEDBAKQUESTDTLS(SMHR_TRGFEEDBACKQUESDTLS _obj_Smhr_TRGFEEDBACKQUESDTLS)
        {
            bool status = false;
            switch (_obj_Smhr_TRGFEEDBACKQUESDTLS.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TRGFEEDBACKDTLS @MODE = 3,@TRFDBDTL_FDBID= '" + Convert.ToString(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_FDBID) + "'" +
                                        ", @TRFDBDTL_QUESTIONSID= '" + Convert.ToString(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_QUESTIONSID) + "'" +
                                        ",  @TRFDBDTL_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_CREATEDBY) + "" +
                                        ", @TRFDBDTL_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_TRGFEEDBACKQUESDTLS.TRFDBDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRAININGSCHEDULE

        public static DataTable get_TRAININGSCHEDULE(SMHR_TRAININGSCHEDULE _obj_Smhr_TRAININGSCHEDULE)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TRAININGSCHEDULE.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 1");
                    break;
                case 4:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 4");
                    break;
                case 8:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 8 ,@TS_ORG_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ORG_ID) +
                                      ",@TS_TR_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_TR_ID) +
                                      " ");
                    break;
                case 9:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 9 ,@TS_ORG_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ORG_ID) +
                                      ", @TS_PARAM1 = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM1) + ", @TS_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_LASTMDFDATE).ToString("MM/dd/yyyy") + "' ");

                    break;
                case 11:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 11 ,@TS_ORG_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ORG_ID) +
                                      ",@TS_SCHEDULEID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_SCHEDULEID) +
                                      ",@TS_PARAM1  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM1) +
                                      ",@TS_STARTDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_STARTDATE).ToString("MM/dd/yyyy") +
                                      "'" + ", @TS_STARTTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_STARTTIME) +
                                      "'" + ", @TS_ENDTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ENDTIME) +
                                      "'");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TRAININGSCHEDULE(SMHR_TRAININGSCHEDULE _obj_Smhr_TRAININGSCHEDULE)
        {
            bool status = false;
            switch (_obj_Smhr_TRAININGSCHEDULE.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 3 ,@TS_TR_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_TR_ID) +
                                        ", @TS_STARTDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @TS_ENDTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ENDTIME) + "'" +
                                        ",@TS_ENDDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@TS_STARTTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_STARTTIME) + "'" +
                                        ",@TS_SESSIONS  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_SESSIONS) +
                                        ",@TS_ORG_ID=" + _obj_Smhr_TRAININGSCHEDULE.TS_ORG_ID +
                                        ",@TS_RECURRENCETYPE  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_RECURRENCETYPE) +
                                        ",@TS_SELECTIONPARAM  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_SELECTIONPARAM) +
                                        ",@TS_PARAM1  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM1) +
                                        ",@TS_PARAM2  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM2) +
                                        ",@TS_PARAM3  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM3) +
                                        ",@TS_PARAM4  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM4) +
                                        ",@TS_PARAM5  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM5) +
                                        ",@TS_PARAM6  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM6) +
                                        ",@TS_PARAM7  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM7) +
                                        ",@TS_PARAM8  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM8) +
                                        ",@TS_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_TRAININGSCHEDULE.TS_CREATEDBY) +
                                        ",  @TS_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 5 ,@TS_TR_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_TR_ID) +
                                        ", @TS_STARTDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @TS_ENDTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_ENDTIME) + "'" +
                                        ",@TS_ENDDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@TS_STARTTIME = '" + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_STARTTIME) + "'" +
                                        ",@TS_SESSIONS  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_SESSIONS) +
                                        ",@TS_RECURRENCETYPE  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_RECURRENCETYPE) +
                                        ",@TS_SELECTIONPARAM  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_SELECTIONPARAM) +
                                        ",@TS_PARAM1  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM1) +
                                        ",@TS_PARAM2  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM2) +
                                        ",@TS_PARAM3  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM3) +
                                        ",@TS_PARAM4  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM4) +
                                        ",@TS_PARAM5  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM5) +
                                        ",@TS_PARAM6  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM6) +
                                        ",@TS_PARAM7  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM7) +
                                        ",@TS_PARAM8  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_PARAM8) +
                                        ",@TS_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_TRAININGSCHEDULE.TS_LASTMDFBY) +
                                        ",  @TS_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TRAININGSCHEDULE.TS_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 10:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_TRAININGSCHEDULE] @MODE = 10 ,@TS_TR_ID  = " + Convert.ToString(_obj_Smhr_TRAININGSCHEDULE.TS_TR_ID) +
                                        ",@SESSION_SCHD_ID = " + Convert.ToInt32(_obj_Smhr_TRAININGSCHEDULE.CREATEDBY) +
                                        " "))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRAININGREQUEST

        public static DataTable get_TrgRqst(SMHR_TRAININGREQUEST _obj_Smhr_TrgRqst)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TrgRqst.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 1,@TR_ORG_ID=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                      ",@TR_RAISEDBY=" + _obj_Smhr_TrgRqst.TR_RAISEDBY +
                                      " ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 2,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 5,@TR_ORG_ID=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                      ",@TR_TITLE='" + Convert.ToString(_obj_Smhr_TrgRqst.TR_TITLE) + "' ");

                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 6");
                    break;
                case 7:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 7,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 8:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 8,@EMPID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_RAISEDBY) + ",@TR_ORG_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ORG_ID) + " ");

                    break;
                case 10:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 10,@TR_ORG_ID=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                      ",@TR_RAISEDBY=" + _obj_Smhr_TrgRqst.TR_RAISEDBY +
                                      " ");
                    break;
                case 11:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 11,@TRAINERDETAILS_BUSINESSUNITID= " + Convert.ToString(_obj_Smhr_TrgRqst.BUID) + "");
                    break;
                case 12:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 12,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 13:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 13,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 14:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 14,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 15:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 15,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 16:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 16,@TR_ORG_ID=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                      " ");
                    break;
                case 17:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 17,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 18:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 18,@TR_ORG_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ORG_ID) + ",@TR_LASTMDFBY= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_LASTMDFBY) + " ");

                    break;
                case 21:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 21,@TR_APPROVEDBY=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                      " ");
                    break;
                case 30:
                    dt = ExecuteQuery("EXEC USP_Smhr_RESOURCE @MODE = 8,@RESOUCE_TRID = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 22:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 22,@TR_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) + " ");

                    break;
                case 23:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 23,@TR_LASTMDFBY= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_LASTMDFBY) + " ");

                    break;
                case 24:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 24,  @TR_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_TrgRqst.TR_CREATEDDATE).ToString("MM/dd/yyyy") + "', @TR_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TrgRqst.TR_LASTMDFDATE).ToString("MM/dd/yyyy") + "' ");

                    break;
                case 25:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 25, @TR_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                      ",@TR_ORG_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ORG_ID) + " ");

                    break;
                case 28:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 28, @skillmax = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_DESCRIPTION) + "'" +
                                      "  ");

                    break;
                case 29:
                    dt = ExecuteQuery("EXEC USP_TrainingRequest @MODE = 29, @TR_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                      ",@TR_ORG_ID= " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ORG_ID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TrgRqst(SMHR_TRAININGREQUEST _obj_Smhr_TrgRqst)
        {
            bool status = false;
            switch (_obj_Smhr_TrgRqst.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_TrainingRequest @MODE = 3 ,@TR_COURSEID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_COURSEID) +
                                        ", @TR_TITLE = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_TITLE) + "'" +
                                        " , @TR_LOCATION = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_LOCATION) + "'" +
                                        " , @TR_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_DESCRIPTION) + "'" +
                                        " ,@TR_STATUS = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_STATUS) + "'" +
                                        " ,@TR_RAISEDBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_RAISEDBY) +
                                        ",@TR_ORG_ID=" + _obj_Smhr_TrgRqst.TR_ORG_ID +
                                        ", @TR_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_CREATEDBY) +
                                        ",  @TR_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_TrgRqst.TR_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_TrainingRequest @MODE = 4 , @TR_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                        ", @TR_COURSEID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_COURSEID) +
                                        ", @TR_TITLE = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_TITLE) + "'" +
                                        " , @TR_LOCATION = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_LOCATION) + "'" +
                                        " , @TR_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_DESCRIPTION) + "'" +
                                        " ,@TR_STATUS = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_STATUS) + "'" +
                                        " ,@TR_RAISEDBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_RAISEDBY) +
                                        ", @TR_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_LASTMDFBY) +
                                        ", @TR_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TrgRqst.TR_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case 9:
                    if (ExecuteNonQuery("EXEC USP_TrainingRequest @MODE = 9 , @TR_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                        ", @TR_STATUS = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_STATUS) + "'" +
                                        " ,@TR_APPROVEDBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_APPROVEDBY) +
                                        " "))
                        status = true;
                    else
                        status = false;

                    break;
                case 19:
                    if (ExecuteNonQuery("EXEC USP_TrainingRequest @MODE = 19 , @TR_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                        ", @TR_LASTMDFBY = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_LASTMDFBY) + "'" +
                                        " "))
                        status = true;
                    else
                        status = false;

                    break;
                case 27:
                    if (ExecuteNonQuery("EXEC USP_TrainingRequest @MODE = 27 , @SKILL_TRG_ID  = " + Convert.ToString(_obj_Smhr_TrgRqst.TR_ID) +
                                        ", @sInputList = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_DESCRIPTION) + "'" +
                                        " ,@SKILL_TRG_APPLICANT_EXPERT = " + Convert.ToInt32(_obj_Smhr_TrgRqst.LASTMDFBY) +
                                        ", @SKILL_TRG_ORG_ID = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_ORG_ID) +
                                        ", @SKILL_TRG_APPLICANT_ID = '" + Convert.ToString(_obj_Smhr_TrgRqst.TR_LASTMDFBY) + "'" +
                                        " , @SKILL_TRG_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_TrgRqst.TR_CREATEDBY) +
                                        " "))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TrgSaveFeedback

        public static DataTable get_TrgSaveFeedback(SMHR_TrgSaveFeedback _obj_Smhr_TrgSaveFeedback)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TrgSaveFeedback.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trg_SaveFeedback @MODE = 1 ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trg_SaveFeedback @MODE = 2,@SAVEFEEDBACK_ID = " + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_ID) + " ");

                    break;
                case 4:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trg_SaveFeedback @MODE = 4, @SAVEFEEDBACK_EMPLOYEE_ID_for= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_EMPLOYEE_ID_for) + "'" +
                                      ",@SAVEFEEDBACK_DATE='" + Convert.ToDateTime(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_DATE).ToString("MM/dd/yyyy") + "',@SAVEFEEDBACK_TR_ID = " + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_TR_ID) + " ,@SAVEFEEDBACK_EMP_ID = " + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_EMP_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trg_SaveFeedback @MODE = 5, @SAVEFEEDBACK_EMPLOYEE_ID_for= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_EMPLOYEE_ID_for) + "'" +
                                      ",@SAVEFEEDBACK_DATE='" + Convert.ToDateTime(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_DATE).ToString("MM/dd/yyyy") + "',@SAVEFEEDBACK_TR_ID = " + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_TR_ID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TrgSaveFeedback(SMHR_TrgSaveFeedback _obj_Smhr_TrgSaveFeedback)
        {
            bool status = false;
            switch (_obj_Smhr_TrgSaveFeedback.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_Smhr_Trg_SaveFeedback @MODE = 3,@SAVEFEEDBACK_TR_ID= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_TR_ID) + "'" +
                                        ", @SAVEFEEDBACK_EMP_ID= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_EMP_ID) + "'" +
                                        ", @SAVEFEEDBACK_FEEDBACKQUESTS_ID= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTS_ID) + "'" +
                                        ", @SAVEFEEDBACK_FEEDBACKQUESTION= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTION) + "'" +
                                        ",@SAVEFEEDBACK_FEEDBACKQUESTS_OPTION1= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTS_OPTION1) + "'" +
                                        ",@SAVEFEEDBACK_FEEDBACKQUESTS_OPTION2= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTS_OPTION2) + "'" +
                                        ",@SAVEFEEDBACK_FEEDBACKQUESTS_OPTION3= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTS_OPTION3) + "'" +
                                        ",@SAVEFEEDBACK_FEEDBACKQUESTS_OPTION4= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_FEEDBACKQUESTS_OPTION4) + "'" +
                                        ", @SAVEFEEDBACK_STATUS= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_STATUS) + "'" +
                                        ", @SAVEFEEDBACK_EMPLOYEE_ID_for= '" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_EMPLOYEE_ID_for) + "'" +
                                        ",@SAVEFEEDBACK_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_CREATEDBY) + "" +
                                        ", @SAVEFEEDBACK_STARTTIME='" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_STARTTIME) + "', @SAVEFEEDBACK_ENDTIME='" + Convert.ToString(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_ENDTIME) + "', @SAVEFEEDBACK_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_CREATEDDATE).ToString("MM/dd/yyyy") + "' , @SAVEFEEDBACK_DATE='" + Convert.ToDateTime(_obj_Smhr_TrgSaveFeedback.SAVEFEEDBACK_DATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRAINING

        public static DataTable get_TRAINer(SMHR_TRAINER _obj_Smhr_Trner)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_Trner.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 1");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 2,@TRAINERDETAILS_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 5,@TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + " ");
                    break;
                case 6:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 6,@TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + " ,@TRAINERDETAILS_BUSINESSUNITID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_BUSINESSUNITID) + " ");
                    break;
                case 7:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 7,@TRAINERDETAILS_BUSINESSUNITID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_BUSINESSUNITID) + " ");
                    break;
                case 10:
                    dt = ExecuteQuery("EXEC USP_SMHR_TRAINERDETAILS @MODE = 10,@TRAINERDETAILS_EMPLOYEEID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) + " ");
                    break;
                case 11:
                    dt = ExecuteQuery("EXEC USP_SMHR_TRAINERDETAILS @MODE = 11,@TRAINERDETAILS_EMPLOYEEID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) + " ");
                    break;
                case 13:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 13, @TRAINERDETAILS_ORG_ID=" + _obj_Smhr_Trner.TRAINERDETAILS_ORG_ID + ",@TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + " ,@TRAINERDETAILS_BUSINESSUNITID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_BUSINESSUNITID) + " ");
                    break;
                case 14:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 14, @TRAINERDETAILS_ORG_ID=" + _obj_Smhr_Trner.TRAINERDETAILS_ORG_ID + ", @TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + "  ");
                    break;
                case 15:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 15, @TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + "  , @TRAINERDETAILS_ORG_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ORG_ID) + " ");
                    break;
                case 16:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 16, @TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + "  , @TRAINERDETAILS_ORG_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ORG_ID) + " ");
                    break;
                case 17:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 17, @TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + " ,@TRAINERDETAILS_EMPLOYEEID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) + " ");
                    break;
                case 18:
                    dt = ExecuteQuery("EXEC [USP_SMHR_TRAINERDETAILS] @MODE = 18, @TRAINERDETAILS_TR_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) + "  , @TRAINERDETAILS_ORG_ID= " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ORG_ID) + "  ");
                    break;
                default:
                    break;
            }
            return dt;
        }

        public static DataTable get_TrainerDetails(SMHR_TRAINER _obj_Smhr_Trner)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_Trner.OPERATION)
            {
                case operation.Select:
                    if (Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) == "0")
                        dt = ExecuteQuery("EXEC USP_SMHR_TRAINERDETAILS @Operation = 'Select',@TRAINERDETAILS_TR_ID=" + _obj_Smhr_Trner.TRAINERDETAILS_TR_ID + " ");
                    else
                        dt = ExecuteQuery("EXEC USP_SMHR_TRAINERDETAILS @Operation = 'Select', @TRAINERDETAILS_EMPLOYEEID =" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) + " ");

                    break;
            }
            return dt;
        }

        public static bool set_Trgtriner(SMHR_TRAINER _obj_Smhr_Trner)
        {
            bool status = false;
            switch (_obj_Smhr_Trner.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TRAINERDETAILS @MODE = 3 ,@TRAINERDETAILS_HR_MASTER_ID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_HR_MASTER_ID) +
                                        ",@TRAINERDETAILS_EMPLOYEEID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) +
                                        ",@TRAINERDETAILS_BUSINESSUNITID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_BUSINESSUNITID) +
                                        ", @TRAINERDETAILS_ORGANISATIONNAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ORGANISATIONNAME) + "'" +
                                        " , @TRAINERDETAILS_DESIGNATION = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_DESIGNATION) + "'" +
                                        " , @TRAINERDETAILS_EMPLOYEENAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEENAME) + "'" +
                                        " ,@TRAINERDETAILS_TRAININGINSTITUENAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TRAININGINSTITUENAME) + "'" +
                                        " ,@TRAINERDETAILS_ADDRESS  = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ADDRESS) + "'" +
                                        ",@TRAINERDETAILS_CONTACTNO  =  '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_CONTACTNO) + "'" +
                                        ",@TRAINERDETAILS_CONTACTPERSON  ='" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_CONTACTPERSON) + "'" +
                                        ", @TRAINERDETAILS_ORG_ID=" + _obj_Smhr_Trner.TRAINERDETAILS_ORG_ID + ",@TRAINERDETAILS_FACULTY  ='" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_FACULTY) + "'" +
                                        ",@TRAINERDETAILS_TR_ID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) +
                                        ",@TRAINERDETAILS_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_Trner.TRAINERDETAILS_CREATEDBY) +
                                        ",  @TRAINERDETAILS_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_Trner.TRAINERDETAILS_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TRAINERDETAILS @MODE = 4 , @TRAINERDETAILS_TR_ID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TR_ID) +
                                        ",@TRAINERDETAILS_HR_MASTER_ID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_HR_MASTER_ID) +
                                        ",@TRAINERDETAILS_EMPLOYEEID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEEID) +
                                        ",@TRAINERDETAILS_BUSINESSUNITID  = " + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_BUSINESSUNITID) +
                                        ", @TRAINERDETAILS_ORGANISATIONNAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ORGANISATIONNAME) + "'" +
                                        " , @TRAINERDETAILS_DESIGNATION = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_DESIGNATION) + "'" +
                                        " , @TRAINERDETAILS_EMPLOYEENAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_EMPLOYEENAME) + "'" +
                                        " ,@TRAINERDETAILS_TRAININGINSTITUENAME = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_TRAININGINSTITUENAME) + "'" +
                                        " ,@TRAINERDETAILS_ADDRESS  = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_ADDRESS) + "'" +
                                        " ,@TRAINERDETAILS_CONTACTNO  ='" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_CONTACTNO) + "'" +
                                        ",@TRAINERDETAILS_CONTACTPERSON  ='" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_CONTACTPERSON) + "'" +
                                        ",@TRAINERDETAILS_FACULTY  = '" + Convert.ToString(_obj_Smhr_Trner.TRAINERDETAILS_FACULTY) + "'" +
                                        ",@TRAINERDETAILS_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Trner.TRAINERDETAILS_LASTMDFBY) +
                                        ", @TRAINERDETAILS_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Trner.TRAINERDETAILS_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TRAINEE

        public static DataTable get_TRAINEE(SMHR_TRAINEE _obj_Smhr_TrnEE)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_TrnEE.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 1");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 2,@TRAINEE_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ID) + " ");

                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 5,@TRAINEE_TR_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) + ",@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + " ");

                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 6,@TRAINEE_TR_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) + ",@TRAINEE_BUSINESSUNIT_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) + ",@SESSION_DATE = '" + Convert.ToDateTime(_obj_Smhr_TrnEE.TRAINEE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                      " ");

                    break;
                case 7:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 7,@TRAINEE_EMPID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) + " ");

                    break;
                case 9:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 9,@TRAINEE_TR_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) + ",@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + ",@TRAINEE_BUSINESSUNIT_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) + " ");

                    break;
                case 12:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 12,@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + ",@TRAINEE_EMPID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) + " ");

                    break;
                case 14:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 14,@TRAINEE_EMPID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) + ",@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + " ");

                    break;
                //case 15:
                //    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 15,@TRAINEE_BUSINESSUNIT_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) + " ");

                //    break;

                case 15:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 15,@TRAINEE_EMPID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) + ",@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + ",@TRAINEE_BUSINESSUNIT_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) + " ");

                    break;
                case 16:
                    dt = ExecuteQuery("EXEC USP_Smhr_Trainee @MODE = 16,@TRAINEE_EMPID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) + ",@TRAINEE_ORG_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_ORG_ID) + ",@TRAINEE_BUSINESSUNIT_ID= " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool set_TrgtrinEE(SMHR_TRAINEE _obj_Smhr_TrnEE)
        {
            bool status = false;
            switch (_obj_Smhr_TrnEE.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC [USP_Smhr_Trainee] @MODE = 3 ,@TRAINEE_TR_ID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) +
                                        ",@TRAINEE_BUSINESSUNIT_ID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) +
                                        ",@TRAINEE_EMPID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) +
                                        ",@TRAINEE_ORG_ID=" + _obj_Smhr_TrnEE.TRAINEE_ORG_ID +
                                        ",@TRAINEE_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_TrnEE.TRAINEE_CREATEDBY) +
                                        ",  @TRAINEE_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_TrnEE.TRAINEE_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC [USP_Smhr_Trainee] @MODE = 4,@TRAINEE_TR_ID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) +
                                        ",@TRAINEE_BUSINESSUNIT_ID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_BUSINESSUNIT_ID) +
                                        ",@TRAINEE_EMPID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) +
                                        ",@TRAINEE_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_TrnEE.TRAINEE_LASTMDFBY) +
                                        ",  @TRAINEE_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_TrnEE.TRAINEE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 10:
                    if (ExecuteNonQuery("EXEC [USP_Smhr_Trainee] @MODE = 10,@TRAINEE_EMPID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_EMPID) +
                                        " "))
                        status = true;
                    else
                        status = false;
                    break;
                case 11:
                    if (ExecuteNonQuery("EXEC [USP_Smhr_Trainee] @MODE = 11,@TRAINEE_TR_ID  = " + Convert.ToString(_obj_Smhr_TrnEE.TRAINEE_TR_ID) +
                                        " "))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_FEEDBACK_QUESTIONS

        public static DataTable get_FeedbackQuestions(SMHR_FEEDBACK_QUESTIONS _obj_SMHR_FEEDBACK_QUESTIONS)
        {
            try
            {
                DataTable dt = new DataTable();
                switch (_obj_SMHR_FEEDBACK_QUESTIONS.OPERATION)
                {
                    case operation.Select:
                        if ((_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION == "") && (_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS == "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Select'");
                        }
                        else if ((_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION != "") && (_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS == "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Select' , @FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION + "'");
                        }
                        else if ((_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION == "") && (_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS != "Active"))
                        {
                            dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Select' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS + "'");
                        }
                        break;
                    case operation.Start:

                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Start', @FEEDBACKQUESTS_QUESTION_CATEGORY ='" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION_CATEGORY) + "' ,@FEEDBACKQUESTS_QUESTION ='" + Convert.ToString(_obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION) + "'");

                        break;
                    case operation.ADMIN:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Admin' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.TRAINER:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Trainer' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Course:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Course' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Counseller:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Counseller' , @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS + "'");
                        break;
                    case operation.Check:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Check' , @FEEDBACKQUESTS_ID='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_ID + "'");
                        break;
                    case operation.load:
                        dt = Dal.ExecuteQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Check' , @FEEDBACKQUESTS_ID='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_ID + "'");
                        break;
                    default:
                        break;
                }
                return dt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static bool set_Feedbackquestions(SMHR_FEEDBACK_QUESTIONS _obj_SMHR_FEEDBACK_QUESTIONS)
        {
            try
            {
                bool status = false;
                switch (_obj_SMHR_FEEDBACK_QUESTIONS.OPERATION)
                {
                    case operation.Insert:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Insert', @FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION +
                                                "', @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS +
                                                "', @FEEDBACKQUESTS_OPTION1='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION1 +
                                                "', @FEEDBACKQUESTS_OPTION2='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION2 +
                                                "', @FEEDBACKQUESTS_OPTION3='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION3 +
                                                "', @FEEDBACKQUESTS_OPTION4='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION4 +
                                                "', @FEEDBACKQUESTS_OPTION5 = '" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION5 +
                                                "', @FEEDBACKQUESTS_QUESTION_CATEGORY = " + _obj_SMHR_FEEDBACK_QUESTIONS.@FEEDBACKQUESTS_QUESTION_CATEGORY +
                                                ", @FEEDBACKQUESTS_CREATEDBY= " + _obj_SMHR_FEEDBACK_QUESTIONS.CREATEDBY +
                                                " , @FEEDBACKQUESTS_CREATEDDATE='" + _obj_SMHR_FEEDBACK_QUESTIONS.CREATEDDATE + "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    case operation.Update:
                        if (BLL.ExecuteNonQuery("EXEC USP_SMHR_TRAININGFEEDBACK_QUESTIONS @Operation = 'Update',@FEEDBACKQUESTS_QUESTION='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_QUESTION +
                                                "', @FEEDBACKQUESTS_STATUS='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_STATUS +
                                                "', @FEEDBACKQUESTS_OPTION1='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION1 +
                                                "', @FEEDBACKQUESTS_OPTION2='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION2 +
                                                "', @FEEDBACKQUESTS_OPTION3='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION3 +
                                                "', @FEEDBACKQUESTS_OPTION4='" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION4 +
                                                "', @FEEDBACKQUESTS_OPTION5 = '" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_OPTION5 +
                                                "', @FEEDBACKQUESTS_QUESTION_CATEGORY = " + _obj_SMHR_FEEDBACK_QUESTIONS.@FEEDBACKQUESTS_QUESTION_CATEGORY +
                                                ", @FEEDBACKQUESTS_ID = '" + _obj_SMHR_FEEDBACK_QUESTIONS.FEEDBACKQUESTS_ID +
                                                "', @FEEDBACKQUESTS_LASTMDFBY =" + _obj_SMHR_FEEDBACK_QUESTIONS.LASTMDFBY +
                                                " , @FEEDBACKQUESTS_LASTMDFDATE='" + _obj_SMHR_FEEDBACK_QUESTIONS.LASTMDFDATE + "'"))

                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }

                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region SMHR_COURSE

        public static DataTable get_Course(SMHR_COURSE _obj_Smhr_Course)
        {
            if (_obj_Smhr_Course.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Course.COURSE_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'select',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + "");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'select', @COURSE_ID =" + Convert.ToString(_obj_Smhr_Course.COURSE_ID));
            }
            else if (_obj_Smhr_Course.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation='Select2',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + "");
            }
            else if (_obj_Smhr_Course.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation='Select1',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ",@COURSE_CATEGORYID='" + _obj_Smhr_Course.COURSE_CATEGORYID + "'");
            }
            else if (_obj_Smhr_Course.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Get',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ",@COURSE_CATEGORYID='" + _obj_Smhr_Course.COURSE_CATEGORYID + "'");
            }
            else if (_obj_Smhr_Course.OPERATION == operation.Scale)
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Scale',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ",@COURSE_CATEGORYID='" + _obj_Smhr_Course.COURSE_CATEGORYID + "'");
            }

            if (_obj_Smhr_Course.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'select_new',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ", @COURSE_SELECTED =" + Convert.ToInt32(_obj_Smhr_Course.COURSE_BUSINESSUNIT_ID) + "");
            }
            else
            {
                if (_obj_Smhr_Course.COURSE_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Check',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ", @COURSE_NAME ='" + Convert.ToString(_obj_Smhr_Course.COURSE_NAME) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Check',@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID + ", @COURSE_NAME ='" + Convert.ToString(_obj_Smhr_Course.COURSE_NAME) + "', @COURSE_ID =" + Convert.ToString(_obj_Smhr_Course.COURSE_ID));
            }
        }

        public static bool set_ErrorLog(SMHR_LOANREQUEST obj)
        {
            try
            {
                return Dal.ExecuteNonQuery("DELETE FROM ERROR_LOG WHERE LOG_ID='" + obj.ERROR_LOG_ID + "'");
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable get_Error_Log(SMHR_LOANREQUEST obj)
        {
            return Dal.ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Select4'");
        }

        public static bool set_Course(SMHR_COURSE _obj_Smhr_Course)
        {
            bool status = false;
            switch (_obj_Smhr_Course.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Insert',@COURSE_CATEGORYID='" + Convert.ToString(_obj_Smhr_Course.COURSE_CATEGORYID) +
                                        "', @COURSE_NAME='" + _obj_Smhr_Course.COURSE_NAME +
                                        "', @COURSE_DESC='" + _obj_Smhr_Course.COURSE_DESC +
                                        "', @COURSE_DESIGNEDFOR='" + _obj_Smhr_Course.COURSE_DESIGNEDFOR +
                                        "' ,@COURSE_ORG_ID=" + _obj_Smhr_Course.COURSE_ORG_ID +
                                        " ,@COURSE_DURATION=" + _obj_Smhr_Course.COURSE_DURATION +
                                        " ,@COURSE_STATUS='" + _obj_Smhr_Course.COURSE_STATUS +
                                        "' , @COURSE_CREATEDBY= '" + Convert.ToString(_obj_Smhr_Course.CREATEDBY) +
                                        "', @COURSE_CREATEDDATE='" + _obj_Smhr_Course.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @COURSE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Course.LASTMDFBY) +
                                        " , @COURSE_LASTMDFDATE ='" + _obj_Smhr_Course.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Update', @COURSE_ID='" + Convert.ToString(_obj_Smhr_Course.COURSE_ID) +
                                        "' , @COURSE_CATEGORYID='" + Convert.ToString(_obj_Smhr_Course.COURSE_CATEGORYID) +
                                        "',    @COURSE_NAME='" + _obj_Smhr_Course.COURSE_NAME +
                                        "', @COURSE_DESC='" + _obj_Smhr_Course.COURSE_DESC +
                                        "',@COURSE_DURATION=" + _obj_Smhr_Course.COURSE_DURATION +
                                        " , @COURSE_CREATEDBY= " + Convert.ToString(_obj_Smhr_Course.CREATEDBY) +
                                        " , @COURSE_STATUS= '" + _obj_Smhr_Course.COURSE_STATUS +
                                        "', @COURSE_DESIGNEDFOR='" + _obj_Smhr_Course.COURSE_DESIGNEDFOR +
                                        "', @COURSE_CREATEDDATE='" + _obj_Smhr_Course.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @COURSE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Course.LASTMDFBY) +
                                        " , @COURSE_LASTMDFDATE ='" + _obj_Smhr_Course.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MASTERCOURSE @Operation = 'Delete', @COURSE_ID=" + Convert.ToString(_obj_Smhr_Course.COURSE_ID) +
                                        " , @COURSE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Course.LASTMDFBY) +
                                        " , @COURSE_LASTMDFDATE ='" + _obj_Smhr_Course.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_HRA

        /// <summary>
        /// This method is used TO GET PROJECTDETAILS BASED ON PROJECT_ID
        /// </summary>
        /// <returns>
        /// DataTable WITH PROJECT INFORMATION
        /// </returns>
        public static DataTable get_Smhr_Hra(SMHR_HRA _obj_Smhr_Hra)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_Hra.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 1,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 2,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ", @SMHR_PAYITEMID1 = '" + Convert.ToInt32(_obj_Smhr_Hra.SMHR_PAYITEMID1) + "'" +
                                      " ");
                    break;
                case 3:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 3,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 4:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 4,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 5:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 5,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@SMHR_PAYITEMID1 = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + " ");
                    break;
                case 6:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 6,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@SMHR_HRA_MUL_ID = ' " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + " ' ");
                    break;
                case 7:
                    //dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 7,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@SMHR_PAYITEMID1 = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + ",@smhr_org_id1 = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_HRA_MUL_ID = ' " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + " ' ");
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 7,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@smhr_org_id1 = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_PERIOD_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PERIOD_ID) + ",@SMHR_TAXEXEMPTELEMENTS = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_TAXEXEMPTEDELEMENTS) + "");
                    break;
                case 8:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 8,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 9:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 9,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 10:
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 10,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + " ");
                    break;
                case 11:
                    //dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 11,@SMHR_HRA_BU_ID = " + Convert.ToString(_obj_Smhr_Hra.BUID) + ",@SMHR_HRA_CREATEDBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + ",@SMHR_HRA_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_HRA_EXCESS_PAYITEM_ID = '" + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + "' ");
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 11,@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@SMHR_HRA_BU_ID = " + Convert.ToString(_obj_Smhr_Hra.BUID) + ",@SMHR_HRA_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + " ");
                    break;
                case 12:
                    //dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 11,@SMHR_HRA_BU_ID = " + Convert.ToString(_obj_Smhr_Hra.BUID) + ",@SMHR_HRA_CREATEDBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + ",@SMHR_HRA_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_HRA_EXCESS_PAYITEM_ID = '" + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + "' ");
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 12, @SMHR_PERIOD_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PERIOD_ID) + ",@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + ",@SMHR_TAXEXEMPTELEMENTS = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_TAXEXEMPTEDELEMENTS) + "");
                    break;
                case 13:
                    //dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 11,@SMHR_HRA_BU_ID = " + Convert.ToString(_obj_Smhr_Hra.BUID) + ",@SMHR_HRA_CREATEDBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + ",@SMHR_HRA_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_HRA_EXCESS_PAYITEM_ID = '" + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + "' ");
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 13, @SMHR_PERIOD_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PERIOD_ID) + ",@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + "");
                    break;
                case 14:
                    //dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 11,@SMHR_HRA_BU_ID = " + Convert.ToString(_obj_Smhr_Hra.BUID) + ",@SMHR_HRA_CREATEDBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PAYITEMID1) + ",@SMHR_HRA_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_LASTMDFBY) + ",@SMHR_HRA_EXCESS_PAYITEM_ID = '" + Convert.ToString(_obj_Smhr_Hra.SMHR_HRA_MUL_ID) + "' ");
                    dt = ExecuteQuery("EXEC [USP_SMHR_HRA] @MODE = 14, @SMHR_PERIOD_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_PERIOD_ID) + ",@SMHR_ORG_ID = " + Convert.ToString(_obj_Smhr_Hra.SMHR_ORG_ID) + "");
                    break;
                default:
                    break;
            }
            return dt;
        }

        #endregion

        #region SMHR_EMP_HRA

        /// <summary>
        /// This method is used TO GET PROJECTDETAILS BASED ON PROJECT_ID
        /// </summary>
        /// <returns>
        /// DataTable WITH PROJECT INFORMATION
        /// </returns>
        public static DataTable get_Smhr_emp_Hra(SMHR_EMP_HRA _obj_Smhr_emp_Hra)
        {
            DataTable dt = new DataTable();
            switch (_obj_Smhr_emp_Hra.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_EMP_HRA @MODE = 1 ");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_EMP_HRA @MODE = 2,@SMHR_HRA_ID = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_ID) + " ");
                    break;
                case 4:
                    dt = ExecuteQuery("EXEC USP_SMHR_EMP_HRA @MODE = 4,@SMHR_HRA_EMP_ID = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) + " ");
                    break;
                case 6:
                    dt = ExecuteQuery("EXEC USP_SMHR_EMP_HRA @MODE = 6,@SMHR_HRA_EMP_ID = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) + " ,@SMHR_HRA_PERIOD = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_PERIOD) + "");
                    break;
                default:
                    break;
            }
            return dt;
        }

        /// <summary>
        /// This Method is used for insertion, deletion and updation of  based upon criteria
        /// </summary>
        /// <returns>
        /// Bool
        /// </returns>
        public static bool set_Smhr_EMP_hra(SMHR_EMP_HRA _obj_Smhr_emp_Hra)
        {
            bool status = false;
            switch (_obj_Smhr_emp_Hra.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_HRA @MODE = 3,@SMHR_HRA_BU_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_BU_ID) +
                                        ",@SMHR_HRA_PAYITEM_ID= " + Convert.ToInt32(_obj_Smhr_emp_Hra.SMHR_HRA_PAYITEM_ID) +
                                        ",@SMHR_HRA_EXCESS_PAYITEM_ID= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EXCESS_PAYITEM_ID) + "'" +
                                        ",@SMHR_HRA_TAX_EXEMPT_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_TAX_EXEMPT_ID) +
                                        ",@SMHR_HRA_EMP_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) +
                                        ",@SMHR_HRA_EMP_HRAVALUE= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_HRAVALUE) + "'" +
                                        ",@SMHR_HRA_EMP_ACTUALRENT_PAID= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ACTUALRENT_PAID) + "'" +
                                        ",@SMHR_HRA_EMP_EXCESSSALARY= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_EXCESSSALARY) + "'" +
                                        ",@SMHR_HRA_EMP_TAX_LIMIT= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_TAX_LIMIT) + "'" +
                                        ",@SMHR_HRA_EMP_EXEMPTAMOUNT= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_EXEMPTAMOUNT) + "'" +
                                        ",@SMHR_ORG_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_ORG_ID) +
                                        ",@SMHR_METRO_HRA= '" + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_METRO_HRA) + "'" +
                                        ",@SMHR_ISCHECKED = '" + Convert.ToBoolean(_obj_Smhr_emp_Hra.SMHR_ISCHECKED) + "'" +
                                        ",  @SMHR_HRA_CREATEDBY=" + Convert.ToInt32(_obj_Smhr_emp_Hra.SMHR_HRA_CREATEDBY) + "" +
                                        ", @SMHR_HRA_PERIOD =  " + Convert.ToInt32(_obj_Smhr_emp_Hra.SMHR_HRA_PERIOD) + "" +
                                        ", @SMHR_HRA_EMP_ISFINALISED =  " + _obj_Smhr_emp_Hra.SMHR_HRA_EMP_ISFINALISED + "" +
                                        ",@SMHR_EMP_SELECT =  " + _obj_Smhr_emp_Hra.SMHR_ISSELECT + "" +
                                        ", @SMHR_HRA_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_emp_Hra.SMHR_HRA_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case 7:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_HRA @MODE = 7,@SMHR_HRA_EMP_ID = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) + ", @SMHR_HRA_TAX_EXEMPT_ID = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_TAX_EXEMPT_ID) + ", @SMHR_HRA_PERIOD = " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_PERIOD) + "  "))
                        // if (ExecuteNonQuery("EXEC USP_SMHR_EMP_HRA @MODE = 7,@SMHR_HRA_EMP_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) +
                        //       " "))
                        status = true;
                    else
                        status = false;
                    break;
                case 5:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_HRA @MODE = 5,@SMHR_HRA_EMP_ID= " + Convert.ToString(_obj_Smhr_emp_Hra.SMHR_HRA_EMP_ID) +
                                        " "))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_GLOBALCONFIG

        /// <summary>
        /// Gets the Details of Global Configuration Details. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-17
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static DataTable get_ConfigDetails(SMHR_GLOBALCONFIG _obj_smhr_globalConfig)
        {
            if (_obj_smhr_globalConfig.OPERATION == operation.Select)
            {
                if (_obj_smhr_globalConfig.GLOBALCONFIG_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'select',@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_globalConfig.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @operation='select',@GLOBALCONFIG_ID='" + _obj_smhr_globalConfig.GLOBALCONFIG_ID + "',@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_globalConfig.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_globalConfig.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'check',@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_globalConfig.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_globalConfig.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Get_org_Emp_Count',@GLOBALCONFIG_ORGANISATION_ID = " + _obj_smhr_globalConfig.ORGANISATION_ID);
            }
            else if (_obj_smhr_globalConfig.OPERATION == operation.Update)
            {
                return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Update_Get_org_Emp_Count',@GLOBALCONFIG_ORGANISATION_ID = " + _obj_smhr_globalConfig.ORGANISATION_ID);
            }
            else if (_obj_smhr_globalConfig.OPERATION == operation.ChkSuperModuleID)
            {
                return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'ChkSuperModuleID',@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_globalConfig.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'validate',@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_globalConfig.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Inserts the Details of Global Configuration Details. 
        /// </summary>
        /// <param name="_obj_Smhr_GlobalConfig"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-17
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static bool set_GlobalConfig(SMHR_GLOBALCONFIG _obj_Smhr_Global)
        {
            bool status = false;
            switch (_obj_Smhr_Global.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Insert'," +
                                    "  @GLOBALCONFIG_NEXT_ID ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NEXT_ID) + "'" +
                                    ", @GLOBALCONFIG_APP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_APP_ID) + "'" +
                                    ", @GLOBALCONFIG_EMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_EMP_ID) + "'" +
                                    ", @GLOBALCONFIG_NextEMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NextEMP_ID) + "'" +
                                    ", @GLOBALCONFIG_LOAN_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LOAN_ID) + "'" +
                                    ", @GLOBALCONFIG_LOAN_NO = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_LOAN_NO) + "'" +
                                    ", @GLOBALCONFIG_INCIDENT_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_INCIDENT_ID) + "'" +
                                    ", @GLOBALCONFIG_INCIDENT_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_INCIDENT_PREFIX + "'" +
                                    ", @GLOBALCONFIG_DISCIPLINE_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_ID) + "'" +
                                    ", @GLOBALCONFIG_DISCIPLINE_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_PREFIX + "'" +
                                    ", @GLOBALCONFIG_EMP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_APP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APP_CODE) + "'" +
                                    ", @GLOBALCONFIG_CONTRACT_EMPCODE='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONTRACT_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_CONSULTANT_EMPCODE='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONSULTANT_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_DOMAIN_IP = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_DOMAIN_IP) + "'" +
                                    ", @GLOBALCONFIG_USERNAME = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_USERNAME) + "'" +
                                    ", @GLOBALCONFIG_PWD = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_PWD) + "'" +
                                    ", @GLOBALCONFIG_MAILID = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_MAILID) + "'" +
                                    ", @GLOBALCONFIG_TRAVEL_REQUEST_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_CODE) + "'" +
                                    ", @GLOBALCONFIG_TRAVEL_REQUEST_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_ID) + "'" +
                                    ", @GLOBALCONFIG_SALSTRUCT_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_SALSTRUCT_CODE) + "'" +
                                    ", @GLOBALCONFIG_PERIOD_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_PERIOD_CODE) + "'" +
                                    ", @GLOBALCONFIG_JOB_REQ_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_JOB_REQ_CODE) + "'" +
                                    ", @GLOBALCONFIG_THEME = '" + Convert.ToString(_obj_Smhr_Global.GLOABLCONFIG_THEME) + "'" +
                                    ", @GLOBALCONFIG_DATEFORMAT='" + _obj_Smhr_Global.GLOBALCONFIG_DATEFORMAT + "'" +
                                    ", @GLOBALCONFIG_MAXAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MAXAGE + "'" +
                                    ", @GLOBALCONFIG_MINAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MINAGE + "'" +
                                    ", @GLOBALCONFIG_APPLIEDDATES='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APPLIEDDATES) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO) + "'" +
                                    ", @GLOBALCONFIG_CONTRACTNO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_CONTRACTNO) + "'" +
                                    ", @GLOBALCONFIG_RECRUIT_JOB_REQ_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_RECRUIT_JOBREQ_CODE) + "'" +
                                    ", @GLOBALCONFIG_TRAINEENO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAINEENO) + "'" +
                                    ", @GLOBALCONFIG_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Global.ORGANISATION_ID) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO_WIDTH = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_WIDTH) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO_HEIGHT = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_HEIGHT) + "'" +
                                    ", @GLOBALCONFIG_LEAVETRANFLAG ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LEAVETRANFLAG) + "'" +
                                    ", @GLOBALCONFIG_PEN_REGAMT ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_PEN_REGAMT) + "'" +
                                    ", @PayrollFooterMsg ='" + Convert.ToDouble(_obj_Smhr_Global.PayrollFooterMsg) + "'" +
                                    ",@GLOBALCONFIG_INSTAXRELIEF  ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_INSTAXRELIEF) + "'" +
                                    ",@GLOBALCONFIG_LSTMDFY_BY = " + _obj_Smhr_Global.LASTMDFBY))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Update'," +
                                    "  @GLOBALCONFIG_NEXT_ID ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NEXT_ID) + "'" +
                                    ", @GLOBALCONFIG_APP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_APP_ID) + "'" +
                                    ", @GLOBALCONFIG_EMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_EMP_ID) + "'" +
                                    ", @GLOBALCONFIG_NextEMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NextEMP_ID) + "'" +
                                    ", @GLOBALCONFIG_LOAN_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LOAN_ID) + "'" +
                                    ", @GLOBALCONFIG_LOAN_NO = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_LOAN_NO) + "'" +
                                    ", @GLOBALCONFIG_INCIDENT_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_INCIDENT_ID) + "'" +
                                    ", @GLOBALCONFIG_INCIDENT_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_INCIDENT_PREFIX + "'" +
                                    ", @GLOBALCONFIG_DISCIPLINE_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_ID) + "'" +
                                    ", @GLOBALCONFIG_DISCIPLINE_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_PREFIX + "'" +
                                    ", @GLOBALCONFIG_EMP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_APP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APP_CODE) + "'" +
                                    ", @GLOBALCONFIG_CONTRACT_EMPCODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONTRACT_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_CONSULTANT_EMPCODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONSULTANT_EMP_CODE) + "'" +
                                    ", @GLOBALCONFIG_DOMAIN_IP = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_DOMAIN_IP) + "'" +
                                    ", @GLOBALCONFIG_USERNAME = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_USERNAME) + "'" +
                                    ", @GLOBALCONFIG_PWD = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_PWD) + "'" +
                                    ", @GLOBALCONFIG_MAILID = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_MAILID) + "'" +
                                    ", @GLOBALCONFIG_TRAVEL_REQUEST_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_CODE) + "'" +
                                    ", @GLOBALCONFIG_TRAVEL_REQUEST_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_ID) + "'" +
                                    ", @GLOBALCONFIG_SALSTRUCT_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_SALSTRUCT_CODE) + "'" +
                                    ", @GLOBALCONFIG_PERIOD_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_PERIOD_CODE) + "'" +
                                    ", @GLOBALCONFIG_JOB_REQ_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_JOB_REQ_CODE) + "'" +
                                    ", @GLOBALCONFIG_THEME = '" + Convert.ToString(_obj_Smhr_Global.GLOABLCONFIG_THEME) + "'" +
                                    ", @GLOBALCONFIG_DATEFORMAT='" + _obj_Smhr_Global.GLOBALCONFIG_DATEFORMAT + "'" +
                                    ", @GLOBALCONFIG_MAXAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MAXAGE + "'" +
                                    ", @GLOBALCONFIG_MINAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MINAGE + "'" +
                                    ", @GLOBALCONFIG_APPLIEDDATES='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APPLIEDDATES) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO) + "'" +
                                    ", @GLOBALCONFIG_CONTRACTNO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_CONTRACTNO) + "'" +
                                    ", @GLOBALCONFIG_RECRUIT_JOB_REQ_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_RECRUIT_JOBREQ_CODE) + "'" +
                                    ", @GLOBALCONFIG_TRAINEENO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAINEENO) + "'" +
                                    ", @GLOBALCONFIG_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Global.ORGANISATION_ID) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO_WIDTH = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_WIDTH) + "'" +
                                    ", @GLOBALCONFIG_COMPANYLOGO_HEIGHT = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_HEIGHT) + "'" +
                                    ", @GLOBALCONFIG_LEAVETRANFLAG ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LEAVETRANFLAG) +
                                    "', @GLOBALCONFIG_PEN_REGAMT ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_PEN_REGAMT) + "'" +
                                    ", @PAYROLLFOOTERMSG ='" + Convert.ToString(_obj_Smhr_Global.PayrollFooterMsg) + "'" +
                                     ",@GLOBALCONFIG_INSTAXRELIEF  ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_INSTAXRELIEF) + "'" +
                                    ",@GLOBALCONFIG_LSTMDFY_BY = " + _obj_Smhr_Global.LASTMDFBY))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        ///// <summary>
        ///// Inserts the Details of Global Configuration Details. 
        ///// </summary>
        ///// <param name="_obj_Smhr_GlobalConfig"></param>
        ///// <returns>Boolean stating the Success or failure</returns>
        ///// <remarks>
        /////  Author             : Gunti Dheeraj 
        /////  Created on         : 2009-08-17
        /////  Last Modified on   : N/A
        /////  Last Modfied by    : N/A
        ///// </remarks>

        //public static bool set_GlobalConfig(SMHR_GLOBALCONFIG _obj_Smhr_Global)
        //{
        //    bool status = false;
        //    switch (_obj_Smhr_Global.OPERATION)
        //    {
        //        case operation.Insert:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Insert'," +
        //                            "  @GLOBALCONFIG_NEXT_ID ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NEXT_ID) + "'" +
        //                            ", @GLOBALCONFIG_APP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_APP_ID) + "'" +
        //                            ", @GLOBALCONFIG_EMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_EMP_ID) + "'" +
        //                            ", @GLOBALCONFIG_NextEMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NextEMP_ID) + "'" +
        //                            ", @GLOBALCONFIG_LOAN_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LOAN_ID) + "'" +
        //                            ", @GLOBALCONFIG_LOAN_NO = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_LOAN_NO) + "'" +
        //                            ", @GLOBALCONFIG_INCIDENT_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_INCIDENT_ID) + "'" +
        //                            ", @GLOBALCONFIG_INCIDENT_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_INCIDENT_PREFIX + "'" +
        //                            ", @GLOBALCONFIG_DISCIPLINE_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_ID) + "'" +
        //                            ", @GLOBALCONFIG_DISCIPLINE_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_PREFIX + "'" +
        //                            ", @GLOBALCONFIG_EMP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_APP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_CONTRACT_EMPCODE='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONTRACT_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_CONSULTANT_EMPCODE='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONSULTANT_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_DOMAIN_IP = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_DOMAIN_IP) + "'" +
        //                            ", @GLOBALCONFIG_USERNAME = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_USERNAME) + "'" +
        //                            ", @GLOBALCONFIG_PWD = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_PWD) + "'" +
        //                            ", @GLOBALCONFIG_MAILID = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_MAILID) + "'" +
        //                            ", @GLOBALCONFIG_TRAVEL_REQUEST_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_CODE) + "'" +
        //                            ", @GLOBALCONFIG_TRAVEL_REQUEST_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_ID) + "'" +
        //                            ", @GLOBALCONFIG_SALSTRUCT_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_SALSTRUCT_CODE) + "'" +
        //                            ", @GLOBALCONFIG_PERIOD_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_PERIOD_CODE) + "'" +
        //                            ", @GLOBALCONFIG_JOB_REQ_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_JOB_REQ_CODE) + "'" +
        //                            ", @GLOBALCONFIG_THEME = '" + Convert.ToString(_obj_Smhr_Global.GLOABLCONFIG_THEME) + "'" +
        //                            ", @GLOBALCONFIG_DATEFORMAT='" + _obj_Smhr_Global.GLOBALCONFIG_DATEFORMAT + "'" +
        //                            ", @GLOBALCONFIG_MAXAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MAXAGE + "'" +
        //                            ", @GLOBALCONFIG_MINAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MINAGE + "'" +
        //                            ", @GLOBALCONFIG_APPLIEDDATES='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APPLIEDDATES) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO) + "'" +
        //                            ", @GLOBALCONFIG_CONTRACTNO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_CONTRACTNO) + "'" +
        //                            ", @GLOBALCONFIG_RECRUIT_JOB_REQ_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_RECRUIT_JOBREQ_CODE) + "'" +
        //                            ", @GLOBALCONFIG_TRAINEENO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAINEENO) + "'" +
        //                            ", @GLOBALCONFIG_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Global.ORGANISATION_ID) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO_WIDTH = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_WIDTH) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO_HEIGHT = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_HEIGHT) + "'" +
        //                            ", @GLOBALCONFIG_LEAVETRANFLAG ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LEAVETRANFLAG) + "'" +
        //                            ", @GLOBALCONFIG_PEN_REGAMT ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_PEN_REGAMT) + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        case operation.Update:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_GLOBALCONFIG @Operation = 'Update'," +
        //                            "  @GLOBALCONFIG_NEXT_ID ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NEXT_ID) + "'" +
        //                            ", @GLOBALCONFIG_APP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_APP_ID) + "'" +
        //                            ", @GLOBALCONFIG_EMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_EMP_ID) + "'" +
        //                            ", @GLOBALCONFIG_NextEMP_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_NextEMP_ID) + "'" +
        //                            ", @GLOBALCONFIG_LOAN_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LOAN_ID) + "'" +
        //                            ", @GLOBALCONFIG_LOAN_NO = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_LOAN_NO) + "'" +
        //                            ", @GLOBALCONFIG_INCIDENT_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_INCIDENT_ID) + "'" +
        //                            ", @GLOBALCONFIG_INCIDENT_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_INCIDENT_PREFIX + "'" +
        //                            ", @GLOBALCONFIG_DISCIPLINE_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_ID) + "'" +
        //                            ", @GLOBALCONFIG_DISCIPLINE_PREFIX = '" + _obj_Smhr_Global.GLOBALCONFIG_DISCIPLINE_PREFIX + "'" +
        //                            ", @GLOBALCONFIG_EMP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_APP_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_CONTRACT_EMPCODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONTRACT_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_CONSULTANT_EMPCODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_CONSULTANT_EMP_CODE) + "'" +
        //                            ", @GLOBALCONFIG_DOMAIN_IP = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_DOMAIN_IP) + "'" +
        //                            ", @GLOBALCONFIG_USERNAME = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_USERNAME) + "'" +
        //                            ", @GLOBALCONFIG_PWD = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_PWD) + "'" +
        //                            ", @GLOBALCONFIG_MAILID = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_MAILID) + "'" +
        //                            ", @GLOBALCONFIG_TRAVEL_REQUEST_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_CODE) + "'" +
        //                            ", @GLOBALCONFIG_TRAVEL_REQUEST_ID = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAVEL_REQUEST_ID) + "'" +
        //                            ", @GLOBALCONFIG_SALSTRUCT_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_SALSTRUCT_CODE) + "'" +
        //                            ", @GLOBALCONFIG_PERIOD_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_PERIOD_CODE) + "'" +
        //                            ", @GLOBALCONFIG_JOB_REQ_CODE = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_JOB_REQ_CODE) + "'" +
        //                            ", @GLOBALCONFIG_THEME = '" + Convert.ToString(_obj_Smhr_Global.GLOABLCONFIG_THEME) + "'" +
        //                            ", @GLOBALCONFIG_DATEFORMAT='" + _obj_Smhr_Global.GLOBALCONFIG_DATEFORMAT + "'" +
        //                            ", @GLOBALCONFIG_MAXAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MAXAGE + "'" +
        //                            ", @GLOBALCONFIG_MINAGE='" + _obj_Smhr_Global.GLOBALCONFIG_MINAGE + "'" +
        //                            ", @GLOBALCONFIG_APPLIEDDATES='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_APPLIEDDATES) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO='" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO) + "'" +
        //                            ", @GLOBALCONFIG_CONTRACTNO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_CONTRACTNO) + "'" +
        //                            ", @GLOBALCONFIG_RECRUIT_JOB_REQ_CODE = '" + Convert.ToString(_obj_Smhr_Global.GLOBALCONFIG_RECRUIT_JOBREQ_CODE) + "'" +
        //                            ", @GLOBALCONFIG_TRAINEENO = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_TRAINEENO) + "'" +
        //                            ", @GLOBALCONFIG_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Global.ORGANISATION_ID) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO_WIDTH = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_WIDTH) + "'" +
        //                            ", @GLOBALCONFIG_COMPANYLOGO_HEIGHT = '" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_COMPANYLOGO_HEIGHT) + "'" +
        //                            ", @GLOBALCONFIG_LEAVETRANFLAG ='" + Convert.ToInt32(_obj_Smhr_Global.GLOBALCONFIG_LEAVETRANFLAG) +
        //                            "', @GLOBALCONFIG_PEN_REGAMT ='" + Convert.ToDouble(_obj_Smhr_Global.GLOBALCONFIG_PEN_REGAMT) + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        default:
        //            break;
        //    }
        //    return status;
        //}

        #endregion

        #region SMHR_SALARYSTRUCT

        /// <summary>
        /// Gets the Salary Structure Header Details. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static DataTable get_SalaryHeaderDetails(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            if (_obj_smhr_salaryStruct.OPERATION == operation.Select)
            {
                if (_obj_smhr_salaryStruct.SALARYSTRUCT_ID.ToString() == "0")
                {
                    //return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'Select'");
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'Select', " +
                                        "@SALARYSTRUCT_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'" +
                                        ",@SALARYSTRUCT_TYPE= " + (_obj_smhr_salaryStruct.ISDELETED == null ? "null" : "'1'"));
                }
                else
                {
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'Select'," +
                                        "@SALARYSTRUCT_ID = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                        ",@SALARYSTRUCT_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_salaryStruct.OPERATION == operation.LOADSALARY)
            {
                return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'LOADSALARY',@SALARYSTRUCT_ORGANISATION_ID='" + _obj_smhr_salaryStruct.SALARYSTRUCT_ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_salaryStruct.OPERATION == operation.Check)
            {
                if (_obj_smhr_salaryStruct.SALARYSTRUCT_CODE != null)
                {
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'Check', " +
                                        "@SALARYSTRUCT_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'," +
                                        "@SALARYSTRUCT_CODE = '" + _obj_smhr_salaryStruct.SALARYSTRUCT_CODE + "'");
                }
                else
                {
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'check', " +
                                        "@SALARYSTRUCT_NAME = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_NAME) + "'," +
                                        "@SALARYSTRUCT_ID = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                        "@SALARYSTRUCT_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_salaryStruct.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_SALARYSTRUCT @OPERATION='VALIDATE'," +
                                    "@SALARYSTRUCT_ID='" + _obj_smhr_salaryStruct.SALARYSTRUCT_ID + "'," +
                                    "@SALARYSTRUCT_TYPE='" + _obj_smhr_salaryStruct.SALARYSTRUCT_TYPE + "'," +
                                    "@SALARYSTRUCT_ORGANISATION_ID='" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCT @Operation = 'Empty'");
            }
        }

        /// <summary>
        /// Gets the Salary Structure Details. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static DataTable get_SalaryDetails(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            if (_obj_smhr_salaryStruct.OPERATION == operation.Select)
            {
                if (_obj_smhr_salaryStruct.SALARYSTRUCT_ID.ToString() == "0")
                {
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCTDETAILS @Operation = 'Select'");
                }
                else
                {
                    return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCTDETAILS @Operation = 'Select', @SALARYSTRUCTDET_ID = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'");
                }
            }
            else
            {
                return ExecuteQuery("Exec USP_SMHR_SALARYSTRUCTDETAILS @Operation = 'check', @SALARYSTRUCTDET_SALSTR_ID = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                    ",@PAYITEM_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method for Inserting and Updaing Salary Structure Header Details. 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_SalaryHeaderDetails(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            bool status = false;
            switch (_obj_smhr_salaryStruct.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCT @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCT_CODE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_CODE) + "'" +
                                        ",@SALARYSTRUCT_NAME = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_NAME) + "'" +
                                        ",@SALARYSTRUCT_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@SALARYSTRUCT_ENDDATE = " + (_obj_smhr_salaryStruct.SALARYSTRUCT_ENDDATE == null ? "null" : "'" + _obj_smhr_salaryStruct.SALARYSTRUCT_ENDDATE + "'") + "" +
                                        ",@SALARYSTRUCT_TYPE = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_TYPE) + "'" +
                                        ",@SALARYSTRUCT_ORGANISATION_ID = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_ORGANISATION_ID) + "'" +
                                        ",@SALARYSTRUCT_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDBY) + "'" +
                                        ",@SALARYSTRUCT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCT @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCT_CODE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_CODE) + "'" +
                                        ",@SALARYSTRUCT_NAME = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCT_NAME) + "'" +
                                        ",@SALARYSTRUCT_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_STARTDATE) + "'" +
                                        ",@SALARYSTRUCT_ENDDATE = " + (_obj_smhr_salaryStruct.SALARYSTRUCT_ENDDATE == null ? "null" : "'" + _obj_smhr_salaryStruct.SALARYSTRUCT_ENDDATE + "'") + "" +
                                        ",@SALARYSTRUCT_TYPE = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_TYPE) + "'" +
                                        ",@SALARYSTRUCT_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.SALARYSTRUCT_ORGANISATION_ID + "'" +
                                        ",@SALARYSTRUCT_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFBY) + "'" +
                                        ",@SALARYSTRUCT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@SALARYSTRUCT_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Inserting and Updaing Salary Structure Details. 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_SalaryDetails(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            bool status = false;
            switch (_obj_smhr_salaryStruct.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYITEM_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYITEM_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYMODE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYMODE) + "'" +
                                        ",@SALARYSTRUCTDET_PAYVALUE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYVALUE) + "'" +
                                        ",@SALARYSTRUCTDET_FORMULA = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_FORMULA) + "'" +
                                        ",@SALARYSTRUCTDET_CHECKED = '" + Convert.ToBoolean(_obj_smhr_salaryStruct.SALARYSTRUCTDET_CHECKED) + "'" +
                                        ",@SALARYSTRUCTDET_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDBY) + "'" +
                                        ",@SALARYSTRUCTDET_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;

                case operation.Insert_New:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYITEM_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYITEM_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYMODE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYMODE) + "'" +
                                        ",@SALARYSTRUCTDET_PAYVALUE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYVALUE) + "'" +
                                        ",@SALARYSTRUCTDET_FORMULA = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_FORMULA) + "'" +
                                        ",@SALARYSTRUCTDET_CHECKED = '" + Convert.ToBoolean(_obj_smhr_salaryStruct.SALARYSTRUCTDET_CHECKED) + "'" +
                                        ",@SALARYSTRUCTDET_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDBY) + "'" +
                                        ",@SALARYSTRUCTDET_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_CREATEDDATE).ToString("MM/dd/yyyy") + "'"+
                                        ", @SALARYSTRUCTDET_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFBY) + "'" +
                                         ",@SALARYSTRUCTDET_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@SALARYSTRUCTDET_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCTDET_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;

                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYITEM_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYITEM_ID) + "'" +
                                        ",@SALARYSTRUCTDET_PAYMODE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYMODE) + "'" +
                                        ",@SALARYSTRUCTDET_PAYVALUE = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_PAYVALUE) + "'" +
                                        ",@SALARYSTRUCTDET_FORMULA = '" + Convert.ToString(_obj_smhr_salaryStruct.SALARYSTRUCTDET_FORMULA) + "'" +
                                        ",@SALARYSTRUCTDET_CHECKED = '" + Convert.ToBoolean(_obj_smhr_salaryStruct.SALARYSTRUCTDET_CHECKED) + "'" +
                                        ",@SALARYSTRUCTDET_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFBY) + "'" +
                                        ",@SALARYSTRUCTDET_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_salaryStruct.SALARYSTRUCT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@SALARYSTRUCTDET_ID = '" + Convert.ToInt32(_obj_smhr_salaryStruct.SALARYSTRUCTDET_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + _obj_smhr_salaryStruct.SALARYSTRUCT_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = 'Delete1', @IDs = '" + Convert.ToString(_obj_smhr_salaryStruct.SDATE)
                                   + "', @OldIDs = '" + Convert.ToString(_obj_smhr_salaryStruct.EDATE)+"'"))


                    status = true;
                    else
                        status = false;
                    break;
                case operation.New:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + _obj_smhr_salaryStruct.SALARYSTRUCT_ID + "',@PAYITEM_ORGANISATION_ID='" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_Saldata(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            return ExecuteQuery(" EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'" +
                                        ",@SALARYSTRUCTDET_SALSTR_ID = '" + _obj_smhr_salaryStruct.SALARYSTRUCT_ID + "'");
        }

        /// <summary>
        /// Gets the Empty Salary Structure Details. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_EmptyValues(SMHR_SALARYSTRUCT _obj_smhr_salaryStruct)
        {
            return ExecuteQuery("EXEC USP_SMHR_SALARYSTRUCTDETAILS @Operation = '" + _obj_smhr_salaryStruct.OPERATION + "'," +
                                " @PAYITEM_ORGANISATION_ID = '" + _obj_smhr_salaryStruct.ORGANISATION_ID + "'");
        }

        public static DataTable get_EmptyValues_Pay(SMHR_EMP_PAYITEMS _obj_smhr_emp_payitems)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = '" + _obj_smhr_emp_payitems.OPERATION + "'" +
                                ",@SMHR_EMP_PAYITEMS_ID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_ID + "'");
        }

        #endregion

        #region SMHR_PAYITEMS

        /// <summary>
        ///  Method to Get PAYITEM Based on the CATEGORY_ID
        /// </summary>
        /// <param name="PAYITEM_ID"></param>
        /// <returns>Datatable with Categories Information</returns>
        /// <remarks>
        ///  Author             : MKD
        ///  Created on         : 2009-08-20 
        ///  Last Modified on   :  
        ///  Last Modfied by    : 
        /// </remarks>
        public static DataTable get_PayItems(SMHR_PAYITEMS _obj_Smhr_Payitems)
        {
            if (_obj_Smhr_Payitems.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Payitems.PAYITEM_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'select', @PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
                else
                    return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'select', @PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Finalized)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'LOAN INTEREST', @PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.EMPTY1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'EMPTY1', @PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.details)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation ='" + _obj_Smhr_Payitems.OPERATION + "',@MODE = '" + Convert.ToString(_obj_Smhr_Payitems.MODE) + "',@PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Select4)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Select4', @PAYITEM_ORGANISATION_ID = " + _obj_Smhr_Payitems.ORGANISATION_ID + ",@BUSINESSUNITID=" + Convert.ToString(_obj_Smhr_Payitems.BUID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'CHECK1', @PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + ",@PAYITEM_LOAN_PROCESSTYPE=" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_LOAN_PROCESSTYPE));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Check_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Check_New', @PAYITEM_ID = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Check2)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Check2',@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "',@LOANSETUP_FINPERIODID='" + _obj_Smhr_Payitems.PAYITEM_FINPERIODID + "'");
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Select_New',@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) +
                                    "', @PAYITEM_PAYITEMNAME ='" + _obj_Smhr_Payitems.PAYITEM_PAYITEMNAME +
                                    "', @LOANTRANS_EMP_ID ='" + _obj_Smhr_Payitems.LOGIN_ID + "'");
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.CHECKDUPLICATE)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'CHECKDUPLICATE',@PAYITEM_ACCOUNTHEAD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTHEAD) + "',@PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation ='" + _obj_Smhr_Payitems.OPERATION + "',@MODE = '" + Convert.ToString(_obj_Smhr_Payitems.MODE) + "',@PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.load)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation ='" + _obj_Smhr_Payitems.OPERATION + "',@LOANTRANS_LOANTYPE_ID = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMTYPE_ID) + ",@LOANTRANS_EMP_ID=" + _obj_Smhr_Payitems.LASTMDFBY);
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation ='" + _obj_Smhr_Payitems.OPERATION + "',@PAYITEM_ORGANISATION_ID = " + _obj_Smhr_Payitems.ORGANISATION_ID);
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Chk)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @OPERATION = '" + _obj_Smhr_Payitems.OPERATION + "',@PAYITEM_ORGANISATION_ID='" + _obj_Smhr_Payitems.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Payitems.PAYITEM_ID.ToString() == "0")
                    //if (_obj_Smhr_Payitems.OPERATION == operation.Check )
                    return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Check',@PAYITEM_PAYITEMNAME = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "',@PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
                else
                    return ExecuteQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Check', @PAYITEM_ID = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "',@PAYITEM_PAYITEMNAME = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "',@PAYITEM_ORGANISATION_ID = " + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_PAYITEMS table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_PayItems"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : 
        ///  Last Modfied by    : 
        /// </remarks>
        public static bool set_PayItems(SMHR_PAYITEMS _obj_Smhr_Payitems)
        {
            bool status = false;
            switch (_obj_Smhr_Payitems.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_PAYITEMS @Operation = 'Insert',@PAYITEM_PAYITEMNAME ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "'" +
                                         ",@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
                                         ",@PAYITEM_PAYDESC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYDESC) + "'" +
                                         ",@PAYITEM_ITEMTYPE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMTYPE_ID) + "" +
                                         ",@PAYITEM_ITEMMODE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMMODE_ID) + "" +
                                         ",@PAYITEM_CALMODE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CALMODE) + "'" +
                                         ",@PAYITEM_ACCOUNTTYPE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTTYPE) + "'" +
                                         ",@PAYITEM_POSTINGPROFILE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_POSTINGPROFILE) + "'" +
                                         ",@PAYITEM_PROCESSTYPE ='" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PROCESSTYPE) + "'" +
                                         ",@PAYITEM_PRINTINPAYREG = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYREG) + "'" +
                                         ",@PAYITEM_PRINTINPAYSLIP = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYSLIP) + "'" +
                                         ",@PAYITEM_CTC = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_CTC) + "'" +
                                         ",@PAYITEM_ISBENEFITABLE=" + _obj_Smhr_Payitems.PAYITEM_ISBENFITABLE + "" +
                                         ",@PAYITEM_ISTAXABLE=" + _obj_Smhr_Payitems.PAYITEM_ISTAXABLE + "" +
                                         ",@PAYITEM_ISOA_INCLUDED=" + _obj_Smhr_Payitems.PAYITEM_ISOA_INCLUDED + "" +
                                         ",@PAYITEM_INDIVIDUAL ='" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_INDIVIDUAL) + "'" +
                                         ",@PAYITEM_AUTOMATIC = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_AUTOMATIC) + "'" +
                                         ",@PAYITEM_STARTDATE ='" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                         ",@PAYITEM_ENDDATE = " + (_obj_Smhr_Payitems.PAYITEM_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_ENDDATE).ToString("MM/dd/yyyy") + "'") +
                                         ",@PAYITEM_ACCOUNTHEAD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTHEAD) + "'" +
                                         ",@PAYITEM_YTD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_YTD) + "'" +
                                         ",@PAYITEM_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_CREATEDBY) + "" +
                                         ",@PAYITEM_CREATEDDATE = '" + _obj_Smhr_Payitems.PAYITEM_CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                         ",@PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
                                         ",@PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                         ",@PAYITEM_ISAFFECTLOP='" + _obj_Smhr_Payitems.PAYITEM_ISAFFECTLOP + "'" +
                                         ",@PAYITEM_LOAN_PROCESSTYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESSTYPE + "'" +
                                         ",@PAYITEM_LOAN_PROCESS_TYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESS_TYPE + "'" +
                                         ",@PAYITEM_MINIMUM_PERCENTAGE_VALUE='" + _obj_Smhr_Payitems.PAYITEM_MINIMUM_PERCENTAGE_VALUE + "'" +
                                         ",@PAYITEM_INSTAXRELIEF = " + _obj_Smhr_Payitems.PAYITEM_INSTAXRELIEF +
                                         ",@PAYITEM_VOTENAME = '" + _obj_Smhr_Payitems.PAYITEM_VOTENAME + "'" +
                                         ",@PAYITEM_LOAN_INTEREST = '" + _obj_Smhr_Payitems.PAYITEM_LOAN_INTEREST +
                                         "',@PAYITEM_ISLOANVAILDATE='" + _obj_Smhr_Payitems.PAYITEM_ISLOANVAILDATE +
                                         "',@PAYITEM_PROJECTID='" + _obj_Smhr_Payitems.PAYITEM_PROJECTID + "'" +
                                         ",@PAYITEM_ISNULLIFY =" + _obj_Smhr_Payitems.PAYITEM_ISNULLIFY))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Update',@PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
                                         ",@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
                                        " , @PAYITEM_PAYITEMNAME ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "'" +
                                        " , @PAYITEM_PAYDESC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYDESC) + "'" +
                                        " ,@PAYITEM_ISBENEFITABLE=" + _obj_Smhr_Payitems.PAYITEM_ISBENFITABLE + "" +
                                        " ,@PAYITEM_ISTAXABLE=" + _obj_Smhr_Payitems.PAYITEM_ISTAXABLE + "" +
                                        " ,@PAYITEM_ISOA_INCLUDED=" + _obj_Smhr_Payitems.PAYITEM_ISOA_INCLUDED + "" +
                                        " , @PAYITEM_ITEMTYPE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMTYPE_ID) + "" +
                                        " , @PAYITEM_ITEMMODE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMMODE_ID) + "" +
                                        " , @PAYITEM_CALMODE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CALMODE) + "'" +
                                        " ,  @PAYITEM_ACCOUNTTYPE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTTYPE) + "'" +
                                        " , @PAYITEM_POSTINGPROFILE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_POSTINGPROFILE) + "'" +
                                        " , @PAYITEM_PROCESSTYPE ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PROCESSTYPE) + "'" +
                                        " , @PAYITEM_PRINTINPAYREG = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYREG) + "'" +
                                        " , @PAYITEM_PRINTINPAYSLIP = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYSLIP) + "'" +
                                        " , @PAYITEM_CTC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CTC) + "'" +
                                        " , @PAYITEM_INDIVIDUAL ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_INDIVIDUAL) + "'" +
                                        " , @PAYITEM_AUTOMATIC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_AUTOMATIC) + "'" +
                                        " , @PAYITEM_STARTDATE ='" + _obj_Smhr_Payitems.PAYITEM_STARTDATE.ToString("MM/dd/yyyy") + "'" +
                                        " , @PAYITEM_ENDDATE = " + (_obj_Smhr_Payitems.PAYITEM_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_ENDDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        " , @PAYITEM_ACCOUNTHEAD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTHEAD) + "'" +
                                        " , @PAYITEM_YTD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_YTD) + "'" +
                                        " , @PAYITEM_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
                                        " , @PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                        " , @PAYITEM_ISAFFECTLOP='" + _obj_Smhr_Payitems.PAYITEM_ISAFFECTLOP + "'" +
                                        ",@PAYITEM_LOAN_PROCESSTYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESSTYPE + "'" +
                                        ",@PAYITEM_LOAN_PROCESS_TYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESS_TYPE + "'" +
                                        ",@PAYITEM_MINIMUM_PERCENTAGE_VALUE='" + _obj_Smhr_Payitems.PAYITEM_MINIMUM_PERCENTAGE_VALUE + "'" +
                                        ",@PAYITEM_INSTAXRELIEF = " + _obj_Smhr_Payitems.PAYITEM_INSTAXRELIEF +
                                        ",@PAYITEM_VOTENAME = '" + _obj_Smhr_Payitems.PAYITEM_VOTENAME + "'" +
                                         ",@PAYITEM_LOAN_INTEREST = '" + _obj_Smhr_Payitems.PAYITEM_LOAN_INTEREST +
                                         "',@PAYITEM_ISLOANVAILDATE='" + _obj_Smhr_Payitems.PAYITEM_ISLOANVAILDATE +
                                         "',@PAYITEM_PROJECTID='" + _obj_Smhr_Payitems.PAYITEM_PROJECTID + "'" +
                                         ",@PAYITEM_ISNULLIFY =" + _obj_Smhr_Payitems.PAYITEM_ISNULLIFY))
                        status = true;
                    else
                        status = false;
                    break;

                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'delete', @PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
                        ",@PAYITEM_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
                        " , @ISDELETED = " + Convert.ToString(_obj_Smhr_Payitems.ISDELETED) + "" +
                                        " , @PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
                                        " , @PAYITEM_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_LASTMDFDATE) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Priority', @PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
                                        " , @PAYITEM_PRIORITY = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PROCESSPRIORITY) + "" +
                                        " , @PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
                                        " , @PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return true;
        }

        ///// <summary>
        ///// Method to Insert or update into the SMHR_PAYITEMS table Using Information Passed using the Object. 
        ///// </summary>
        ///// <param name="_obj_Smhr_PayItems"></param>
        ///// <returns>Boolean stating the Success or failure</returns>
        ///// <remarks>
        /////  Author             : MKD 
        /////  Created on         : 2009-08-20
        /////  Last Modified on   : 
        /////  Last Modfied by    : 
        ///// </remarks>
        //public static bool set_PayItems(SMHR_PAYITEMS _obj_Smhr_Payitems)
        //{
        //    bool status = false;
        //    switch (_obj_Smhr_Payitems.OPERATION)
        //    {
        //        case operation.Insert:
        //            if (ExecuteNonQuery(" EXEC USP_SMHR_PAYITEMS @Operation = 'Insert',@PAYITEM_PAYITEMNAME ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "'" +
        //                                ",@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
        //                                ",@PAYITEM_PAYDESC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYDESC) + "'" +
        //                                ",@PAYITEM_ITEMTYPE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMTYPE_ID) + "" +
        //                                ",@PAYITEM_ITEMMODE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMMODE_ID) + "" +
        //                                ",@PAYITEM_CALMODE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CALMODE) + "'" +
        //                                ",@PAYITEM_ACCOUNTTYPE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTTYPE) + "'" +
        //                                ",@PAYITEM_POSTINGPROFILE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_POSTINGPROFILE) + "'" +
        //                                ",@PAYITEM_PROCESSTYPE ='" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PROCESSTYPE) + "'" +
        //                                ",@PAYITEM_PRINTINPAYREG = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYREG) + "'" +
        //                                ",@PAYITEM_PRINTINPAYSLIP = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYSLIP) + "'" +
        //                                ",@PAYITEM_CTC = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_CTC) + "'" +
        //                                ",@PAYITEM_ISBENEFITABLE=" + _obj_Smhr_Payitems.PAYITEM_ISBENFITABLE + "" +
        //                                ",@PAYITEM_ISTAXABLE=" + _obj_Smhr_Payitems.PAYITEM_ISTAXABLE + "" +
        //                                ",@PAYITEM_ISOA_INCLUDED=" + _obj_Smhr_Payitems.PAYITEM_ISOA_INCLUDED + "" +
        //                                ",@PAYITEM_INDIVIDUAL ='" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_INDIVIDUAL) + "'" +
        //                                ",@PAYITEM_AUTOMATIC = '" + Convert.ToBoolean(_obj_Smhr_Payitems.PAYITEM_AUTOMATIC) + "'" +
        //                                ",@PAYITEM_STARTDATE ='" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_STARTDATE).ToString("MM/dd/yyyy") + "'" +
        //                                ",@PAYITEM_ENDDATE = " + (_obj_Smhr_Payitems.PAYITEM_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_ENDDATE).ToString("MM/dd/yyyy") + "'") +
        //                                ",@PAYITEM_ACCOUNTHEAD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTHEAD) + "'" +
        //                                ",@PAYITEM_YTD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_YTD) + "'" +
        //                                ",@PAYITEM_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_CREATEDBY) + "" +
        //                                ",@PAYITEM_CREATEDDATE = '" + _obj_Smhr_Payitems.PAYITEM_CREATEDDATE.ToString("MM/dd/yyyy") + "'" +
        //                                ",@PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
        //                                ",@PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
        //                                ",@PAYITEM_ISAFFECTLOP='" + _obj_Smhr_Payitems.PAYITEM_ISAFFECTLOP + "'" +
        //                                ",@PAYITEM_LOAN_PROCESSTYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESSTYPE + "'" +
        //                                ",@PAYITEM_MINIMUM_PERCENTAGE_VALUE='" + _obj_Smhr_Payitems.PAYITEM_MINIMUM_PERCENTAGE_VALUE + "'"))
        //                status = true;
        //            else
        //                status = false;

        //            break;
        //        case operation.Update:

        //            if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Update',@PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
        //                                ",@PAYITEM_ORGANISATION_ID = '" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
        //                                " , @PAYITEM_PAYITEMNAME ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYITEMNAME) + "'" +
        //                                " , @PAYITEM_PAYDESC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PAYDESC) + "'" +
        //                                " ,@PAYITEM_ISBENEFITABLE=" + _obj_Smhr_Payitems.PAYITEM_ISBENFITABLE + "" +
        //                                " ,@PAYITEM_ISTAXABLE=" + _obj_Smhr_Payitems.PAYITEM_ISTAXABLE + "" +
        //                                " ,@PAYITEM_ISOA_INCLUDED=" + _obj_Smhr_Payitems.PAYITEM_ISOA_INCLUDED + "" +
        //                                " , @PAYITEM_ITEMTYPE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMTYPE_ID) + "" +
        //                                " , @PAYITEM_ITEMMODE_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ITEMMODE_ID) + "" +
        //                                " , @PAYITEM_CALMODE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CALMODE) + "'" +
        //                                " ,  @PAYITEM_ACCOUNTTYPE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTTYPE) + "'" +
        //                                " , @PAYITEM_POSTINGPROFILE= '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_POSTINGPROFILE) + "'" +
        //                                " , @PAYITEM_PROCESSTYPE ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PROCESSTYPE) + "'" +
        //                                " , @PAYITEM_PRINTINPAYREG = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYREG) + "'" +
        //                                " , @PAYITEM_PRINTINPAYSLIP = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PRINTINPAYSLIP) + "'" +
        //                                " , @PAYITEM_CTC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_CTC) + "'" +
        //                                " , @PAYITEM_INDIVIDUAL ='" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_INDIVIDUAL) + "'" +
        //                                " , @PAYITEM_AUTOMATIC = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_AUTOMATIC) + "'" +
        //                                " , @PAYITEM_STARTDATE ='" + _obj_Smhr_Payitems.PAYITEM_STARTDATE.ToString("MM/dd/yyyy") + "'" +
        //                                " , @PAYITEM_ENDDATE = " + (_obj_Smhr_Payitems.PAYITEM_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_ENDDATE).ToString("MM/dd/yyyy") + "'") + "" +
        //                                " , @PAYITEM_ACCOUNTHEAD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ACCOUNTHEAD) + "'" +
        //                                " , @PAYITEM_YTD = '" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_YTD) + "'" +
        //                                " , @PAYITEM_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
        //                                " , @PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
        //                                " , @PAYITEM_ISAFFECTLOP='" + _obj_Smhr_Payitems.PAYITEM_ISAFFECTLOP + "'" +
        //                                ",@PAYITEM_LOAN_PROCESSTYPE='" + _obj_Smhr_Payitems.PAYITEM_LOAN_PROCESSTYPE + "'" +
        //                                ",@PAYITEM_MINIMUM_PERCENTAGE_VALUE='" + _obj_Smhr_Payitems.PAYITEM_MINIMUM_PERCENTAGE_VALUE + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        case operation.Delete:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'delete', @PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
        //                                ",@PAYITEM_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Payitems.ORGANISATION_ID) + "'" +
        //                                " , @ISDELETED = " + Convert.ToString(_obj_Smhr_Payitems.ISDELETED) + "" +
        //                                " , @PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
        //                                " , @PAYITEM_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Payitems.PAYITEM_LASTMDFDATE) + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        case operation.Check:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS @Operation = 'Priority', @PAYITEM_ID =" + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_ID) + "" +
        //                                " , @PAYITEM_PRIORITY = " + Convert.ToString(_obj_Smhr_Payitems.PAYITEM_PROCESSPRIORITY) + "" +
        //                                " , @PAYITEM_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Payitems.PAYITEM_LASTMDFBY) + "" +
        //                                " , @PAYITEM_LASTMDFDATE = '" + _obj_Smhr_Payitems.PAYITEM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        default:
        //            break;
        //    }
        //    return true;
        //}

        public static DataTable get_PayItems_byOrgID(int orgID)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYITEMS_EMP @Operation = 'GET_PAYITEMS_BY_ORG_ID', @PAYITEM_ORGANISATION_ID = " + orgID);
        }

        #endregion

        #region SMHR_REDUCING_BALANCE

        public static bool set_EmpRedBalLoanTrans(SMHR_LOANTRANS _obj_smhr_LoanTrans)
        {
            bool status = false;
            switch (_obj_smhr_LoanTrans.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RedBal_CAL @LOANTRANS_EMP_ID = " + _obj_smhr_LoanTrans.LOANTRANS_EMP_ID + "" +
                                        ",@LOANTRANS_LOANNO = '" + _obj_smhr_LoanTrans.LOANTRANS_LOANNO + "'" +
                                        ",@LOANTRANS_LOANTYPE_ID=" + _obj_smhr_LoanTrans.LOANTRANS_LOANTYPE_ID + "" +
                                        ",@LOANTRANS_ISSUEDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRANS_LOANAMOUNT =" + _obj_smhr_LoanTrans.LOANTRANS_LOANAMOUNT + "" +
                                        ",@LOANTRANS_LOANINSTALL=" + _obj_smhr_LoanTrans.LOANTRANS_LOANINSTALL + "" +
                                        ",@LOANTRANS_INTERESTRATE=" + _obj_smhr_LoanTrans.LOANTRANS_INTERESTAMT + "" +
                                        ",@LOANTRANS_EFFDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_EFFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LOANPURPOSE = '" + _obj_smhr_LoanTrans.LOANTRAN_LOANPURPOSE + "'" +
                                        ",@LOANTRAN_PAYMODE = '" + _obj_smhr_LoanTrans.LOANTRAN_PAYMODE + "'" +
                                        ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_LoanTrans.LOANTRAN_CHEQUENUM + "'" +
                                        ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_LoanTrans.LOANTRAN_CREATEDBY + "'" +
                                        ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY + "'" +
                                        ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@CONFIRM  ='" + _obj_smhr_LoanTrans.CONFIRM + "'" +
                                        ",@LOANTRANS_ORGANISATION_ID='" + _obj_smhr_LoanTrans.ORGANISATION_ID + "'" +
                                        ",@LOANTRAN_TYPE = '" + _obj_smhr_LoanTrans.LOANTRAN_TYPE + "'" +
                                        ",@LOANTRAN_STATUS  =" + _obj_smhr_LoanTrans.LOANTRAN_STATUS + "" +
                                        ",@LOANTRANS_ID='" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LOANTRANS @Operation = '" + _obj_smhr_LoanTrans.OPERATION + "'" +
                                        ",@LOANTRANS_EMP_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_EMP_ID) + "'" +
                                        ",@LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_LoanTrans.LOANTRANS_LOANNO) + "'" +
                                        ",@LOANTRANS_LOANTYPE_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_LOANTYPE_ID) + "'" +
                                        ",@LOANTRANS_ISSUEDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRANS_LOANAMOUNT = '" + Convert.ToDouble(_obj_smhr_LoanTrans.LOANTRANS_LOANAMOUNT) + "'" +
                                        ",@LOANTRANS_LOANINSTALL = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_LOANINSTALL) + "'" +
                                        ",@LOANTRANS_INTERESTRATE=" + _obj_smhr_LoanTrans.LOANTRANS_INTERESTAMT + "" +
                                        ",@LOANTRANS_EFFDATE = '" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRANS_EFFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LOANPURPOSE = '" + Convert.ToString(_obj_smhr_LoanTrans.LOANTRAN_LOANPURPOSE) + "'" +
                                        ",@LOANTRAN_PAYMODE = '" + _obj_smhr_LoanTrans.LOANTRAN_PAYMODE + "'" +
                                        ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_LoanTrans.LOANTRAN_CHEQUENUM + "'" +
                                        //  ",@LOANTRAN_BALANCELOAN = '" + Convert.ToDouble(_obj_smhr_LoanTrans.LOANTRAN_BALANCELOAN) + "'" +
                                        ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_LoanTrans.LOANTRAN_CREATEDBY + "'" +
                                        ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_LoanTrans.LOANTRAN_LASTMDFBY + "'" +
                                        ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_LoanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LOANTRAN_TYPE = '" + _obj_smhr_LoanTrans.LOANTRAN_TYPE + "'" +
                                        ",@LOANTRAN_STATUS  =" + _obj_smhr_LoanTrans.LOANTRAN_STATUS + "" +
                                        ",@LOANTRANS_ID = '" + Convert.ToInt32(_obj_smhr_LoanTrans.LOANTRANS_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmpRedBalLoanTran(SMHR_LOANTRANS _obj_smhr_loanTrans)
        {
            if (_obj_smhr_loanTrans.OPERATION == operation.Select)
            {
                if (_obj_smhr_loanTrans.LOANTRANS_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select', @LOANTRAN_TYPE=" + _obj_smhr_loanTrans.LOANTRAN_TYPE + ",@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select',@LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
                }
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Select1', @LOANTRAN_TYPE = '" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "',@EMP_LOGIN_ID='" + _obj_smhr_loanTrans.LOGIN_ID + "'");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Validate',@LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_loanTrans.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.Check)
            {
                if (_obj_smhr_loanTrans.LOANTRANS_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Check', @LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_loanTrans.LOANTRANS_LOANNO) + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Check', @LOANTRANS_LOANNO = '" + Convert.ToString(_obj_smhr_loanTrans.LOANTRANS_LOANNO) + "', @LOANTRANS_ID = '" + _obj_smhr_loanTrans.LOANTRANS_ID + "'");
                }
            }
            else if (_obj_smhr_loanTrans.OPERATION == operation.EMPTY_R)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'EMPTY_R',@LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + ",@BUSINESSUNIT_ID = " + _obj_smhr_loanTrans.BUSINESSUNIT_ID + "");
            }
            else
            {
                if (_obj_smhr_loanTrans.LOANTRANS_EMP_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Empty'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LOANTRANS @Operation = 'Empty',@LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + ",@BUSINESSUNIT_ID = " + _obj_smhr_loanTrans.BUSINESSUNIT_ID + "");
                }
            }
        }

        public static DataTable Calculate_RedBal(SMHR_LOANTRANS _obj_smhr_loanTrans)
        {
            //DataTable dtval = new DataTable();
            return ExecuteQuery("EXEC USP_SMHR_RedBal_CAL @LOANTRANS_EMP_ID = " + _obj_smhr_loanTrans.LOANTRANS_EMP_ID + "" +
                                ",@LOANTRANS_LOANNO = '" + _obj_smhr_loanTrans.LOANTRANS_LOANNO + "'" +
                                ",@LOANTRANS_LOANTYPE_ID=" + _obj_smhr_loanTrans.LOANTRANS_LOANTYPE_ID + "" +
                                ",@LOANTRANS_ISSUEDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRANS_ISSUEDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRANS_LOANAMOUNT =" + _obj_smhr_loanTrans.LOANTRANS_LOANAMOUNT + "" +
                                ",@LOANTRANS_LOANINSTALL=" + _obj_smhr_loanTrans.LOANTRANS_LOANINSTALL + "" +
                                ",@LOANTRANS_INTERESTRATE=" + _obj_smhr_loanTrans.LOANTRANS_INTERESTAMT + "" +
                                ",@LOANTRANS_EFFDATE='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRANS_EFFDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRAN_LOANPURPOSE = '" + _obj_smhr_loanTrans.LOANTRAN_LOANPURPOSE + "'" +
                                ",@LOANTRAN_CHEQUENUM = '" + _obj_smhr_loanTrans.LOANTRAN_CHEQUENUM + "'" +
                                ",@LOANTRAN_CREATEDBY ='" + _obj_smhr_loanTrans.LOANTRAN_CREATEDBY + "'" +
                                ",@LOANTRAN_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRAN_LASTMDFBY ='" + _obj_smhr_loanTrans.LOANTRAN_LASTMDFBY + "'" +
                                ",@LOANTRAN_LASTMDFDATE ='" + Convert.ToDateTime(_obj_smhr_loanTrans.LOANTRAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                ",@LOANTRAN_PAYMODE = '" + _obj_smhr_loanTrans.LOANTRAN_PAYMODE + "'" +
                                ",@LOANTRAN_TYPE ='" + _obj_smhr_loanTrans.LOANTRAN_TYPE + "'" +
                                ",@CONFIRM  ='" + _obj_smhr_loanTrans.CONFIRM + "'" +
                                ",@LOANTRAN_STATUS  =" + _obj_smhr_loanTrans.LOANTRAN_STATUS + "" +
                                ",@LOANTRANS_ID='" + _obj_smhr_loanTrans.LOANTRANS_ID + "'");
            //return dtval;
        }

        #endregion

        #region SMHR_LOANTYPE

        public static DataTable get_LoanType(SMHR_LOANTYPE _obj_Smhr_LoanTyep)
        {
            if (_obj_Smhr_LoanTyep.OPERATION == operation.Select)
            {
                if (_obj_Smhr_LoanTyep.LOAN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'select', @LOAN_ID =" + Convert.ToString(_obj_Smhr_LoanTyep.LOAN_ID));
            }
            else if (_obj_Smhr_LoanTyep.OPERATION == operation.Empty)// to load loan type in transaction 
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Empty', @LOAN_LOANTYPE_ID =" + Convert.ToString(_obj_Smhr_LoanTyep.LOAN_LOANTYPE_ID));
            }
            else
            {
                if (_obj_Smhr_LoanTyep.LOAN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Check', @LOAN_CODE ='" + Convert.ToString(_obj_Smhr_LoanTyep.LOAN_CODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Check', @LOAN_CODE ='" + Convert.ToString(_obj_Smhr_LoanTyep.LOAN_CODE) + "', @LOAN_ID =" + Convert.ToString(_obj_Smhr_LoanTyep.LOAN_ID));
            }
        }

        public static bool set_LoanType(SMHR_LOANTYPE _obj_Smhr_LoanType)
        {
            bool status = false;
            switch (_obj_Smhr_LoanType.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Insert',@LOAN_LOANTYPE_ID='" + Convert.ToString(_obj_Smhr_LoanType.LOAN_LOANTYPE_ID) +
                                        "', @LOAN_CODE='" + _obj_Smhr_LoanType.LOAN_CODE +
                                        "', @LOAN_NAME='" + _obj_Smhr_LoanType.LOAN_NAME +
                                        "' , @LOAN_CREATEDBY= " + Convert.ToString(_obj_Smhr_LoanType.CREATEDBY) +
                                        " , @LOAN_CREATEDDATE='" + _obj_Smhr_LoanType.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOAN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoanType.LASTMDFBY) +
                                        " , @LOAN_LASTMDFDATE ='" + _obj_Smhr_LoanType.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Update', @LOAN_ID='" + Convert.ToString(_obj_Smhr_LoanType.LOAN_ID) +
                                        "' , @LOAN_LOANTYPE_ID='" + Convert.ToString(_obj_Smhr_LoanType.LOAN_LOANTYPE_ID) +
                                        "',    @LOAN_CODE='" + _obj_Smhr_LoanType.LOAN_CODE +
                                        "', @LOAN_NAME='" + _obj_Smhr_LoanType.LOAN_NAME +
                                        " ', @LOAN_CREATEDBY= " + Convert.ToString(_obj_Smhr_LoanType.CREATEDBY) +
                                        " , @LOAN_CREATEDDATE='" + _obj_Smhr_LoanType.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOAN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoanType.LASTMDFBY) +
                                        " , @LOAN_LASTMDFDATE ='" + _obj_Smhr_LoanType.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANTYPE_DETAILS @Operation = 'Delete', @LOAN_ID=" + Convert.ToString(_obj_Smhr_LoanType.LOAN_ID) +
                                        " , @LOAN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LoanType.LASTMDFBY) +
                                        " , @LOAN_LASTMDFDATE ='" + _obj_Smhr_LoanType.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_YTDOPENINGBALANCE

        public static DataTable get_YTDOpeningBalance(SMHR_YTDOPENINGBALANCE _obj_Smhr_YTDOpeningBalance)
        {
            if (_obj_Smhr_YTDOpeningBalance.OPERATION == operation.Select)
            {
                if (_obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID.ToString() == "0")

                    return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Select'");
                else

                    return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Select', @YTD_BUSINESSUNIT_ID =" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID) + ", @YTD_PERIOD_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PERIOD_ID) + ", @YTD_PAYITEM_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PAYITEM_ID));
            }
            else if (_obj_Smhr_YTDOpeningBalance.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Empty', @YTD_BUSINESSUNIT_ID =" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID) + ", @YTD_PERIOD_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PERIOD_ID) + ", @YTD_PAYITEM_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PAYITEM_ID));
            }
            else if (_obj_Smhr_YTDOpeningBalance.OPERATION == operation.EMPTY1)
            {
                return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'EMPTY1'," +
                                    " @YTD_ORGANISATION_ID =" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.ORGANISATION_ID) + "");
            }
            else
            {
                if (_obj_Smhr_YTDOpeningBalance.YTD_ID.ToString() == "0")

                    return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Select', @YTD_BUSINESSUNIT_ID =" + Convert.ToString(_obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID));
            }
        }

        public static DataTable get_YTDCount(SMHR_YTDOPENINGBALANCE _obj_Smhr_YTDOpeningBalance)
        {
            return ExecuteQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Validate', @YTD_BUSINESSUNIT_ID =" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID) + ", @YTD_PERIOD_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PERIOD_ID) + ", @YTD_PAYITEM_ID=" + Convert.ToInt32(_obj_Smhr_YTDOpeningBalance.YTD_PAYITEM_ID));
        }

        public static bool set_YTDOpeningBalance(SMHR_YTDOPENINGBALANCE _obj_Smhr_YTDOpeningBalance)
        {
            bool status = false;
            switch (_obj_Smhr_YTDOpeningBalance.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Insert', @YTD_BUSINESSUNIT_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID +
                                        ", @YTD_EMP_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_EMP_ID +
                                        ", @YTD_ORG_ID=" + _obj_Smhr_YTDOpeningBalance.ORGANISATION_ID +
                                        ", @YTD_PERIOD_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_PERIOD_ID +
                                        ", @YTD_PAYITEM_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_PAYITEM_ID +
                                        ", @YTD_OLDBALANCE=" + _obj_Smhr_YTDOpeningBalance.YTD_OLDBALANCE +
                                        ", @YTD_NEWBALANCE=" + _obj_Smhr_YTDOpeningBalance.YTD_NEWBALANCE +
                                        ", @YTD_OPERATION='" + _obj_Smhr_YTDOpeningBalance.YTD_OPERATION +
                                        "',@YTD_STATUS=" + _obj_Smhr_YTDOpeningBalance.YTD_STATUS +
                                        ", @YTD_CREATEDBY= " + Convert.ToString(_obj_Smhr_YTDOpeningBalance.CREATEDBY) +
                                        " , @YTD_CREATEDDATE='" + _obj_Smhr_YTDOpeningBalance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @YTD_LASTMDFBY =" + Convert.ToString(_obj_Smhr_YTDOpeningBalance.LASTMDFBY) +
                                        " , @YTD_LASTMDFDATE='" + _obj_Smhr_YTDOpeningBalance.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Update',@YTD_ID=" + Convert.ToString(_obj_Smhr_YTDOpeningBalance.YTD_ID) +
                                        ",@YTD_BUSINESSUNIT_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_BUSINESSUNIT_ID +
                                        ", @YTD_EMP_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_EMP_ID +
                                        ", @YTD_PERIOD_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_PERIOD_ID +
                                        ", @YTD_PAYITEM_ID=" + _obj_Smhr_YTDOpeningBalance.YTD_PAYITEM_ID +
                                        ", @YTD_OLDBALANCE=" + _obj_Smhr_YTDOpeningBalance.YTD_OLDBALANCE +
                                        ", @YTD_NEWBALANCE=" + _obj_Smhr_YTDOpeningBalance.YTD_NEWBALANCE +
                                        ", @YTD_OPERATION='" + _obj_Smhr_YTDOpeningBalance.YTD_OPERATION +
                                        "', @YTD_STATUS=" + _obj_Smhr_YTDOpeningBalance.YTD_STATUS +
                                        ", @YTD_CREATEDBY= " + Convert.ToString(_obj_Smhr_YTDOpeningBalance.CREATEDBY) +
                                        " , @YTD_CREATEDDATE='" + _obj_Smhr_YTDOpeningBalance.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @YTD_LASTMDFBY =" + Convert.ToString(_obj_Smhr_YTDOpeningBalance.LASTMDFBY) +
                                        " , @YTD_LASTMDFDATE='" + _obj_Smhr_YTDOpeningBalance.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_SCHEDULE

        public static DataTable GetSceduleDetails(SMHR_SCHEDULE _obj_Smhr_Schedule)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Schedule.Tr_Id.ToString() == "0")
            {
                dt = ExecuteQuery("EXEC USP_TRAININGDETAILS @operation = 'Select'");
            }
            else
            {
                dt = ExecuteQuery("EXEC USP_TRAININGDETAILS @operation = 'Select', @Tr_Id = " + _obj_Smhr_Schedule.Tr_Id + "");
            }
            return dt;
        }

        #endregion

        //# region SMHR_YTD_DETAILS_HISTORY

        //public static bool set_YTDHISOpeningBalance(SMHR_YTD_DETAILS_HISTORY _obj_Smhr_YTDHISOpeningBalance)
        //{
        //    bool status = false;
        //    if (ExecuteNonQuery("EXEC USP_SMHR_YTD_DETAILS @Operation = 'Insert', @YTD_BUSINESSUNIT_ID=" + _obj_Smhr_YTDHISOpeningBalance.YTD_BUSINESSUNIT_ID
        //                       + ", @YTD_EMP_ID=" + _obj_Smhr_YTDHISOpeningBalance.YTD_EMP_ID
        //                       + ", @YTD_PERIOD_ID=" + _obj_Smhr_YTDHISOpeningBalance.YTD_PERIOD_ID
        //                       + ", @YTD_PAYITEM_ID=" + _obj_Smhr_YTDHISOpeningBalance.YTD_PAYITEM_ID
        //                       + ", @YTD_OLDBALANCE=" + _obj_Smhr_YTDHISOpeningBalance.YTD_OLDBALANCE
        //                       + ", @YTD_NEWBALANCE=" + _obj_Smhr_YTDHISOpeningBalance.YTD_NEWBALANCE
        //                       + ", @YTD_OPERATION='" + _obj_Smhr_YTDHISOpeningBalance.YTD_OPERATION
        //                       + "',@YTD_STATUS=" + _obj_Smhr_YTDHISOpeningBalance.YTD_STATUS
        //                       + ", @YTD_CREATEDBY= " + Convert.ToString(_obj_Smhr_YTDHISOpeningBalance.CREATEDBY)
        //                       + " , @YTD_CREATEDDATE='" + _obj_Smhr_YTDHISOpeningBalance.CREATEDDATE.ToString("MM/dd/yyyy")
        //                       + "', @YTD_LASTMDFBY =" + Convert.ToString(_obj_Smhr_YTDHISOpeningBalance.LASTMDFBY)
        //                       + " , @YTD_LASTMDFDATE='" + _obj_Smhr_YTDHISOpeningBalance.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
        //        status = true;
        //    else
        //        status = false;

        //return status;

        //}

        #region SMHR_LEAVESTRUCT

        /// <summary>
        /// Gets the Leave Structure Header Details. 
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_LeaveStructHeaderDetails(SMHR_LEAVESTRUCT _obj_smhr_leaveStruct)
        {
            if (_obj_smhr_leaveStruct.OPERATION == operation.Select)
            {
                if (_obj_smhr_leaveStruct.LEAVESTRUCT_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCT @Operation = 'select'" +
                                        ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCT @Operation = 'select'," +
                                        "@LEAVESTRUCT_ID = '" + _obj_smhr_leaveStruct.LEAVESTRUCT_ID + "'" +
                                        ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_leaveStruct.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCT @Operation = 'select1'" +
                                    ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leaveStruct.ORGANISATION_ID +
                                    "',@LEAVESTRUCT_ID='" + _obj_smhr_leaveStruct.LEAVESTRUCT_ID + "'");
            }
            else if (_obj_smhr_leaveStruct.OPERATION == operation.loadleavestruct)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCT @Operation = 'loadleavestruct',@LEAVESTRUCT_ORGANISATION_ID='" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCT @Operation = 'check', " +
                                    "@LEAVESTRUCT_CODE = '" + Convert.ToString(_obj_smhr_leaveStruct.LEAVESTRUCT_CODE) + "'" +
                                    ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Gets the Leave Structure Details. 
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_LeaveStructDetails(SMHR_LEAVESTRUCT _obj_smhr_leaveStruct)
        {
            if (_obj_smhr_leaveStruct.OPERATION == operation.Select)
            {
                if (_obj_smhr_leaveStruct.LEAVESTRUCTDET_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = 'select', @LEAVESTRUCTDET_ID = '" + _obj_smhr_leaveStruct.LEAVESTRUCT_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = 'select'");
            }
            else if (_obj_smhr_leaveStruct.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = 'Select',@LEAVESTRUCTDET_LEAVESTR_ID = '" + _obj_smhr_leaveStruct.LEAVESTRUCT_ID + "',@ORGANISATION_ID='" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_leaveStruct.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = 'Get',@LEAVESTRUCTDET_LEAVESTR_ID = '" + _obj_smhr_leaveStruct.LEAVESTRUCT_ID + "',@ORGANISATION_ID='" + _obj_smhr_leaveStruct.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = 'Empty',@LEAVESTRUCTDET_LEAVESTR_ID = '" + _obj_smhr_leaveStruct.LEAVESTRUCTDET_LEAVESTR_ID + "',@ORGANISATION_ID = " + _obj_smhr_leaveStruct.ORGANISATION_ID);
            }
        }

        /// <summary>
        /// Method for Insert and Update the Leave Structure Header Details. 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_LeaveStructHeaderDetails(SMHR_LEAVESTRUCT _obj_smhr_leavestruct)
        {
            bool status = false;
            switch (_obj_smhr_leavestruct.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVESTRUCT @Operation = '" + _obj_smhr_leavestruct.OPERATION + "'" +
                                        ",@LEAVESTRUCT_CODE = '" + Convert.ToString(_obj_smhr_leavestruct.LEAVESTRUCT_CODE) + "'" +
                                        ",@LEAVESTRUCT_NAME = '" + Convert.ToString(_obj_smhr_leavestruct.LEAVESTRUCT_NAME) + "'" +
                                        ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leavestruct.LEAVESTRUCT_ORGANISATION_ID + "'" +
                                        ",@LEAVESTRUCT_STARTDATE = " + (_obj_smhr_leavestruct.LEAVESTRUCT_STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_STARTDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@LEAVESTRUCT_ENDDATE = " + (_obj_smhr_leavestruct.LEAVESTRUCT_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_ENDDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@LEAVESTRUCT_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_leavestruct.LEAVESTRUCT_CREATEDBY) + "'" +
                                        ",@LEAVESTRUCT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "',@IsAutoIncrement = '" + Convert.ToBoolean(_obj_smhr_leavestruct.IsAutoIncrement) +
                                        "',@AutoIncrementDays = '" + Convert.ToDecimal(_obj_smhr_leavestruct.AutoIncrementDays) + "'" +
                                        ", @LEAVESTRUCT_ISWEEKLYOFF = '" + _obj_smhr_leavestruct.LEAVESTRUCTDET_ISWEEKLYOFF + "'" +
                                        ", @LEAVESTRUCT_ALLOWHALFDAYS = '" + _obj_smhr_leavestruct.LEAVESTRUCTDET_ALLOWHALFDAYS + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVESTRUCT @Operation = '" + _obj_smhr_leavestruct.OPERATION + "'" +
                                        ",@LEAVESTRUCT_CODE = '" + Convert.ToString(_obj_smhr_leavestruct.LEAVESTRUCT_CODE) + "'" +
                                        ",@LEAVESTRUCT_NAME = '" + Convert.ToString(_obj_smhr_leavestruct.LEAVESTRUCT_NAME) + "'" +
                                        ",@LEAVESTRUCT_ORGANISATION_ID = '" + _obj_smhr_leavestruct.LEAVESTRUCT_ORGANISATION_ID + "'" +
                                        ",@LEAVESTRUCT_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LEAVESTRUCT_ENDDATE = " + (_obj_smhr_leavestruct.LEAVESTRUCT_ENDDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_ENDDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@LEAVESTRUCT_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_leavestruct.LEAVESTRUCT_LASTMDFBY) + "'" +
                                        ",@LEAVESTRUCT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_leavestruct.LEAVESTRUCT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@LEAVESTRUCT_ID = '" + Convert.ToInt32(_obj_smhr_leavestruct.LEAVESTRUCT_ID) +
                                        "',@IsAutoIncrement = '" + Convert.ToBoolean(_obj_smhr_leavestruct.IsAutoIncrement) +
                                        "',@AutoIncrementDays = '" + Convert.ToDecimal(_obj_smhr_leavestruct.AutoIncrementDays) + "'" +
                                        ", @LEAVESTRUCT_ISWEEKLYOFF = '" + _obj_smhr_leavestruct.LEAVESTRUCTDET_ISWEEKLYOFF + "'" +
                                        ", @LEAVESTRUCT_ALLOWHALFDAYS = '" + _obj_smhr_leavestruct.LEAVESTRUCTDET_ALLOWHALFDAYS + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Insert and Update the Leave Structure  Details. 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-20
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_LeaveStructDetails(SMHR_LEAVESTRUCT _obj_smhr_leaveStruct)
        {
            bool status = false;
            switch (_obj_smhr_leaveStruct.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVESTRUCTDET @Operation = '" + _obj_smhr_leaveStruct.OPERATION + "'" +
                                        ",@LEAVESTRUCTDET_LEAVETYPE_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LEAVETYPE_ID) + "'" +
                                        ",@LEAVESTRUCTDET_LEAVESTR_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LEAVESTR_ID) + "'" +
                                        ",@LEAVESTRUCTDET_ISWEEKLYOFF = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ISWEEKLYOFF) + "'" +
                                        ",@LEAVESTRUCTDET_ALLOWHALFDAYS = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ALLOWHALFDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_ACCUMULATE = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ACCUMULATE) + "'" +
                                        ",@LEAVESTRUCTDET_DAYSPERYEAR = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_DAYSPERYEAR) + "'" +
                                        ",@LEAVESTRUCTDET_MAXDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_MAXDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_CFORWARD = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CFORWARD) + "'" +
                                        ",@LEAVESTRUCTDET_CFMAXDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CFMAXDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_ENCASHMENT = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ENCASHMENT) + "'" +
                                        ",@LEAVESTRUCTDET_MAXENCASHDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_MAXENCASHDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CREATEDBY) + "'" +
                                        //",@LEAVESTRUCTDET_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CREATEDDATE) + "'" +
                                        ",@IsAutoIncrement = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.IsAutoIncrement) + "'" +
                                        ",@AutoIncrementDays = '" + Convert.ToDecimal(_obj_smhr_leaveStruct.AutoIncrementDays) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVESTRUCTDET @Operation = '" + _obj_smhr_leaveStruct.OPERATION + "'" +
                                        ",@LEAVESTRUCTDET_LEAVETYPE_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LEAVETYPE_ID) + "'" +
                                        ",@LEAVESTRUCTDET_LEAVESTR_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LEAVESTR_ID) + "'" +
                                        ",@LEAVESTRUCTDET_ISWEEKLYOFF = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ISWEEKLYOFF) + "'" +
                                        ",@LEAVESTRUCTDET_ALLOWHALFDAYS = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ALLOWHALFDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_ACCUMULATE = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ACCUMULATE) + "'" +
                                        ",@LEAVESTRUCTDET_DAYSPERYEAR = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_DAYSPERYEAR) + "'" +
                                        ",@LEAVESTRUCTDET_MAXDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_MAXDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_CFORWARD = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CFORWARD) + "'" +
                                        ",@LEAVESTRUCTDET_CFMAXDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_CFMAXDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_ENCASHMENT = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ENCASHMENT) + "'" +
                                        ",@LEAVESTRUCTDET_MAXENCASHDAYS = '" + Convert.ToDouble(_obj_smhr_leaveStruct.LEAVESTRUCTDET_MAXENCASHDAYS) + "'" +
                                        ",@LEAVESTRUCTDET_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LASTMDFBY) + "'" +
                                        //",@LEAVESTRUCTDET_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_leaveStruct.LEAVESTRUCTDET_LASTMDFDATE) + "'" +
                                        ",@IsAutoIncrement = '" + Convert.ToBoolean(_obj_smhr_leaveStruct.IsAutoIncrement) + "'" +
                                        ",@AutoIncrementDays = '" + Convert.ToDecimal(_obj_smhr_leaveStruct.AutoIncrementDays) + "'" +
                                        ",@LEAVESTRUCTDET_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVESTRUCTDET @Operation = '" + _obj_smhr_leaveStruct.OPERATION + "'," +
                                        " @LEAVESTRUCTDET_ID = '" + Convert.ToInt32(_obj_smhr_leaveStruct.LEAVESTRUCTDET_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_PERIOD

        /// <summary>
        /// Gets the Period.
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_PeriodHeaderDetails(SMHR_PERIOD _obj_smhr_period)
        {
            if (_obj_smhr_period.OPERATION == operation.Select)
            {
                if (_obj_smhr_period.PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'select', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'select', @PERIOD_ID = '" + _obj_smhr_period.PERIOD_ID + "',@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
            }
            else if (_obj_smhr_period.OPERATION == operation.Check)
            {
                if (_obj_smhr_period.PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'check', @PERIOD_NAME = '" + _obj_smhr_period.PERIOD_NAME + "', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'check', @PERIOD_ID = '" + _obj_smhr_period.PERIOD_ID + "',@PERIOD_NAME = '" + _obj_smhr_period.PERIOD_NAME + "', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
            }
            else if (_obj_smhr_period.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation='Empty',@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
            }
            else if (_obj_smhr_period.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation='Empty1',@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
            }
            else if (_obj_smhr_period.OPERATION == operation.Validate1)
            {
                //return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'VALIDATE1', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "'");
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'VALIDATE1', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "',@PERIOD_ENDDATE='" + _obj_smhr_period.PERIOD_ENDDATE + "',@PERIOD_ORGANISATION_ID='" + _obj_smhr_period.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_period.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation='CHECK1',@PERIOD_ID='" + _obj_smhr_period.PERIOD_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'VALIDATE', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "',@PERIOD_ORGANISATION_ID ='" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "'");
                //added organisation as we are unable to create same period for different organisations (bharath)
            }
        }

        /// <summary>
        /// Method to insert or update the Period . 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_PeriodHeaderdetails(SMHR_PERIOD _obj_smhr_period)
        {
            switch (_obj_smhr_period.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIOD @Operation = 'Insert',@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                    ",@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "" +
                                    ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                    ",@PERIOD_STARTDATE ='" + Convert.ToDateTime(_obj_smhr_period.PERIOD_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_ENDDATE= '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_DURATION =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "" +
                                    ",@PERIOD_DURATIONTYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) + "" +
                                    ",@PERIOD_CREATEDBY = " + Convert.ToInt32(_obj_smhr_period.PERIOD_CREATEDBY) + "" +
                                    ",@PERIOD_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIOD @Operation = 'Update',@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                    ",@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "" +
                                    ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                    ",@PERIOD_STARTDATE ='" + Convert.ToDateTime(_obj_smhr_period.PERIOD_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_ENDDATE= '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_DURATION =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "" +
                                    ",@PERIOD_DURATIONTYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) +
                                    ",@PERIOD_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_period.PERIOD_LASTMDFBY) + "" +
                                    ",@PERIOD_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_LASTMDFDATE).ToString("MM/dd/yyyy") + "'");
                    break;
                default:
                    break;
            }
            return true;
        }

        /// <summary>
        /// Method to Generate Period Details  Using Information Passed using the Object. 
        /// </summary>
        /// <param name=""></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable GeneratePeriodDetails(SMHR_PERIOD _obj_smhr_period)
        {
            return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_GENERATION @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE.ToString("MM/dd/yyyy") + "'" +
                                ",@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                ",@PERIOD_DURATION ='" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "'" +
                                ",@PERIOD_DURATIONTYPE ='" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) + "'");
        }

        #endregion

        #region SMHR_PERIODDETAILS

        /// <summary>
        /// Gets the Period Details. 
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_PeriodDetails(SMHR_PERIODDTL _obj_Smhr_Prddtl)
        {
            if (_obj_Smhr_Prddtl.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() == "0" && _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'select'");
                }
                else if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() != "0" && _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'select', @PRDDTL_ID = '" + _obj_Smhr_Prddtl.PRDDTL_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'select', @PRDDTL_PERIOD_ID = '" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
                }
            }
            else if (_obj_Smhr_Prddtl.OPERATION == operation.Empty)
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'Empty',@PRDDTL_PERIOD_ID='" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
            }
            else if (_obj_Smhr_Prddtl.OPERATION == operation.Check)
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'Check',@PRDDTL_PERIOD_ID='" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
            }
            else if (_obj_Smhr_Prddtl.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIODDETAILS @Operation='CHECK1',@PRDDTL_ID='" + _obj_Smhr_Prddtl.PRDDTL_ID + "',@PRDDTL_PERIOD_ID='" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'check'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS @Operation = 'check', @PERIOD_ID = '" + _obj_Smhr_Prddtl.PRDDTL_ID + "'");
                }
            }
        }

        /// <summary>
        /// Method to Insert or update into the Period Details table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Prddtl"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 
        public static string set_PeriodDetails(SMHR_PERIODDTL _obj_Smhr_Prddtl)
        {
            string StrQuery = string.Empty;
            switch (_obj_Smhr_Prddtl.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODDETAILS @Operation = 'Insert',@PRDDTL_ID=" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_ID) + "" +
                                    ",@PRDDTL_PERIOD_ID ='" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_PERIOD_ID) + "'" +
                                    ",@PRDDTL_NAME = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_NAME) + "" +
                                    ",@PRDDTL_STARTDATE = " + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_STARTDATE) + "'" +
                                    ",@PRDDTL_ENDATE =" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_ENDDATE) + "'" +
                                    ",@PRDDTL_CREATEDBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_CREATEDBY) + "" +
                                    ",@PRDDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_CREATEDDATE) + "'" +
                                    ",@PRDDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_LASTMDFBY) + "" +
                                    ",@PRDDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_LASTMDFDATE) + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODDETAILS @Operation = 'Update',@PRDDTL_ID=" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_ID) + "" +
                                    ",@PRDDTL_STATUS = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_STATUS) + "" +
                                    ",@PRDDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_LASTMDFBY) + "" +
                                    ",@PRDDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_LASTMDFDATE) + "'");
                    break;
                default:
                    break;
            }
            return StrQuery;
        }

        public static DataTable GetPeriodDetailsbyFinPeriod(int finPrdID)
        {
            return ExecuteQuery("EXEC USP_SMHR_PERIODDETAILS @Operation = 'Load_Period_Details', @PRDDTL_PERIOD_ID = " + finPrdID);
        }

        #endregion

        #region SMHR_VOLUNTARY_DEDUCTION

        public static DataTable LoadVolDedGrid(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'GRID',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable LOAD_FINAL_VOL_DED_GRID(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'FINAL_GRID',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_DIR_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_DIR_ID +
                                ",@VOLUNTARY_DEDUCTION_DEP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_DEP_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable LOAD_SMHR_VOLUNTARY_DEDUCTION(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'LOAD_VOL_DED_GRID',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID);
        }

        public static DataTable Load_Vol_Ded_Grid_New(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'LOAD_GRID_NEW',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable CheckEmpVolDedDataExists(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'CHECK_EXISTS',@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable GetVolDedIDbyEmployee(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'GET_VOL_DED_BY_EMP',@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable GetCalModeType(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'GET_CAL_MODE',@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable ChekEmpSalData(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'CHECK_EMPSAL_DATA',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static DataTable GetToBeDisposedAmnt(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'GET_DISPOSE_AMOUNT',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID);
        }

        public static DataTable GetVolDedAmount(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'GET_VOL_DED_AMOUNT',@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID);
        }

        public static bool set_SMHR_VOLUNTARY_DEDUCTION(SMHR_VOLUNTARY_DEDUCTION _obj_smhr_voluntary_deduction)
        {
            bool status = false;

            if (_obj_smhr_voluntary_deduction.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'INSERT',@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                    ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID +
                                    ",@VOLUNTARY_DEDUCTION_DIR_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_DIR_ID +
                                    ",@VOLUNTARY_DEDUCTION_DEP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_DEP_ID +
                                    ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                    ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID +
                                    ",@VOLUNTARY_DEDUCTION_CALCULATION_MODE = '" + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_CALCUALTION_MODE + "'"
                                    //+ ",@VOLUNTARY_DEDUCTION_AMOUNT_DISPOSED = '" + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_AMOUNT_DISPOSED + "'"
                                    //+ ",@VOLUNTARY_DEDUCTION_AMOUNT_TOBEDISPOSED = '" + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_AMOUNT_TOBEDISPOSED + "'"
                                    +
                                    ",@VOLUNTARY_DEDUCTION_CREATED_BY = " + _obj_smhr_voluntary_deduction.CREATEDBY +
                                    ",@VOLUNTARY_DEDUCTION_CREATED_DATE = '" + _obj_smhr_voluntary_deduction.CREATEDDATE + "'"))
                    status = true;
            }
            else if (_obj_smhr_voluntary_deduction.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION @OPERATION = 'UPDATE_DISPOSED_AMOUNT',@VOLUNTARY_DEDUCTION_BU_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_BU_ID +
                                    ",@VOLUNTARY_DEDUCTION_EMP_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_EMP_ID +
                                    ",@VOLUNTARY_DEDUCTION_PERIOD_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PERIOD_ID +
                                    ",@VOLUNTARY_DEDUCTION_PAYITEM_ID = " + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_PAYITEM_ID
                                    //+ ",@VOLUNTARY_DEDUCTION_AMOUNT_DISPOSED = '" + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_AMOUNT_DISPOSED + "'" + ",@VOLUNTARY_DEDUCTION_AMOUNT_TOBEDISPOSED = '" + _obj_smhr_voluntary_deduction.VOLUNTARY_DEDUCTION_AMOUNT_TOBEDISPOSED + "'"
                                    +
                                    ",@VOLUNTARY_DEDUCTION_MODIFIED_BY = " + _obj_smhr_voluntary_deduction.LASTMDFBY +
                                    ",@VOLUNTARY_DEDUCTION_MODIFIED_DATE = '" + _obj_smhr_voluntary_deduction.LASTMDFDATE + "'"))
                    status = true;
            }

            return status;
        }

        #endregion

        #region SMHR_VOLUNTARY_DEDUCTION_DETAIL

        public static bool set_SMHR_VOLUNTARY_DEDUCTION_DETAIL(SMHR_VOLUNTARY_DEDUCTION_DETAIL _obj_smhr_voluntary_deduction_detail)
        {
            bool status = false;

            if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_DETAIL @OPERATION = '" + _obj_smhr_voluntary_deduction_detail.OPERATION + "',@VOLUNTARY_DEDUCTION_DETAIL_VOLDED_ID = " + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_VOLDED_ID +
                                ",@VOLUNTARY_DEDUCTION_DETAIL_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_PRDDTL_ID +
                                ",@VOLUNTARY_DEDUCTION_DETAIL_STATUS = " + Convert.ToBoolean(_obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_STATUS) +
                                ",@VOLUNTARY_DEDUCTION_DETAIL_AMOUNT = '" + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_AMOUNT + "'" +
                                ",@VOLUNTARY_DEDUCTION_CREATED_BY = " + _obj_smhr_voluntary_deduction_detail.CREATEDBY +
                                ",@VOLUNTARY_DEDUCTION_CREATED_DATE = '" + _obj_smhr_voluntary_deduction_detail.CREATEDDATE + "'"))
                status = true;

            return status;
        }

        public static DataTable get_SMHR_VOLUNTARY_DEDUCTION_DETAIL(SMHR_VOLUNTARY_DEDUCTION_DETAIL _obj_smhr_voluntary_deduction_detail)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_DETAIL @OPERATION = 'GET_VOL_DED_DETAIL',@VOLUNTARY_DEDUCTION_DETAIL_ID = " + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_ID);
        }

        public static DataTable Check_SMHR_VOLUNTARY_DEDUCTION_DETAIL(SMHR_VOLUNTARY_DEDUCTION_DETAIL _obj_smhr_voluntary_deduction_detail)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_DETAIL @OPERATION = 'CHECK_EXISTS',@VOLUNTARY_DEDUCTION_DETAIL_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_PRDDTL_ID +
                                ",@VOLUNTARY_DEDUCTION_DETAIL_VOLDED_ID = " + _obj_smhr_voluntary_deduction_detail.VOLUNTARY_DEDUCTION_DETAIL_VOLDED_ID);
        }

        #endregion

        #region SMHR_VOLUNTARY_DEDUCTION_ARREARS

        public static DataTable LOAD_VOL_DED_ARREARS_GRID(SMHR_VOLUNTARY_DEDUCTION_ARREARS _obj_smhr_voluntary_deduction_arrears)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = 'LATEST_GRID',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction_arrears.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_DIR_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DIR_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_DEP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DEP_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID);
        }

        public static DataTable CheckExistsVolDedArrearsData(SMHR_VOLUNTARY_DEDUCTION_ARREARS _obj_smhr_voluntary_deduction_arrears)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = 'CHECK_EXISTS',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction_arrears.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID);
        }

        public static DataTable CheckEmpSalDtlsData(SMHR_VOLUNTARY_DEDUCTION_ARREARS _obj_smhr_voluntary_deduction_arrears)
        {
            return ExecuteQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = 'CHECK_EMPSAL_DTLS',@PERIOD_ORG_ID = " + _obj_smhr_voluntary_deduction_arrears.ORGANISATION_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID +
                                ",@LOANEFFECTIVEDATE = '" + _obj_smhr_voluntary_deduction_arrears.ENDDATE +
                                "',@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID);
        }

        public static bool set_SMHR_VOLUNTARY_DEDUCTION_ARREARS(SMHR_VOLUNTARY_DEDUCTION_ARREARS _obj_smhr_voluntary_deduction_arrears)
        {
            bool status = false;

            /*if (_obj_smhr_voluntary_deduction_arrears.OPERATION == operation.Insert)
            {
            if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = 'INSERT',@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_DIR_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DIR_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_DEP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DEP_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_AMOUNT = '" + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_AMOUNT + "'"
            + ",@VOLUNTARY_DEDUCTION_ARREARS_CREATED_BY = " + _obj_smhr_voluntary_deduction_arrears.CREATEDBY
            + ",@VOLUNTARY_DEDUCTION_ARREARS_CREATED_DATE = '" + _obj_smhr_voluntary_deduction_arrears.CREATEDDATE + "'"))
            status = true;
            }
            else if (_obj_smhr_voluntary_deduction_arrears.OPERATION == operation.Update)
            {
            if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = 'UPDATE',@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_DIR_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DIR_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_DEP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DEP_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID
            + ",@VOLUNTARY_DEDUCTION_ARREARS_AMOUNT = '" + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_AMOUNT + "'" 
            + ",@VOLUNTARY_DEDUCTION_ARREARS_MODIFIED_BY = " + _obj_smhr_voluntary_deduction_arrears.LASTMDFBY
            + ",@VOLUNTARY_DEDUCTION_ARREARS_MODIFIED_DATE = '" + _obj_smhr_voluntary_deduction_arrears.LASTMDFDATE + "'"))
            status = true;
            }
            */
            if (ExecuteNonQuery("EXEC USP_SMHR_VOLUNTARY_DEDUCTION_ARREARS @OPERATION = '" + _obj_smhr_voluntary_deduction_arrears.OPERATION + "'" +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_BU_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_BU_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_EMP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_EMP_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_DIR_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DIR_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_DEP_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_DEP_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PERIOD_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PRDDTL_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PAYITEM_ID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_AMOUNT = '" + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_AMOUNT + "'" +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_STATUS = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_STATUS +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_PAYTRANID = " + _obj_smhr_voluntary_deduction_arrears.VOLUNTARY_DEDUCTION_ARREARS_PAYTRANID +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_CREATED_BY = " + _obj_smhr_voluntary_deduction_arrears.CREATEDBY +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_CREATED_DATE = '" + _obj_smhr_voluntary_deduction_arrears.CREATEDDATE + "'" +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_MODIFIED_BY = " + _obj_smhr_voluntary_deduction_arrears.LASTMDFBY +
                                ",@VOLUNTARY_DEDUCTION_ARREARS_MODIFIED_DATE = '" + _obj_smhr_voluntary_deduction_arrears.LASTMDFDATE + "'"))
                status = true;

            return status;
        }

        #endregion

        #region SMHR_PERIOD_CALENDAR

        /// <summary>
        /// Gets the Period.
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_PeriodHeaderDetails_Calendar(SMHR_PERIOD _obj_smhr_period)
        {
            if (_obj_smhr_period.OPERATION == operation.Select)
            {
                if (_obj_smhr_period.PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'select', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'select', @PERIOD_ID = '" + _obj_smhr_period.PERIOD_ID + "',@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
            }
            else if (_obj_smhr_period.OPERATION == operation.Check)
            {
                if (_obj_smhr_period.PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'check', @PERIOD_NAME = '" + _obj_smhr_period.PERIOD_NAME + "', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'check', @PERIOD_ID = '" + _obj_smhr_period.PERIOD_ID + "',@PERIOD_NAME = '" + _obj_smhr_period.PERIOD_NAME + "', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
                }
            }
            else if (_obj_smhr_period.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIOD_CALENDAR @Operation='Empty',@PERIOD_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_period.OPERATION == operation.Validate1)
            {
                //return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'VALIDATE1', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "'");
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'VALIDATE1', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "',@PERIOD_ENDDATE='" + _obj_smhr_period.PERIOD_ENDDATE + "',@PERIOD_ORGANISATION_ID='" + _obj_smhr_period.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_period.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIOD_CALENDAR @Operation='CHECK1',@PERIOD_ID='" + _obj_smhr_period.PERIOD_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'VALIDATE', @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE + "'");
            }
        }

        /// <summary>
        /// Method to insert or update the Period . 
        /// </summary>
        /// <returns>Bool stating Success or Failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_PeriodHeaderdetails_Calendar(SMHR_PERIOD _obj_smhr_period)
        {
            switch (_obj_smhr_period.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'Insert',@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                    ",@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "" +
                                    ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                    ",@PERIOD_STARTDATE ='" + Convert.ToDateTime(_obj_smhr_period.PERIOD_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_ENDDATE= '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_DURATION =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "" +
                                    ",@PERIOD_DURATIONTYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) + "" +
                                    ",@PERIOD_CREATEDBY = " + Convert.ToInt32(_obj_smhr_period.PERIOD_CREATEDBY) + "" +
                                    ",@PERIOD_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIOD_CALENDAR @Operation = 'Update',@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                    ",@PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "" +
                                    ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                    ",@PERIOD_STARTDATE ='" + Convert.ToDateTime(_obj_smhr_period.PERIOD_STARTDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_ENDDATE= '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_ENDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@PERIOD_DURATION =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "" +
                                    ",@PERIOD_DURATIONTYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) +
                                    ",@PERIOD_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_period.PERIOD_LASTMDFBY) + "" +
                                    ",@PERIOD_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_period.PERIOD_LASTMDFDATE).ToString("MM/dd/yyyy") + "'");
                    break;
                default:
                    break;
            }
            return true;
        }

        /// <summary>
        /// Method to Generate Period Details  Using Information Passed using the Object. 
        /// </summary>
        /// <param name=""></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable GeneratePeriodDetails_Calendar(SMHR_PERIOD _obj_smhr_period)
        {
            return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_GENERATION_CALENDAR @PERIOD_STARTDATE = '" + _obj_smhr_period.PERIOD_STARTDATE.ToString("MM/dd/yyyy") + "'" +
                                ",@PERIOD_NAME = '" + Convert.ToString(_obj_smhr_period.PERIOD_NAME) + "'" +
                                ",@PERIOD_TYPE =" + Convert.ToInt32(_obj_smhr_period.PERIOD_TYPE) + "" +
                                ",@PERIOD_DURATION ='" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATION) + "'" +
                                ",@PERIOD_DURATIONTYPE ='" + Convert.ToInt32(_obj_smhr_period.PERIOD_DURATIONTYPE) + "'");
        }

        #endregion

        #region SMHR_PERIODDETAILS_CALENDAR

        /// <summary>
        /// Gets the Period Details. 
        /// </summary>
        /// <returns>Data Table</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_PeriodDetails_Calendar(SMHR_PERIODDTL _obj_Smhr_Prddtl)
        {
            if (_obj_Smhr_Prddtl.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() == "0" && _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'select'");
                }
                else if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() != "0" && _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'select', @PRDDTL_ID = '" + _obj_Smhr_Prddtl.PRDDTL_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'select', @PRDDTL_PERIOD_ID = '" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
                }
            }
            else if (_obj_Smhr_Prddtl.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation='CHECK1',@PRDDTL_PERIOD_ID='" + _obj_Smhr_Prddtl.PRDDTL_PERIOD_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Prddtl.PRDDTL_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'check'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'check', @PERIOD_ID = '" + _obj_Smhr_Prddtl.PRDDTL_ID + "'");
                }
            }
        }

        /// <summary>
        /// Method to Insert or update into the Period Details table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Prddtl"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 
        public static string set_PeriodDetails_Calendar(SMHR_PERIODDTL _obj_Smhr_Prddtl)
        {
            string StrQuery = string.Empty;
            switch (_obj_Smhr_Prddtl.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'Insert',@PRDDTL_ID=" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_ID) + "" +
                                    ",@PRDDTL_PERIOD_ID ='" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_PERIOD_ID) + "'" +
                                    ",@PRDDTL_NAME = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_NAME) + "" +
                                    ",@PRDDTL_STARTDATE = " + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_STARTDATE) + "'" +
                                    ",@PRDDTL_ENDATE =" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_ENDDATE) + "'" +
                                    ",@PRDDTL_CREATEDBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_CREATEDBY) + "" +
                                    ",@PRDDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_CREATEDDATE) + "'" +
                                    ",@PRDDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_LASTMDFBY) + "" +
                                    ",@PRDDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_LASTMDFDATE) + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODDETAILS_CALENDAR @Operation = 'Update',@PRDDTL_ID=" + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_ID) + "" +
                                    ",@PRDDTL_STATUS = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_STATUS) + "" +
                                    ",@PRDDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_Prddtl.PRDDTL_LASTMDFBY) + "" +
                                    ",@PRDDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_Prddtl.PRDDTL_LASTMDFDATE) + "'");
                    break;
                default:
                    break;
            }
            return StrQuery;
        }

        #endregion

        #region SMHR_PERIODTYPE

        /// <summary>
        ///  Method to Get PeriodTypes
        /// </summary>
        /// <param name="CATEGORY_ID"></param>
        /// <returns>Datatable with PeriodType</returns>
        /// <remarks>
        ///  Author             : MKD
        ///  Created on         : 2009-08-22 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>

        public static DataTable get_PeriodType(SMHR_PERIODTYPE _obj_smhr_periodtype)
        {
            if (_obj_smhr_periodtype.OPERATION == operation.Select)
            {
                if (_obj_smhr_periodtype.PERIODTYPE_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'select', @PERIODTYPE_ID=" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_ID) + "");
            }
            else
            {
                if (_obj_smhr_periodtype.PERIODTYPE_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'Check',@PERIODTYPE_NAME='" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NAME) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'Check', @PERIODTYPE_ID=" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_ID) + ", @PERIODTYPE_NAME='" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NAME) + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the PeriodType table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Category"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-22
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_PeriodType(SMHR_PERIODTYPE _obj_smhr_periodtype)
        {
            switch (_obj_smhr_periodtype.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'Insert',@PERIODTYPE_ID=" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_ID) + "" +
                                    ",@PERIODTYPE_NAME='" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NAME) + "'" +
                                    ",@PERIODTYPE_NOOFDAYS = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NOOFDAYS) + "" +
                                    ",@PERIODTYPE_CREATEDBY = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_CREATEDBY) + "" +
                                    ",@PERIODTYPE_CREATEDDATE = '" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_CREATEDDATE) + "'" +
                                    ",@PERIODTYPE_LASTMDFBY = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFBY) + "" +
                                    ",@PERIODTYPE_LASTMDFDATE = '" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFDATE) + "'");
                    break;
                case operation.Update:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'Update',@PERIODTYPE_ID=" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_ID) + "" +
                                    ",@PERIODTYPE_NAME='" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NAME) + "'" +
                                    ",@PERIODTYPE_NOOFDAYS = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_NOOFDAYS) + "" +
                                    ",@PERIODTYPE_LASTMDFBY = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFBY) + "" +
                                    ",@PERIODTYPE_LASTMDFDATE = '" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFDATE) + "'");
                    break;
                case operation.Delete:
                    ExecuteNonQuery("EXEC USP_SMHR_PERIODTYPE @Operation = 'Delete',@PERIODTYPE_ID=" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_ID) + "" +
                                    ",@PERIODTYPE_LASTMDFBY = " + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFBY) + "" +
                                    ",@PERIODTYPE_LASTMDFDATE = '" + Convert.ToString(_obj_smhr_periodtype.PERIODTYPE_LASTMDFDATE) + "'" +
                                    ",@ISDELETED = 1");
                    break;
                default:
                    break;
            }
            return true;
        }

        #endregion

        #region SMHR_PAYITEMS

        public static DataTable GET_PAYITEMS_BY_ORG_ID(SMHR_PAYITEMS _obj_smhr_payitems)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYITEMS_EMP @OPERATION ='GET_PAYITEMS_BY_ORG_ID', @PAYITEM_ORGANISATION_ID=" + _obj_smhr_payitems.ORGANISATION_ID);
        }

        #endregion

        #region SMHR_APPLICANT

        /// <summary>
        /// Method for getting Applicant Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_Applicant(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                if ((_obj_smhr_applicant.APPLICANT_ID.ToString() == "0") || (_obj_smhr_applicant.APPLICANT_ID == null))
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'select',@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
                else
                {
                    //return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'select', " +
                    //                " @emp_id = '" + Convert.ToInt32(_obj_smhr_applicant.APPLICANT_ID) + "'");
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'select', " +
                                        " @APPLICANT_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPLICANT_ID) +
                                        "', @ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check)
            {
                if (_obj_smhr_applicant.APPLICANT_CODE == null)
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'check',@ORGANISATION_ID='" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'check', @APPLICANT_CODE = '" + Convert.ToString(_obj_smhr_applicant.APPLICANT_CODE) + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_applicant.ORGANISATION_ID) + "'");
                }
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Get)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Get', @APPLICANT_CODE = '" + Convert.ToString(_obj_smhr_applicant.APPLICANT_CODE) + "',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_applicant.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Delete)
            {
                if (_obj_smhr_applicant.APPLICANT_ID != null)
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Delete', @APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Delete',@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Available)
            {
                if (_obj_smhr_applicant.APPLICANT_ID != null)
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Available', @APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "',@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Available',@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Validate)
            {
                // added by sridevi  to  get applicant id in employee screen.
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Validate', @ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
            }
            // for getting the count of only applicants
            else if (_obj_smhr_applicant.OPERATION == operation.Validate1)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Validate1', @ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
            }
            else
            {
                //return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Empty', @ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'");
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Empty', @APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'");
            }
        }

        public static DataTable get_AppCode(SMHR_APPLICANT _obj_smhr_applicant)
        {
            return ExecuteQuery(" EXEC USP_SMHR_APPLICANT @Operation = 'Empty'");
        }

        /// <summary>
        /// Method for Inserting and Updating Applicant Details. 
        /// </summary>
        /// <returns>Boolean stating success or failure</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_Applicant(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLICANT_CODE = '" + _obj_smhr_applicant.APPLICANT_CODE + "'" +
                                        ",@APPLICANT_TITLE = '" + _obj_smhr_applicant.APPLICANT_TITLE + "'" +
                                        ",@APPLICANT_FIRSTNAME = '" + _obj_smhr_applicant.APPLICANT_FIRSTNAME + "'" +
                                        ",@APPLICANT_MIDDLENAME= '" + _obj_smhr_applicant.APPLICANT_MIDDLENAME + "'" +
                                        ",@APPLICANT_LASTNAME = '" + _obj_smhr_applicant.APPLICANT_LASTNAME + "'" +
                                        ",@APPLICANT_DOB = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_DOB).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPLICANT_GENDER = '" + _obj_smhr_applicant.APPLICANT_GENDER + "'" +
                                        ",@APPLICANT_BLOODGROUP = '" + _obj_smhr_applicant.APPLICANT_BLOODGROUP + "'" +
                                        ",@APPLICANT_RELIGION_ID = '" + _obj_smhr_applicant.APPLICANT_RELIGION_ID + "'" +
                                        ",@APPLICANT_NATIONALITY_ID = '" + _obj_smhr_applicant.APPLICANT_NATIONALITY_ID + "'" +
                                        ",@APPLICANT_TRIBE_ID = '" + _obj_smhr_applicant.APPLICANT_TRIBE_ID + "'" +
                                        ",@APPLICANT_MARITALSTATUS = '" + _obj_smhr_applicant.APPLICANT_MARITALSTATUS + "'" +
                                        ",@APPLICANT_STATUS = '" + _obj_smhr_applicant.APPLICANT_STATUS + "'" +
                                        ",@APPLICANT_REMARKS = '" + _obj_smhr_applicant.APPLICANT_REMARKS + "'" +
                                        ",@APPLICANT_RESUME = '" + _obj_smhr_applicant.APPLICANT_RESUME + "'" +
                                        ",@APPLICANT_ADDRESS = '" + _obj_smhr_applicant.APPLICANT_ADDRESS + "'" +
                                        ",@APPLICANT_EMAIL = '" + _obj_smhr_applicant.APPLICANT_EMAIL + "'" +
                                        ",@APPLICANT_MOBILE = '" + _obj_smhr_applicant.APPLICANT_MOBILE + "'" +
                                        ",@APPLICANT_TYPE = '" + _obj_smhr_applicant.APPLICANT_TYPE + "'" +
                                        ",@APPLICANT_CREATEDBY = '" + _obj_smhr_applicant.APPLICANT_CREATEDBY + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'" +
                                        ",@APPLICANT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                // FOR DUMPING THE UPLOAD FUNCTIONALITY TO THE APPLICANT
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLICANT_CODE = '" + _obj_smhr_applicant.APPLICANT_CODE + "'" +
                                        ",@APPLICANT_TITLE = '" + _obj_smhr_applicant.APPLICANT_TITLE + "'" +
                                        ",@APPLICANT_FIRSTNAME = '" + _obj_smhr_applicant.APPLICANT_FIRSTNAME + "'" +
                                        ",@APPLICANT_MIDDLENAME= '" + _obj_smhr_applicant.APPLICANT_MIDDLENAME + "'" +
                                        ",@APPLICANT_LASTNAME = '" + _obj_smhr_applicant.APPLICANT_LASTNAME + "'" +
                                        ",@APPLI_DOB = '" + Convert.ToString(_obj_smhr_applicant.APPLI_DOB) + "'" +
                                        ",@APPLICANT_GENDER = '" + _obj_smhr_applicant.APPLICANT_GENDER + "'" +
                                        ",@APPLICANT_BLOODGROUP = '" + _obj_smhr_applicant.APPLICANT_BLOODGROUP + "'" +
                                        ",@APPLICANT_RELIGION_ID = '" + _obj_smhr_applicant.APPLICANT_RELIGION_ID + "'" +
                                        ",@APPLICANT_NATIONALITY_ID = '" + _obj_smhr_applicant.APPLICANT_NATIONALITY_ID + "'" +
                                        ",@APPLICANT_TRIBE_ID = '" + _obj_smhr_applicant.APPLICANT_TRIBE_ID + "'" +
                                        ",@APPLICANT_MARITALSTATUS = '" + _obj_smhr_applicant.APPLICANT_MARITALSTATUS + "'" +
                                        ",@APPLICANT_STATUS = '" + _obj_smhr_applicant.APPLICANT_STATUS + "'" +
                                        ",@APPLICANT_REMARKS = '" + _obj_smhr_applicant.APPLICANT_REMARKS + "'" +
                                        ",@APPLICANT_RESUME = '" + _obj_smhr_applicant.APPLICANT_RESUME + "'" +
                                        ",@APPLICANT_ADDRESS = '" + _obj_smhr_applicant.APPLICANT_ADDRESS + "'" +
                                        ",@APPLICANT_EMAIL = '" + _obj_smhr_applicant.APPLICANT_EMAIL + "'" +
                                        ",@APPLICANT_MOBILE = '" + _obj_smhr_applicant.APPLICANT_MOBILE + "'" +
                                        ",@APPLICANT_TYPE = '" + _obj_smhr_applicant.APPLICANT_TYPE + "'" +
                                        ",@APPLICANT_CREATEDBY = '" + _obj_smhr_applicant.APPLICANT_CREATEDBY + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'" +
                                        ",@APPLICANT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLICANT_CODE = '" + _obj_smhr_applicant.APPLICANT_CODE + "'" +
                                        ",@APPLICANT_TITLE = '" + _obj_smhr_applicant.APPLICANT_TITLE + "'" +
                                        ",@APPLICANT_FIRSTNAME = '" + _obj_smhr_applicant.APPLICANT_FIRSTNAME + "'" +
                                        ",@APPLICANT_MIDDLENAME= '" + _obj_smhr_applicant.APPLICANT_MIDDLENAME + "'" +
                                        ",@APPLICANT_LASTNAME = '" + _obj_smhr_applicant.APPLICANT_LASTNAME + "'" +
                                        ",@APPLICANT_DOB = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_DOB).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPLICANT_GENDER = '" + _obj_smhr_applicant.APPLICANT_GENDER + "'" +
                                        ",@APPLICANT_BLOODGROUP = '" + _obj_smhr_applicant.APPLICANT_BLOODGROUP + "'" +
                                        ",@APPLICANT_RELIGION_ID = '" + _obj_smhr_applicant.APPLICANT_RELIGION_ID + "'" +
                                        ",@APPLICANT_NATIONALITY_ID = '" + _obj_smhr_applicant.APPLICANT_NATIONALITY_ID + "'" +
                                        ",@APPLICANT_TRIBE_ID = '" + _obj_smhr_applicant.APPLICANT_TRIBE_ID + "'" +
                                        ",@APPLICANT_MARITALSTATUS = '" + _obj_smhr_applicant.APPLICANT_MARITALSTATUS + "'" +
                                        ",@APPLICANT_STATUS = '" + _obj_smhr_applicant.APPLICANT_STATUS + "'" +
                                        ",@APPLICANT_REMARKS = '" + _obj_smhr_applicant.APPLICANT_REMARKS + "'" +
                                        ",@APPLICANT_RESUME = '" + _obj_smhr_applicant.APPLICANT_RESUME + "'" +
                                        ",@APPLICANT_ADDRESS = '" + _obj_smhr_applicant.APPLICANT_ADDRESS + "'" +
                                        ",@APPLICANT_EMAIL = '" + _obj_smhr_applicant.APPLICANT_EMAIL + "'" +
                                        ",@APPLICANT_MOBILE = '" + _obj_smhr_applicant.APPLICANT_MOBILE + "'" +
                                        ",@APPLICANT_TYPE = '" + _obj_smhr_applicant.APPLICANT_TYPE + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'" +
                                        ",@APPLICANT_LASTMDFBY = '" + _obj_smhr_applicant.APPLICANT_LASTMDFBY + "'" +
                                        ",@APPLICANT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_LASTMDFDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLICANT_CODE = '" + _obj_smhr_applicant.APPLICANT_CODE + "'" +
                                        ",@APPLICANT_TITLE = '" + _obj_smhr_applicant.APPLICANT_TITLE + "'" +
                                        ",@APPLICANT_FIRSTNAME = '" + _obj_smhr_applicant.APPLICANT_FIRSTNAME + "'" +
                                        ",@APPLICANT_MIDDLENAME= '" + _obj_smhr_applicant.APPLICANT_MIDDLENAME + "'" +
                                        ",@APPLICANT_LASTNAME = '" + _obj_smhr_applicant.APPLICANT_LASTNAME + "'" +
                                        ",@APPLICANT_DOB = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_DOB).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPLICANT_GENDER = '" + _obj_smhr_applicant.APPLICANT_GENDER + "'" +
                                        ",@APPLICANT_BLOODGROUP = '" + _obj_smhr_applicant.APPLICANT_BLOODGROUP + "'" +
                                        ",@APPLICANT_RELIGION_ID = '" + _obj_smhr_applicant.APPLICANT_RELIGION_ID + "'" +
                                        ",@APPLICANT_NATIONALITY_ID = '" + _obj_smhr_applicant.APPLICANT_NATIONALITY_ID + "'" +
                                        ",@APPLICANT_TRIBE_ID = '" + _obj_smhr_applicant.APPLICANT_TRIBE_ID + "'" +
                                        ",@APPLICANT_MARITALSTATUS = '" + _obj_smhr_applicant.APPLICANT_MARITALSTATUS + "'" +
                                        ",@APPLICANT_STATUS = '" + _obj_smhr_applicant.APPLICANT_STATUS + "'" +
                                        ",@APPLICANT_REMARKS = '" + _obj_smhr_applicant.APPLICANT_REMARKS + "'" +
                                        ",@APPLICANT_RESUME = '" + _obj_smhr_applicant.APPLICANT_RESUME + "'" +
                                        ",@APPLICANT_ADDRESS = '" + _obj_smhr_applicant.APPLICANT_ADDRESS + "'" +
                                        //",@APPLICANT_EMAIL = '" + _obj_smhr_applicant.APPLICANT_EMAIL + "'" +
                                        ",@APPLICANT_TYPE = '" + _obj_smhr_applicant.APPLICANT_TYPE + "'" +
                                        ",@ORGANISATION_ID = '" + _obj_smhr_applicant.ORGANISATION_ID + "'" +
                                        ",@APPLICANT_LASTMDFBY = '" + _obj_smhr_applicant.APPLICANT_LASTMDFBY + "'" +
                                        ",@APPLICANT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_LASTMDFDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_EmpApplicant(SMHR_APPLICANT _obj_smhr_applicant)
        {
            return (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                    ",@APPLICANT_TITLE = '" + _obj_smhr_applicant.APPLICANT_TITLE + "'" +
                                    ",@APPLICANT_FIRSTNAME = '" + _obj_smhr_applicant.APPLICANT_FIRSTNAME + "'" +
                                    ",@APPLICANT_MIDDLENAME= '" + _obj_smhr_applicant.APPLICANT_MIDDLENAME + "'" +
                                    ",@APPLICANT_LASTNAME = '" + _obj_smhr_applicant.APPLICANT_LASTNAME + "'" +
                                    ",@APPLICANT_DOB = '" + _obj_smhr_applicant.APPLICANT_DOB + "'" +
                                    ",@APPLICANT_GENDER = '" + _obj_smhr_applicant.APPLICANT_GENDER + "'" +
                                    ",@APPLICANT_BLOODGROUP = '" + _obj_smhr_applicant.APPLICANT_BLOODGROUP + "'" +
                                    ",@APPLICANT_RELIGION_ID = '" + _obj_smhr_applicant.APPLICANT_RELIGION_ID + "'" +
                                    ",@APPLICANT_NATIONALITY_ID = '" + _obj_smhr_applicant.APPLICANT_NATIONALITY_ID + "'" +
                                    ",@APPLICANT_TRIBE_ID = '" + _obj_smhr_applicant.APPLICANT_TRIBE_ID + "'" +
                                    ",@APPLICANT_MARITALSTATUS = '" + _obj_smhr_applicant.APPLICANT_MARITALSTATUS + "'" +
                                    ",@APPLICANT_STATUS = '" + _obj_smhr_applicant.APPLICANT_STATUS + "'" +
                                    ",@APPLICANT_REMARKS = '" + _obj_smhr_applicant.APPLICANT_REMARKS + "'" +
                                    ",@APPLICANT_RESUME = '" + _obj_smhr_applicant.APPLICANT_RESUME + "'" +
                                    ",@APPLICANT_ADDRESS = '" + _obj_smhr_applicant.APPLICANT_ADDRESS + "'" +
                                    //",@APPLICANT_EMAIL = '" + _obj_smhr_applicant.APPLICANT_EMAIL + "'" +
                                    ",@APPLICANT_LASTMDFBY = '" + _obj_smhr_applicant.APPLICANT_LASTMDFBY + "'" +
                                    ",@APPLICANT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLICANT_LASTMDFDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                    ",@APPLICANT_TYPE = '" + _obj_smhr_applicant.APPLICANT_TYPE + "'" +
                                    ",@ORGANISATION_ID='" + _obj_smhr_applicant.ORGANISATION_ID + "'" +
                                    ",@APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'"));
        }

        /// <summary>
        /// Method for getting Applicant Experience Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-24
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantExperience(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = 'select'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = 'Check_New', @APPEXP_APPLICANT_ID = '" + _obj_smhr_applicant.APPEXP_APPLICANT_ID + "'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check1)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = 'Check1', @APPEXP_APPLICANT_ID = '" + _obj_smhr_applicant.APPEXP_APPLICANT_ID + "',@APPEXP_SERIAL='" + _obj_smhr_applicant.APPEXP_SERIAL + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = 'check', @APPEXP_APPLICANT_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPEXP_APPLICANT_ID) + "'");
            }
        }

        /// <summary>
        /// Method for getting Applicant Qualification Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantQualification(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTQUALIFICATION @Operation = 'select', @APPDFN_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPQFN_ID) + "'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTQUALIFICATION @Operation = 'Check_New', @APPQFN_APPLICANT_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPQFN_APPLICANT_ID) + "', @APPQFN_QUALIFICATION_ID ='" + _obj_smhr_applicant.APPQFN_QUALIFICATION_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTQUALIFICATION @Operation = 'check', @APPQFN_APPLICANT_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPQFN_APPLICANT_ID) + "'");
            }
        }

        /// <summary>
        /// Method for getting Applicant Skills Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantSkills(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = 'select'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = 'Check_New',@APPSKL_APPLICANT_ID = '" + _obj_smhr_applicant.APPSKL_APPLICANT_ID + "',@APPSKL_SKILL_ID='" + _obj_smhr_applicant.APPSKL_SKILL_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = 'check', @APPSKL_APPLICANT_ID = '" + _obj_smhr_applicant.APPSKL_APPLICANT_ID + "'");
            }
        }

        /// <summary>
        /// Method for getting Applicant Contact Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantContact(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = 'select'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = 'Check_New', @APPCONT_APPLICANT_ID = '" + _obj_smhr_applicant.APPCONT_APPLICANT_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = 'check', @APPCONT_APPLICANT_ID = '" + _obj_smhr_applicant.APPCONT_APPLICANT_ID + "'");
            }
        }

        /// <summary>
        /// Method for getting Applicant Language Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantLanguage(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = 'select'");
            }
            else if (_obj_smhr_applicant.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = 'Check_New',@APPLAN_APPLICANT_ID = '" + _obj_smhr_applicant.APPLAN_APPLICANT_ID + "',@APPLAN_LANGUAGE_ID='" + _obj_smhr_applicant.APPLAN_LANGUAGE_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = 'check', @APPLAN_APPLICANT_ID = '" + _obj_smhr_applicant.APPLAN_APPLICANT_ID + "'");
            }
        }

        /// <summary>
        /// Method for getting Applicant Reference Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_ApplicantReference(SMHR_APPLICANT _obj_smhr_applicant)
        {
            if (_obj_smhr_applicant.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTREFERENCE @Operation = 'select'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_APPLICANTREFERENCE @Operation = 'check', @APPREF_APPLICANT_ID = '" + _obj_smhr_applicant.APPREF_APPLICANT_ID + "'");
            }
        }

        /// <summary>
        /// Method for Insert and Update Applicant Qualification Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_AppQualification(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTQUALIFICATION @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPQFN_APPLICANT_ID ='" + Convert.ToInt32(_obj_smhr_applicant.APPLICANT_ID) + "'" +
                                        ",@APPQFN_QUALIFICATION_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPQFN_QUALIFICATION_ID) + "'" +
                                        ",@APPQFN_INSTITUTE = '" + _obj_smhr_applicant.APPQFN_INSTITUTE + "'" +
                                        ",@APPQFN_PASSEDYEAR = '" + _obj_smhr_applicant.APPQFN_PASSEDYEAR + "'" +
                                        ",@APPQFN_PERCENTAGE = '" + _obj_smhr_applicant.APPQFN_PERCENTAGE + "'" +
                                        ",@APPQFN_GRADE = '" + _obj_smhr_applicant.APPQFN_GRADE + "'" +
                                        ",@APPQFN_CREATEDBY = '" + _obj_smhr_applicant.APPQFN_CREATEDBY + "'" +
                                        ",@APPQFN_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPQFN_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTQUALIFICATION @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPQFN_APPLICANT_ID ='" + Convert.ToInt32(_obj_smhr_applicant.APPLICANT_ID) + "'" +
                                        ",@APPQFN_QUALIFICATION_ID = '" + Convert.ToInt32(_obj_smhr_applicant.APPQFN_QUALIFICATION_ID) + "'" +
                                        ",@APPQFN_INSTITUTE = '" + _obj_smhr_applicant.APPQFN_INSTITUTE + "'" +
                                        ",@APPQFN_PASSEDYEAR = '" + _obj_smhr_applicant.APPQFN_PASSEDYEAR + "'" +
                                        ",@APPQFN_PERCENTAGE = '" + _obj_smhr_applicant.APPQFN_PERCENTAGE + "'" +
                                        ",@APPQFN_GRADE = '" + _obj_smhr_applicant.APPQFN_GRADE + "'" +
                                        ",@APPQFN_LASTMDFBY = '" + _obj_smhr_applicant.APPQFN_LASTMDFBY + "'" +
                                        ",@APPQFN_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPQFN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPQFN_ID = '" + _obj_smhr_applicant.APPQFN_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Insert and Update Applicant Experience Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_ApplicantExperience(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPEXP_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPEXP_SERIAL = '" + _obj_smhr_applicant.APPEXP_SERIAL + "'" +
                                        ",@APPEXP_COMPANY = '" + _obj_smhr_applicant.APPEXP_COMPANY + "'" +
                                        //",@APPEXP_JOINDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_JOINDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPEXP_JOINDATE = " + (_obj_smhr_applicant.APPEXP_JOINDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_JOINDATE).ToString("MM/dd/yyyy") + "'") +
                                        ",@APPEXP_JOINSAL = '" + _obj_smhr_applicant.APPEXP_JOINSAL + "'" +
                                        ",@APPEXP_JOINDESC = '" + _obj_smhr_applicant.APPEXP_JOINDESC + "'" +
                                        ",@APPEXP_REASONREL = '" + _obj_smhr_applicant.APPEXP_REASONREL + "'" +
                                        //",@APPEXP_RELDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_RELDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPEXP_RELDATE = " + (_obj_smhr_applicant.APPEXP_RELDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_RELDATE).ToString("MM/dd/yyyy") + "'") +
                                        ",@APPEXP_RELSAL = '" + _obj_smhr_applicant.APPEXP_RELSAL + "'" +
                                        ",@APPEXP_REASONDESC = '" + _obj_smhr_applicant.APPEXP_REASONDESC + "'" +
                                        ",@APPEXP_CREATEDBY = '" + _obj_smhr_applicant.APPEXP_CREATEDBY + "'" +
                                        ",@APPEXP_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPEXP_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPEXP_SERIAL = '" + _obj_smhr_applicant.APPEXP_SERIAL + "'" +
                                        ",@APPEXP_COMPANY = '" + _obj_smhr_applicant.APPEXP_COMPANY + "'" +
                                        ",@APPEXPJOINDATE = '" + Convert.ToString(_obj_smhr_applicant.APPEXJOINDATE) + "'" +
                                        ",@APPEXP_JOINSAL = '" + _obj_smhr_applicant.APPEXP_JOINSAL + "'" +
                                        ",@APPEXP_JOINDESC = '" + _obj_smhr_applicant.APPEXP_JOINDESC + "'" +
                                        ",@APPEXP_REASONREL = '" + _obj_smhr_applicant.APPEXP_REASONREL + "'" +
                                        ",@APPEXPRELDATE = '" + Convert.ToString(_obj_smhr_applicant.APPEXRELDATE) + "'" +
                                        ",@APPEXP_RELSAL = '" + _obj_smhr_applicant.APPEXP_RELSAL + "'" +
                                        ",@APPEXP_REASONDESC = '" + _obj_smhr_applicant.APPEXP_REASONDESC + "'" +
                                        ",@APPEXP_CREATEDBY = '" + _obj_smhr_applicant.APPEXP_CREATEDBY + "'" +
                                        ",@APPEXP_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTEXPERIENCE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPEXP_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPEXP_SERIAL = '" + _obj_smhr_applicant.APPEXP_SERIAL + "'" +
                                        ",@APPEXP_COMPANY = '" + _obj_smhr_applicant.APPEXP_COMPANY + "'" +
                                        //",@APPEXP_JOINDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_JOINDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPEXP_JOINDATE = " + (_obj_smhr_applicant.APPEXP_JOINDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_JOINDATE).ToString("MM/dd/yyyy") + "'") +
                                        ",@APPEXP_JOINSAL = '" + _obj_smhr_applicant.APPEXP_JOINSAL + "'" +
                                        ",@APPEXP_JOINDESC = '" + _obj_smhr_applicant.APPEXP_JOINDESC + "'" +
                                        ",@APPEXP_REASONREL = '" + _obj_smhr_applicant.APPEXP_REASONREL + "'" +
                                        //",@APPEXP_RELDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_RELDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPEXP_RELDATE = " + (_obj_smhr_applicant.APPEXP_RELDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_RELDATE).ToString("MM/dd/yyyy") + "'") +
                                        ",@APPEXP_RELSAL = '" + _obj_smhr_applicant.APPEXP_RELSAL + "'" +
                                        ",@APPEXP_REASONDESC = '" + _obj_smhr_applicant.APPEXP_REASONDESC + "'" +
                                        ",@APPEXP_LASTMDFBY = '" + _obj_smhr_applicant.APPEXP_LASTMDFBY + "'" +
                                        ",@APPEXP_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPEXP_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPEXP_ID = '" + _obj_smhr_applicant.APPEXP_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Insert and Update Applicant Skill Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_ApplicantSkills(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPSKL_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPSKL_SKILL_ID = '" + _obj_smhr_applicant.APPSKL_SKILL_ID + "'" +
                                        ",@APPSKL_LASTUSED = '" + _obj_smhr_applicant.APPSKL_LASTUSED + "'" +
                                        ",@APPSKL_EXPERT = '" + _obj_smhr_applicant.APPSKL_EXPERT + "'" +
                                        ",@APPSKL_CREATEDBY = '" + _obj_smhr_applicant.APPSKL_CREATEDBY + "'" +
                                        ",@APPSKL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPSKL_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPSKL_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPSKL_SKILL_ID = '" + _obj_smhr_applicant.APPSKL_SKILL_ID + "'" +
                                        ",@APPSKL_LASTUSED = '" + _obj_smhr_applicant.APPSKL_LASTUSED + "'" +
                                        ",@APPSKL_EXPERT = '" + _obj_smhr_applicant.APPSKL_EXPERT + "'" +
                                        ",@APPSKL_LASTMDFBY = '" + _obj_smhr_applicant.APPSKL_LASTMDFBY + "'" +
                                        ",@APPSKL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPSKL_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPSKL_ID = '" + _obj_smhr_applicant.APPSKL_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Insert and Update Applicant Contact Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_ApplicantContact(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPCONT_SERIAL = '" + _obj_smhr_applicant.APPCONT_SERIAL + "'" +
                                        ",@APPCONT_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPCONT_COMPANY = '" + _obj_smhr_applicant.APPCONT_COMPANY + "'" +
                                        ",@APPCONT_CONTACT = '" + _obj_smhr_applicant.APPCONT_CONTACT + "'" +
                                        ",@APPCONT_PHONE = '" + _obj_smhr_applicant.APPCONT_PHONE + "'" +
                                        ",@APPCONT_ADDRESS = '" + _obj_smhr_applicant.APPCONT_ADDRESS + "'" +
                                        ",@APPCONT_CREATEDBY = '" + _obj_smhr_applicant.APPCONT_CREATEDBY + "'" +
                                        ",@APPCONT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPCONT_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPCONT_SERIAL = '" + _obj_smhr_applicant.APPCONT_SERIAL + "'" +
                                        ",@APPCONT_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPCONT_COMPANY = '" + _obj_smhr_applicant.APPCONT_COMPANY + "'" +
                                        ",@APPCONT_CONTACT = '" + _obj_smhr_applicant.APPCONT_CONTACT + "'" +
                                        ",@APPCONT_PHONE = '" + _obj_smhr_applicant.APPCONT_PHONE + "'" +
                                        ",@APPCONT_ADDRESS = '" + _obj_smhr_applicant.APPCONT_ADDRESS + "'" +
                                        ",@APPCONT_LASTMDFBY = '" + _obj_smhr_applicant.APPCONT_LASTMDFBY + "'" +
                                        ",@APPCONT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPCONT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPCONT_ID = '" + _obj_smhr_applicant.APPCONT_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        /// <summary>
        /// Method for Insert and Update Applicant Reference Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : Gunti Dheeraj 
        ///  Created on         : 2009-08-25
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_ApplicantReference(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTREFERENCE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPREF_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPREF_REFFERED_EMP_ID = '" + _obj_smhr_applicant.APPREF_REFFERED_EMP_ID + "'" +
                                        ",@APPREF_RELATIONSHIP = '" + _obj_smhr_applicant.APPREF_RELATIONSHIP + "'" +
                                        ",@APPREF_REFERRED = '" + _obj_smhr_applicant.APPREF_REFERRED + "'" +
                                        ",@APPREF_CREATEDBY = '" + _obj_smhr_applicant.APPREF_CREATEDBY + "'" +
                                        ",@APPREF_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPREF_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTREFERENCE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPREF_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPREF_REFFERED_EMP_ID = '" + _obj_smhr_applicant.APPREF_REFFERED_EMP_ID + "'" +
                                        ",@APPREF_RELATIONSHIP = '" + _obj_smhr_applicant.APPREF_RELATIONSHIP + "'" +
                                        ",@APPREF_REFERRED = '" + _obj_smhr_applicant.APPREF_REFERRED + "'" +
                                        ",@APPREF_LASTMDFBY = '" + _obj_smhr_applicant.APPREF_LASTMDFBY + "'" +
                                        ",@APPREF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPREF_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPREF_ID = '" + _obj_smhr_applicant.APPREF_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_ApplicantLanguage(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLAN_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPLAN_LANGUAGE_ID = '" + _obj_smhr_applicant.APPLAN_LANGUAGE_ID + "'" +
                                        ",@APPLAN_READ = '" + _obj_smhr_applicant.APPLAN_READ + "'" +
                                        ",@APPLAN_WRITE = '" + _obj_smhr_applicant.APPLAN_WRITE + "'" +
                                        ",@APPLAN_SPEAK = '" + _obj_smhr_applicant.APPLAN_SPEAK + "'" +
                                        ",@APPLAN_UNDERSTAND = '" + _obj_smhr_applicant.APPLAN_UNDERSTAND + "'" +
                                        ",@APPLAN_CREATEDBY = '" + _obj_smhr_applicant.APPLAN_CREATEDBY + "'" +
                                        ",@APPLAN_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLAN_APPLICANT_ID = '" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                        ",@APPLAN_LANGUAGE_ID = '" + _obj_smhr_applicant.APPLAN_LANGUAGE_ID + "'" +
                                        ",@APPLAN_READ = '" + _obj_smhr_applicant.APPLAN_READ + "'" +
                                        ",@APPLAN_WRITE = '" + _obj_smhr_applicant.APPLAN_WRITE + "'" +
                                        ",@APPLAN_SPEAK = '" + _obj_smhr_applicant.APPLAN_SPEAK + "'" +
                                        ",@APPLAN_UNDERSTAND = '" + _obj_smhr_applicant.APPLAN_UNDERSTAND + "'" +
                                        ",@APPLAN_LASTMDFBY= '" + _obj_smhr_applicant.APPLAN_LASTMDFBY + "'" +
                                        ",@APPLAN_LASTMDFDATE= '" + Convert.ToDateTime(_obj_smhr_applicant.APPLAN_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@APPLAN_ID = '" + _obj_smhr_applicant.APPLAN_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable Get_Applicant_Names()
        {
            return ExecuteQuery("EXEC USP_SMHR_APPLICANT @Operation = 'Get_All_Emp_Names'");
        }

        #endregion

        # region SMHR_HOLIDAYMASTER

        /// <summary>
        /// Method to get the Holiday Master Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static DataTable get_HolidayMaster(SMHR_HOLIDAY _obj_Smhr_Holiday)
        {
            if (_obj_Smhr_Holiday.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Holiday.HOLMST_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'select', @HOLMST_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'select', @HOLMST_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_ID) + "'");
                }
            }
            else if (_obj_Smhr_Holiday.OPERATION == operation.chkholiday)
            {
                return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'chkholiday', @HOLMST_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.ORGANISATION_ID) + "',@HOLMST_BUSINESSUNITID='" + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_BUSINESSUNITID) + "',@HOLMST_DATE='" + _obj_Smhr_Holiday.HOLMST_DATE + "'");

            }
            else if (_obj_Smhr_Holiday.OPERATION == operation.Check)
            {
                if (_obj_Smhr_Holiday.HOLMST_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'check', @HOLMST_CODE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_CODE) + "',@HOLMST_DATE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_DATE) + "',@HOLMST_ORGANISATION_ID='" + _obj_Smhr_Holiday.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'check', @HOLMST_CODE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_CODE) + "', @HOLMST_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_ID) + "',@HOLMST_DATE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_DATE) + "',@HOLMST_ORGANISATION_ID='" + _obj_Smhr_Holiday.ORGANISATION_ID + "'");
                }
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_HOILDAYMASTER @Operation = 'Empty', @HOLMST_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.ORGANISATION_ID) + "'");
            }
        }

        /// <summary>
        /// Method to insert and update the Holiday Master Details. 
        /// </summary>
        /// <returns>bool</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-26
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 
        public static bool set_HolidayMaster(SMHR_HOLIDAY _obj_Smhr_Holiday)
        {
            bool status = false;
            switch (_obj_Smhr_Holiday.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_HOILDAYMASTER @Operation = 'Insert', @HOLMST_BUSINESSUNITID = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_BUSINESSUNITID) + " " +
                                        ", @HOLMST_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.ORGANISATION_ID) + "'" +
                                        ", @HOLMST_CODE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_CODE) + "'" +
                                        ", @HOLMST_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_DESCRIPTION) + "'" +
                                        ", @HOLMST_DATE = '" + Convert.ToDateTime(_obj_Smhr_Holiday.HOLMST_DATE) + "'" +
                                        ", @HOLMST_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_CREATEDBY) + "" +
                                        ", @HOLMST_CREATEDDATE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_CREATEDDATE.ToString("MM/dd/yyyy")) + "'" +
                                        ", @HOLMST_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_LASTMDFBY) + "" +
                                        ", @HOLMST_LASTMDFDATE ='" + Convert.ToDateTime(_obj_Smhr_Holiday.HOLMST_LASTMDFDATE.ToString("MM/dd/yyyy")) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_HOILDAYMASTER @Operation = 'Update',@HOLMST_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_ID) + "'" + ", @HOLMST_BUSINESSUNITID = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_BUSINESSUNITID) + " " +
                                        ", @HOLMST_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Holiday.ORGANISATION_ID) + "'" +
                                        ", @HOLMST_CODE = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_CODE) + "'" +
                                        ", @HOLMST_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_Holiday.HOLMST_DESCRIPTION) + "'" +
                                        ", @HOLMST_DATE = '" + Convert.ToDateTime(_obj_Smhr_Holiday.HOLMST_DATE) + "'" +
                                        ", @HOLMST_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_LASTMDFBY) + "" +
                                        ", @HOLMST_LASTMDFDATE ='" + Convert.ToDateTime(_obj_Smhr_Holiday.HOLMST_LASTMDFDATE.ToString("MM/dd/yyyy")) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_HOILDAYMASTER @Operation = 'Delete',@HOLMST_ID = " + Convert.ToInt32(_obj_Smhr_Holiday.HOLMST_ID) + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        # region SMHR_SHIFTDEFINITION

        /// <summary>
        /// Method to get the Shift Details. 
        /// </summary>
        /// <returns>DataTable</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 
        public static DataTable get_ShiftDefinition(SMHR_SHIFTDEFINITION _obj_Smhr_Shiftdefinition)
        {
            if (_obj_Smhr_Shiftdefinition.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Shiftdefinition.SHIFT_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_SHIFT @Operation = 'select', @SHIFT_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Shiftdefinition.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_SHIFT @Operation = 'select', @SHIFT_ID = '" + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_ID) + "', @SHIFT_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Shiftdefinition.ORGANISATION_ID) + "'");
                }
            }
            else
            {
                if (_obj_Smhr_Shiftdefinition.SHIFT_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_SHIFT @Operation = 'check', @SHIFT_CODE = '" + Convert.ToString(_obj_Smhr_Shiftdefinition.SHIFT_CODE) + "', @SHIFT_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Shiftdefinition.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_SHIFT @Operation = 'check', @SHIFT_ID = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_ID) + ", @SHIFT_ORGANISATION_ID = '" + Convert.ToInt32(_obj_Smhr_Shiftdefinition.ORGANISATION_ID) + "'");
                }
            }
        }

        /// <summary>
        /// Method to insert and update the Shift  Details. 
        /// </summary>
        /// <returns>BOOL</returns>
        /// <remarks>
        ///  Author             : MKD 
        ///  Created on         : 2009-08-27
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        /// 

        public static bool set_ShiftDefinition(SMHR_SHIFTDEFINITION _obj_Smhr_Shiftdefinition)
        {
            bool status = false;
            switch (_obj_Smhr_Shiftdefinition.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SHIFT @Operation = 'Insert', @SHIFT_CODE = '" + Convert.ToString(_obj_Smhr_Shiftdefinition.SHIFT_CODE) + "'" +
                                        ", @SHIFT_ORGANISATION_ID = '" + _obj_Smhr_Shiftdefinition.ORGANISATION_ID + "'" +
                                        ", @SHIFT_DESC = '" + Convert.ToString(_obj_Smhr_Shiftdefinition.SHIFT_DESC) + "'" +
                                        ", @SHIFT_STARTTIME = '" + _obj_Smhr_Shiftdefinition.SHIFT_STARTTIME + "'" +
                                        ", @SHIFT_ENDTIME = '" + _obj_Smhr_Shiftdefinition.SHIFT_ENDTIME + "'" +
                                        ", @SHIFT_CREATEDBY = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_CREATEDBY) + "" +
                                        ", @SHIFT_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_Shiftdefinition.SHIFT_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @SHIFT_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_LASTMDFBY) + "" +
                                        ", @SHIFT_LASTMDFDATE ='" + Convert.ToDateTime(_obj_Smhr_Shiftdefinition.SHIFT_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SHIFT @Operation = 'Update', @SHIFT_ID = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_ID) + "" +
                                        ", @SHIFT_CODE = '" + Convert.ToString(_obj_Smhr_Shiftdefinition.SHIFT_CODE) + "'" +
                                        ", @SHIFT_ORGANISATION_ID = '" + _obj_Smhr_Shiftdefinition.ORGANISATION_ID + "'" +
                                        ", @SHIFT_DESC = '" + Convert.ToString(_obj_Smhr_Shiftdefinition.SHIFT_DESC) + "'" +
                                        ", @SHIFT_STARTTIME = '" + _obj_Smhr_Shiftdefinition.SHIFT_STARTTIME + "'" +
                                        ", @SHIFT_ENDTIME = '" + _obj_Smhr_Shiftdefinition.SHIFT_ENDTIME + "'" +
                                        ", @SHIFT_LASTMDFBY = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_LASTMDFBY) + "" +
                                        ", @SHIFT_LASTMDFDATE ='" + Convert.ToDateTime(_obj_Smhr_Shiftdefinition.SHIFT_LASTMDFDATE.ToString("MM/dd/yyyy")) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SHIFT @Operation = 'Delete',@SHIFT_ID = " + Convert.ToInt32(_obj_Smhr_Shiftdefinition.SHIFT_ID) + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        # region SMHR_EMPRESIGNATION

        ///// <summary>
        ///// Method to get the EmpResignation Details. 
        ///// </summary>
        ///// <returns>DataTable</returns>
        ///// <remarks>
        /////  Author             : MKD 
        /////  Created on         : 2009-08-28
        /////  Last Modified on   : N/A
        /////  Last Modfied by    : N/A
        ///// </remarks>
        ///// 
        //public static DataTable get_Empresignation(SMHR_EMPRESIGNATION _Obj_Smhr_EmpResignation)
        //{
        //    if (_Obj_Smhr_EmpResignation.OPERATION == operation.Select)
        //    {
        //        if (_Obj_Smhr_EmpResignation.EMPREG_ID.ToString() == "0")
        //        {
        //            return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'select'");
        //        }
        //        else
        //        {
        //            return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'select', @EMPREG_ID = '" + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_ID) + "'");
        //        }
        //    }
        //    else if (_Obj_Smhr_EmpResignation.OPERATION == operation.Check)
        //    {
        //        return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'check',@EMPREG_EMP_ID = " + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_EMP_ID) + "");
        //    }

        //    else
        //    {
        //        return ExecuteQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'FILLEMP'");
        //    }
        //}

        public static DataTable get_Empresignation(SMHR_EMPRESIGNATION _Obj_Smhr_EmpResignation)
        {
            if (_Obj_Smhr_EmpResignation.OPERATION == operation.Select)
            {
                if (_Obj_Smhr_EmpResignation.EMPREG_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'select',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "',@EMP_LOGIN_ID ='" + _Obj_Smhr_EmpResignation.LOGIN_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'select', @EMPREG_ID = '" + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_ID) + "',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "'");
                }
            }
            else if (_Obj_Smhr_EmpResignation.OPERATION == operation.Check)
            {
                if (_Obj_Smhr_EmpResignation.EMPREG_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'check',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'check',@EMPREG_ID = '" + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_ID) + "',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "'");
                }
            }
            else if (_Obj_Smhr_EmpResignation.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'Validate', @EMPREG_EMP_ID='" + _Obj_Smhr_EmpResignation.EMPREG_EMP_ID + "',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "'");
            }
            else if (_Obj_Smhr_EmpResignation.OPERATION == operation.EMPTY1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'EMPTY1', @EMPREG_EMP_ID='" + _Obj_Smhr_EmpResignation.EMPREG_EMP_ID + "'");
            }
            else if (_Obj_Smhr_EmpResignation.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'Check1', @EMPREG_EMP_ID='" + _Obj_Smhr_EmpResignation.EMPREG_EMP_ID + "',@EMPREG_ORGANISATION_ID='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _Obj_Smhr_EmpResignation.LOGIN_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'EMPTY', @EMPREG_EMP_ID='" + _Obj_Smhr_EmpResignation.EMPREG_EMP_ID + "'");
            }
        }

        ///// <summary>
        ///// Method to insert and update the EMPLOYEE RESIGNATION  Details. 
        ///// </summary>
        ///// <returns>BOOL</returns>
        ///// <remarks>
        /////  Author             : MKD 
        /////  Created on         : 2009-08-28
        /////  Last Modified on   : N/A
        /////  Last Modfied by    : N/A
        ///// </remarks>
        ///// 

        public static bool set_Empresignation(SMHR_EMPRESIGNATION _Obj_Smhr_EmpResignation)
        {
            bool status = false;
            switch (_Obj_Smhr_EmpResignation.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'Insert', @EMPREG_ID = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_ID) + "" +
                                        " , @EMPREG_EMP_ID = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_EMP_ID) + "" +
                                        " , @EMPREG_REGDATE = '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_REGDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_REMARKS = '" + _Obj_Smhr_EmpResignation.EMPREG_REMARKS + "'" +
                                        " , @EMPREG_REASON  = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_REASON) + "" +
                                        " , @EMPREG_RELDATE= '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_RELDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_CREATEDBY = " + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_CREATEDBY) + "" +
                                        " , @EMPREG_CREATEDDATE = '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_LASTMDFBY = " + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_LASTMDFBY) +
                                        " , @EMPREG_IS_TERMINATED = " + Convert.ToBoolean(_Obj_Smhr_EmpResignation.EMPREG_IS_TERMINATED) +
                                        " , @EMPREG_ORGANISATION_ID ='" + _Obj_Smhr_EmpResignation.ORGANISATION_ID +
                                        "', @EMPREG_LASTMDFDATE ='" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",  @EMP_EXIT_INTERVIEW_EMP_ID= " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_EMP_ID) + "" +
                                        " , @EMP_EXIT_INTERVIEW_PRIMARY_REASON = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_PRIMARY_REASON) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_JOB_SATISFACTION = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_JOB_SATISFACTION) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_JOB_FRUSTRATION = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_JOB_FRUSTRATION) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_COMPANY_MEASURES  = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_COMPANY_MEASURES) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_SUGGESTION= '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_SUGGESTION) + "'" +
                                        " , @EMPREG_DEPT_ID= '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_DEPT_ID) + "'" +
                                         " , @EMPREG_FRM_STS= '" + Convert.ToChar(_Obj_Smhr_EmpResignation.EMPREG_FRM_STS) + "'" +
                                        " , @EMPREG_IsRsgndWthOutApprvl = " + Convert.ToBoolean(_Obj_Smhr_EmpResignation.EMPREG_IsRsgndWthOutApprvl)))


                        status = true;
                    else
                        status = false;
                    break;
                case operation.Empty:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'UPDATE1', @EMPREG_ID = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_ID) + "" +
                                        " , @EMPREG_EMP_ID = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_EMP_ID) + "" +
                                        " , @EMPREG_REGDATE = '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_REGDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_REMARKS = '" + _Obj_Smhr_EmpResignation.EMPREG_REMARKS + "'" +
                                        " , @EMPREG_REASON  = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_REASON) + "" +
                                        " , @EMPREG_RELDATE= '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_RELDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_LASTMDFBY = " + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_LASTMDFBY) + "" +
                                        " , @EMPREG_IS_TERMINATED = " + Convert.ToBoolean(_Obj_Smhr_EmpResignation.EMPREG_IS_TERMINATED) +
                                        " , @EMPREG_LASTMDFDATE ='" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",  @EMP_EXIT_INTERVIEW_EMP_ID= " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_EMP_ID) + "" +
                                        " , @EMP_EXIT_INTERVIEW_PRIMARY_REASON = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_PRIMARY_REASON) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_JOB_SATISFACTION = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_JOB_SATISFACTION) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_JOB_FRUSTRATION = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_JOB_FRUSTRATION) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_COMPANY_MEASURES  = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_COMPANY_MEASURES) + "'" +
                                        " , @EMP_EXIT_INTERVIEW_SUGGESTION= '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMP_EXIT_INTERVIEW_SUGGESTION) + "'" +
                                        " , @EMPREG_IsRsgndWthOutApprvl = " + Convert.ToBoolean(_Obj_Smhr_EmpResignation.EMPREG_IsRsgndWthOutApprvl)))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'Update', @EMPREG_STATUS = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_STATUS) + "'" +
                                        " , @EMPREG_REMARKS = '" + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_REMARKS) + "'" +
                                        " , @EMPREG_APPROVEDBY = '" + Convert.ToInt32(_Obj_Smhr_EmpResignation.EMPREG_APPROVEDBY) + "'" +
                                        " , @EMPREG_APPROVEDDATE= '" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.EMPREG_APPROVEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @EMPREG_LASTMDFBY = " + Convert.ToInt32(_Obj_Smhr_EmpResignation.LASTMDFBY) + "" +
                                        " , @EMPREG_LASTMDFDATE ='" + Convert.ToDateTime(_Obj_Smhr_EmpResignation.LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEERESIGNATION @Operation = 'Delete',@SHIFT_ID = " + Convert.ToString(_Obj_Smhr_EmpResignation.EMPREG_ID) + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_EmpresignationExitInterview(SMHR_EMPLOYEE_EXIT_INTERVIEW _obj_smhr_empExitInterview)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_EXIT_INTERVIEW @OPERATION='INSERT',@EMP_EXIT_INTERVIEW_EMP_ID = " + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_EMP_ID) + "" +
                                " , @EMP_EXIT_INTERVIEW_PRIMARY_REASON = '" + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_PRIMARY_REASON) + "'" +
                                " , @EMP_EXIT_INTERVIEW_JOB_SATISFACTION = '" + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_JOB_SATISFACTION) + "'" +
                                " , @EMP_EXIT_INTERVIEW_JOB_FRUSTRATION = '" + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_JOB_FRUSTRATION) + "'" +
                                " , @EMP_EXIT_INTERVIEW_COMPANY_MEASURES  = '" + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_COMPANY_MEASURES) + "'" +
                                " , @EMP_EXIT_INTERVIEW_SUGGESTION= '" + Convert.ToString(_obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_SUGGESTION) + "'"))

                status = true;
            else
                status = false;
            return status;
        }

        public static DataTable get_EmpresignationExitInterview(SMHR_EMPLOYEE_EXIT_INTERVIEW _obj_smhr_empExitInterview)
        {
            return ExecuteQuery("EXEC USP_SMHR_EXIT_INTERVIEW @Operation = 'SELECT', @EMP_EXIT_INTERVIEW_EMPREG_ID='" + _obj_smhr_empExitInterview.EMP_EXIT_INTERVIEW_EMPREG_ID + "'");
        }

        //Ragha Sudha on 15-Nov-2013
        public static bool send_EmployeeTerminationNotification(SMHR_EMPRESIGNATION _Obj_smhr_EmpResignation)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_EMP_TERMINATION_MAIL @EMPID= " + Convert.ToString(_Obj_smhr_EmpResignation.EMPREG_EMP_ID)))
                status = true;
            else
                status = false;
            return status;
        }

        //Ragha Sudha on 15-Nov-2013

        #endregion

        #region SMHR_EMPLOYEE

        public static DataTable get_Employeedetail(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.CHECKDUPLICATE)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Position',@EMP_DESIGNATION_ID='" + _obj_smhr_employee.EMP_DESIGNATION_ID + "', @EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.GetEmployeePensionDetails)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMP_BUSINESSUNIT_ID ='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                    "', @EMP_DIRECTORATE_ID ='" + _obj_smhr_employee.EMP_DIRECTORATE_ID +
                                    "', @EMP_DEPARTMENT_ID ='" + _obj_smhr_employee.EMP_DEPARTMENT_ID +
                                    "', @EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Employee)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMP_BUSINESSUNIT_ID ='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                    "', @EMP_DIRECTORATE_ID ='" + _obj_smhr_employee.EMP_DIRECTORATE_ID +
                                    "', @EMP_DEPARTMENT_ID ='" + _obj_smhr_employee.EMP_DEPARTMENT_ID +
                                    "', @EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Chk)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMP_BUSINESSUNIT_ID ='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                    "', @EMP_DIRECTORATE_ID ='" + _obj_smhr_employee.EMP_DIRECTORATE_ID +
                                    "', @EMP_DEPARTMENT_ID ='" + _obj_smhr_employee.EMP_DEPARTMENT_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'details',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
        }

        public static DataTable get_Employee(SMHR_EMPLOYEE _obj_smhr_employee)
        {

            if (_obj_smhr_employee.OPERATION == operation.EmployeeCount)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE_New @Operation = 'EmployeeCount', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            if (_obj_smhr_employee.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'SELECT1', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_smhr_employee.EMP_LOGIN_ID + "'");
            }
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                if (_obj_smhr_employee.EMP_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'select', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_smhr_employee.EMP_LOGIN_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'select', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
            }
            if (_obj_smhr_employee.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @OPERATION = 'CHECK_PAYROLL',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_PERIOD_ID='" + _obj_smhr_employee.EMP_PERIOD_ID + "'");
            }
            if (_obj_smhr_employee.OPERATION == operation.GetEmployeeDOJDOB)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE_New @Operation = 'GetEmployeeDOJDOB', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'");
            }
            if (_obj_smhr_employee.OPERATION == operation.GetEmployeePensionDetails)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE_New @Operation = 'GetEmployeePensionDetails', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check)
            {
                if (_obj_smhr_employee.EMP_EMPCODE.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'check',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'check', @EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_employee.OPERATION == operation.Empty)
            {
                if (_obj_smhr_employee.OPERATION.ToString() == "FILLEMP")
                {
                    if ((_obj_smhr_employee.OPERATION.ToString() == "FILLEMP") && (_obj_smhr_employee.EMP_BUSINESSUNIT_ID.ToString() == "0"))
                    {
                        return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'FILLEMP',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                    }
                    else
                    {
                        return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'FILLEMP' and @EMP_BUSINESSUNIT_ID =" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + ",@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                    }
                }
                else if (_obj_smhr_employee.OPERATION.ToString() == "FILLRESGEMP")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'FILLRESGEMP',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'FILLRELEMP',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_employee.OPERATION == operation.Update)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'Update', @EMP_STATUS_UPDATE = '" + _obj_smhr_employee.APP_EMP_STATUS + "'" +
                                    ", @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.SELECTEMPLOYEE)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTEMPLOYEE',@EMP_BUSINESSUNIT_ID ='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.UpdateSTATUS)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTSTATUS', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'" +
                                    " ");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='VALIDATE',@ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.load)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = 'load',@EMP_ID = " + _obj_smhr_employee.EMP_ID + "");
            }
            // checking whether the date of join is falling in any one of the calendar period or not
            else if (_obj_smhr_employee.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='select1',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_DOJ='" + _obj_smhr_employee.EMP_DATEOFJOIN + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check_Emp)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='" + _obj_smhr_employee.OPERATION + "'" +
                                    ",@EMP_EMPCODE='" + Convert.ToString(_obj_smhr_employee.EMP_EMPCODE) + "'" +
                                    ",@EMP_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'" +
                                    ",@EMP_BUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check2)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='" + _obj_smhr_employee.OPERATION + "'" +
                                    ",@EMP_EMPCODE='" + Convert.ToString(_obj_smhr_employee.EMP_EMPCODE) + "'" +
                                    ",@EMP_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.SELECTSUPERVISOR)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'SELECTSUPERVISOR', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.getdeptwise)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='getdeptwise',@EMP_BUSINESSUNIT_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "',@EMP_DEPARTMENT_ID='" + _obj_smhr_employee.EMP_DEPARTMENT_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.SelectLocal)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='SelectLocal', @EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CHKPAY)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='CHKPAY',@EMPSALDTLS_STR = '" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                    ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                    ",@EMP_PRDDTL_ID='" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CHKPAY2)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='CHKPAY2',@EMPSALDTLS_STR = '" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                    ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                    ",@EMP_PRDDTL_ID='" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CHKPAYAPP)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='CHKPAYAPP',@EMPSALDTLS_STR = '" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                    ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                    ",@EMP_PRDDTL_ID='" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Self', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_smhr_employee.EMP_LOGIN_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CHK_EMPMAIL)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='CHK_EMPMAIL',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID + "'");   //,@EMP_ORGANISATION_ID ='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CHK_EMAILORG)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='CHK_EMAILORG',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID + "',@EMP_ORGANISATION_ID ='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.GETGRADE)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='GETGRADE',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.CheckEmp)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'CheckEmp', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Delete', @EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
            }
        }

        public static DataTable get_Supervisor(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @operation='check'," +
                                    " @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'," +
                                    " @EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @operation='Empty'," +
                                    " @EMP_DESIGNATION_ID = '" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'");
            }
        }

        public static DataTable get_EmployeeRef(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                if (_obj_smhr_employee.EMP_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'select', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'select', @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'");
                }
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @Operation = 'select', @ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'");
            }
        }

        public static DataTable get_DefaultSupervisor(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Select1',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Validate',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Check1',@EMP_BUSINESSUNIT_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Select2',@EMP_BUSINESSUNIT_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @operation='Empty'," +
                                    "@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
            }
        }

        public static DataTable get_empcode(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @operation='Get',@EMP_EMPCODE='" + _obj_smhr_employee.EMP_EMPCODE + "',@ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
        }

        public static bool set_Employee(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_APPLICANT_ID = '" + _obj_smhr_employee.EMP_APPLICANT_ID + "'" +
                                        ",@EMP_DOJ = '" + _obj_smhr_employee.EMP_DOJ + "'" +
                                        ",@EMP_DOC = " + (_obj_smhr_employee.EMP_DOC == null ? "null" : "'" + _obj_smhr_employee.EMP_DOC + "'") + "" +
                                        ",@EMP_JOBS_ID = '" + _obj_smhr_employee.EMP_JOBS_ID + "'" +
                                        ",@EMP_DESIGNATION_ID = '" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                        ",@EMP_DATEOFLASTPROMOTION = " + (_obj_smhr_employee.EMP_DATEOFLASTPROMOTION == null ? "null" : "'" + _obj_smhr_employee.EMP_DATEOFLASTPROMOTION + "'") + "" +
                                        ",@EMP_GRADE = '" + _obj_smhr_employee.EMP_GRADE + "'" +
                                        ",@EMP_SLAB_ID = '" + _obj_smhr_employee.EMP_SLAB_ID + "'" +
                                        ",@EMP_REPORTINGEMPLOYEE = '" + _obj_smhr_employee.EMP_REPORTINGEMPLOYEE + "'" +
                                        ",@EMP_RPTSTARTDATE = " + (_obj_smhr_employee.EMP_RPTSTARTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTSTARTDATE + "'") + "" +
                                        ",@EMP_RPTENDDATE = " + (_obj_smhr_employee.EMP_RPTENDDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTENDDATE + "'") + "" +
                                        ",@EMP_SHIFT_ID = '" + _obj_smhr_employee.EMP_SHIFT_ID + "'" +
                                        ",@EMP_GROSSSAL = '" + _obj_smhr_employee.EMP_GROSSSAL + "'" +
                                        ",@EMP_BASIC = '" + _obj_smhr_employee.EMP_BASIC + "'" +
                                        ",@EMP_PAYMENTMODE_ID = '" + _obj_smhr_employee.EMP_PAYMENTMODE_ID + "'" +
                                        ",@EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                        ",@EMP_LEAVESTRUCT_ID = '" + _obj_smhr_employee.EMP_LEAVESTRUCT_ID + "'" +
                                        ",@EMP_STATUS = '" + _obj_smhr_employee.EMP_STATUS + "'" +
                                        ",@EMP_PROBATIONDATE = " + (_obj_smhr_employee.EMP_PROBATIONDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_PROBATIONDATE + "'") + "" +
                                        ",@EMP_NOTICEPERIOD = '" + _obj_smhr_employee.EMP_NOTICEPERIOD + "'" +
                                        ",@EMP_PICTURE = '" + Convert.ToString(_obj_smhr_employee.EMP_PICUTRE) + "'" +
                                        ",@EMP_EMPLOYEETYPE = '" + Convert.ToString(_obj_smhr_employee.EMP_EMPLOYEETYPE) + "'" +
                                        ",@EMP_PAYCURRENCY = '" + Convert.ToInt32(_obj_smhr_employee.EMP_PAYCURRENCY) + "'" +
                                        ",@EMP_DEPARTMENT_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DEPARTMENT_ID) + "'" +
                                        ",@EMP_DIRECTORATE_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) + "'" +
                                        ",@EMP_CONTRACT_STARTDATE = " + (_obj_smhr_employee.EMP_CONTRACT_STARTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_CONTRACT_STARTDATE + "'") + "" +
                                        ",@EMP_EMPLOYEE_STATUS = '" + Convert.ToInt32(_obj_smhr_employee.EMP_EMPLOYEE_STATUS) + "'" +
                                        ",@EMP_CREATEDBY = '" + _obj_smhr_employee.EMP_CREATEDBY + "'" +
                                        ",@EMP_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@EMP_SUPBUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_employee.EMP_SUPBUSINESSUNIT_ID) + "'" +
                                        ",@EMP_HOBBIES='" + _obj_smhr_employee.EMP_HOBBIES +
                                        "',@EMP_AMOUNT='" + _obj_smhr_employee.EMP_VARIABLEAMT +
                                        "',@EMP_COUNT='" + _obj_smhr_employee.EMP_VPPAYABLECOUNT +
                                        "',@EMP_DIV_ID=" + _obj_smhr_employee.EMP_DIV_ID +
                                        ",@EMP_ISVP='" + Convert.ToBoolean(_obj_smhr_employee.EMP_ISVARIABLEPAY) +
                                        "',@EMP_RESIDENCY_ID='" + _obj_smhr_employee.EMP_RESIDENCY_ID +
                                        "',@EMP_ANNUALGROSSSALARY='" + _obj_smhr_employee.emp_ANNUAL_GROSSSALARY +
                                        "',@EMP_ANNUALBASICSALARY='" + _obj_smhr_employee.emp_ANNUAL_BASICSALARY +
                                        "',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID +
                                        "',@EMP_LOCID=" + _obj_smhr_employee.EMP_LOCID +
                                        ",@EMP_CATEGORY_ID='" + _obj_smhr_employee.EMP_CATEGORY_ID +
                                        "',@EMP_TIMESHEETREQUIRED='" + _obj_smhr_employee.EMP_TIMESHEETREQUIRED +
                                        "',@EMP_AUSRESIDENCY_ID='" + _obj_smhr_employee.EMP_AUSRESIDENCY_ID +
                                        "',@EMP_SUBDIVISION= '" + _obj_smhr_employee.EMP_SUBDIVISION +
                                        "',@EMP_WORKSTATUS= '" + _obj_smhr_employee.EMP_WORKSTATUS +
                                        "',@EMP_FUNDNAME='" + _obj_smhr_employee.EMP_FUNDNAME +
                                        "',@EMP_MEMBER_ID='" + _obj_smhr_employee.EMP_MEMBERID +
                                        "',@EMP_CURRENTPROJECT='" + _obj_smhr_employee.EMP_CURRENTPROJECT +
                                        "',@EMP_ISMANUAL='" + _obj_smhr_employee.EMP_ISMANUAL +
                                        "',@EMP_INCRMENTDATE=" + (_obj_smhr_employee.EMP_INCREMENTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_INCREMENTDATE + "'") +
                                        ",@EMP_COUNTY_ID =" + _obj_smhr_employee.EMP_COUNTY_ID +
                                        ", @EMP_PERIOD_ID=" + _obj_smhr_employee.EMP_PERIOD_ID +
                                        ",@EMP_CONTRACT_ENDDATE=" + (_obj_smhr_employee.EMP_CONTRACT_ENDDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_CONTRACT_ENDDATE + "'")))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_APPLICANT_ID = '" + _obj_smhr_employee.EMP_APPLICANT_ID + "'" +
                                        ",@EMP_DATEOFJOIN = '" + _obj_smhr_employee.EMP_DATEOFJOIN + "'" +
                                        ",@EMP_DATEOFCONFORM = " + (_obj_smhr_employee.EMP_DATEOFCONFORM == null ? "null" : "'" + _obj_smhr_employee.EMP_DATEOFCONFORM + "'") + "" +
                                        ",@EMP_JOBS_ID = '" + _obj_smhr_employee.EMP_JOBS_ID + "'" +
                                        ",@EMP_DESIGNATION_ID = '" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                        ",@EMP_DATEOLP = " + (_obj_smhr_employee.EMP_DATEOLP == null ? "null" : "'" + _obj_smhr_employee.EMP_DATEOLP + "'") + "" +
                                        ",@EMP_GRADE = '" + _obj_smhr_employee.EMP_GRADE + "'" +
                                        ",@EMP_SLAB_ID = '" + _obj_smhr_employee.EMP_SLAB_ID + "'" +
                                        ",@EMP_REPORTINGEMPLOYEE = '" + _obj_smhr_employee.EMP_REPORTINGEMPLOYEE + "'" +
                                        ",@EMP_RPT = " + (_obj_smhr_employee.EMP_rpt == null ? "null" : "'" + _obj_smhr_employee.EMP_rpt + "'") + "" +
                                        ",@EMP_RPTENDDATE = " + (_obj_smhr_employee.EMP_RPTENDDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTENDDATE + "'") + "" +
                                        ",@EMP_SHIFT_ID = '" + _obj_smhr_employee.EMP_SHIFT_ID + "'" +
                                        ",@EMP_GROSSSAL = '" + _obj_smhr_employee.EMP_GROSSSAL + "'" +
                                        ",@EMP_BASIC = '" + _obj_smhr_employee.EMP_BASIC + "'" +
                                        ",@EMP_PAYMENTMODE_ID = '" + _obj_smhr_employee.EMP_PAYMENTMODE_ID + "'" +
                                        ",@EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                        ",@EMP_LEAVESTRUCT_ID = '" + _obj_smhr_employee.EMP_LEAVESTRUCT_ID + "'" +
                                        ",@EMP_STATUS = '" + _obj_smhr_employee.EMP_STATUS + "'" +
                                        ",@EMP_PROBDATE = " + (_obj_smhr_employee.EMP_PROBDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_PROBDATE + "'") + "" +
                                        ",@EMP_NOTICEPERIOD = '" + _obj_smhr_employee.EMP_NOTICEPERIOD + "'" +
                                        ",@EMP_PICTURE = '" + Convert.ToString(_obj_smhr_employee.EMP_PICUTRE) + "'" +
                                        ",@EMP_EMPLOYEETYPE = '" + Convert.ToString(_obj_smhr_employee.EMP_EMPLOYEETYPE) + "'" +
                                        ",@EMP_PAYCURRENCY = '" + Convert.ToInt32(_obj_smhr_employee.EMP_PAYCURRENCY) + "'" +
                                        ",@EMP_DIRECTORATE_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) + "'" +
                                        ",@EMP_DEPARTMENT_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DEPARTMENT_ID) + "'" +
                                        ",@EMP_CONTRDATE = " + (_obj_smhr_employee.EMP_CONTRDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_CONTRDATE + "'") + "" +
                                        ",@EMP_EMPLOYEE_STATUS = '" + Convert.ToInt32(_obj_smhr_employee.EMP_EMPLOYEE_STATUS) + "'" +
                                        ",@EMP_CREATEDBY = '" + _obj_smhr_employee.EMP_CREATEDBY + "'" +
                                        ",@EMP_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@EMP_SUPBUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_employee.EMP_SUPBUSINESSUNIT_ID) + "'" +
                                        ",@EMP_HOBBIES='" + _obj_smhr_employee.EMP_HOBBIES +
                                        "',@EMP_AMOUNT='" + _obj_smhr_employee.EMP_VARIABLEAMT +
                                        "',@EMP_COUNT='" + _obj_smhr_employee.EMP_VPPAYABLECOUNT +
                                        "',@EMP_ISVP='" + Convert.ToBoolean(_obj_smhr_employee.EMP_ISVARIABLEPAY) +
                                        "',@EMP_RESIDENCY_ID='" + _obj_smhr_employee.EMP_RESIDENCY_ID +
                                        "',@EMP_ANNUALGROSSSALARY='" + _obj_smhr_employee.emp_ANNUAL_GROSSSALARY +
                                        "',@EMP_ANNUALBASICSALARY='" + _obj_smhr_employee.emp_ANNUAL_BASICSALARY +
                                        "',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID +
                                        "',@EMP_LOCID=" + _obj_smhr_employee.EMP_LOCID +
                                        ",@EMP_CATEGORY_ID='" + _obj_smhr_employee.EMP_CATEGORY_ID +
                                        "',@EMP_TIMESHEETREQUIRED='" + _obj_smhr_employee.EMP_TIMESHEETREQUIRED +
                                        "',@EMP_AUSRESIDENCY_ID='" + _obj_smhr_employee.EMP_AUSRESIDENCY_ID +
                                        "',@EMP_SUBDIVISION= '" + _obj_smhr_employee.EMP_SUBDIVISION +
                                        "',@EMP_WORKSTATUS= '" + _obj_smhr_employee.EMP_WORKSTATUS +
                                        "',@EMP_FUNDNAME='" + _obj_smhr_employee.EMP_FUNDNAME +
                                        "',@EMP_MEMBER_ID='" + _obj_smhr_employee.EMP_MEMBERID +
                                        "',@EMP_CURRENTPROJECT='" + _obj_smhr_employee.EMP_CURRENTPROJECT +
                                        "',@EMP_ISMANUAL='" + _obj_smhr_employee.EMP_ISMANUAL +
                                        "',@EMP_PERIOD_ID=" + _obj_smhr_employee.EMP_PERIOD_ID + "" +

                                        ",@EMP_ACTIVITY='" + _obj_smhr_employee.EMP_ACTIVITY + "'" +
                                        ",@EMP_PROGRAMME='" + _obj_smhr_employee.EMP_PROGRAMME + "'" +
                                        ",@EMP_ORGUNIT='" + _obj_smhr_employee.EMP_ORGUNIT + "'" +
                                        ",@EMP_INTERVENTION='" + _obj_smhr_employee.EMP_INTERVENTION + "'" +
                                        ",@EMP_FOCUS_AREA='" + _obj_smhr_employee.EMP_FOCUS_AREA + "'" +
                                        ",@EMP_RESULT_AREA='" + _obj_smhr_employee.EMP_RESULT_AREA + "'" +
                                        ",@EMP_OUTCOME='" + _obj_smhr_employee.EMP_OUTCOME + "'"

                                        ))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_APPLICANT_ID = '" + _obj_smhr_employee.EMP_APPLICANT_ID + "'" +
                                        ",@EMP_DOJ = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_DOJ).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMP_DOC = " + (_obj_smhr_employee.EMP_DOC == null ? "null" : "'" + _obj_smhr_employee.EMP_DOC + "'") + "" +
                                        ",@EMP_JOBS_ID = '" + _obj_smhr_employee.EMP_JOBS_ID + "'" +
                                        ",@EMP_DESIGNATION_ID = '" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                        ",@EMP_DATEOFLASTPROMOTION = " + (_obj_smhr_employee.EMP_DATEOFLASTPROMOTION == null ? "null" : "'" + _obj_smhr_employee.EMP_DATEOFLASTPROMOTION + "'") +
                                        ",@EMP_GRADE = '" + _obj_smhr_employee.EMP_GRADE + "'" +
                                        ",@EMP_REPORTINGEMPLOYEE = '" + _obj_smhr_employee.EMP_REPORTINGEMPLOYEE + "'" +
                                        ",@EMP_RPTSTARTDATE = " + (_obj_smhr_employee.EMP_RPTSTARTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTSTARTDATE + "'") +
                                        ",@EMP_RPTENDDATE = " + (_obj_smhr_employee.EMP_RPTENDDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTENDDATE + "'") +
                                        ",@EMP_SHIFT_ID = '" + _obj_smhr_employee.EMP_SHIFT_ID + "'" +
                                        ",@EMP_GROSSSAL = '" + _obj_smhr_employee.EMP_GROSSSAL + "'" +
                                       // ",@EMP_BASIC = '" + _obj_smhr_employee.EMP_BASIC + "'" +
                                        ",@EMP_PAYMENTMODE_ID = '" + _obj_smhr_employee.EMP_PAYMENTMODE_ID + "'" +
                                        ",@EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                        ",@EMP_LEAVESTRUCT_ID = '" + _obj_smhr_employee.EMP_LEAVESTRUCT_ID + "'" +
                                        ",@EMP_STATUS = '" + _obj_smhr_employee.EMP_STATUS + "'" +
                                        ",@EMP_PROBATIONDATE = " + (_obj_smhr_employee.EMP_PROBATIONDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_PROBATIONDATE + "'") +
                                        ",@EMP_NOTICEPERIOD = '" + _obj_smhr_employee.EMP_NOTICEPERIOD + "'" +
                                        ",@EMP_PICTURE = '" + Convert.ToString(_obj_smhr_employee.EMP_PICUTRE) + "'" +
                                        ",@EMP_EMPLOYEETYPE = '" + Convert.ToString(_obj_smhr_employee.EMP_EMPLOYEETYPE) + "'" +
                                        ",@EMP_LASTMDFBY = '" + _obj_smhr_employee.EMP_LASTMDFBY + "'" +
                                        ",@EMP_CONTRACT_STARTDATE =" + (_obj_smhr_employee.EMP_CONTRACT_STARTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_CONTRACT_STARTDATE + "'") + "" +
                                        ",@EMP_CONTRACT_ENDDATE =" + (_obj_smhr_employee.EMP_CONTRACT_ENDDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_CONTRACT_ENDDATE + "'") + "" +
                                        ",@EMP_PERIOD_ID='" + _obj_smhr_employee.EMP_PERIOD_ID + "'" +
                                        ",@EMP_SLAB_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_SLAB_ID) + "'" +
                                        ",@EMP_EMPLOYEE_STATUS = '" + Convert.ToInt32(_obj_smhr_employee.EMP_EMPLOYEE_STATUS) + "'" +
                                        ",@EMP_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_LASTMDFDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@EMP_PAYCURRENCY = '" + Convert.ToInt32(_obj_smhr_employee.EMP_PAYCURRENCY) + "'" +
                                        ",@EMP_DIRECTORATE_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) + "'" +
                                        ",@EMP_DEPARTMENT_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DEPARTMENT_ID) + "'" +
                                        ",@EMP_SUPBUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_employee.EMP_SUPBUSINESSUNIT_ID) + "'" +
                                        ",@EMP_HOBBIES='" + _obj_smhr_employee.EMP_HOBBIES + "'" +
                                        ",@EMP_AMOUNT='" + _obj_smhr_employee.EMP_VARIABLEAMT +
                                        "',@EMP_COUNT='" + _obj_smhr_employee.EMP_VPPAYABLECOUNT +
                                        "',@EMP_DIV_ID=" + _obj_smhr_employee.EMP_DIV_ID +
                                        ",@EMP_LOCID=" + _obj_smhr_employee.EMP_LOCID +
                                        ",@EMP_ISVP='" + Convert.ToBoolean(_obj_smhr_employee.EMP_ISVARIABLEPAY) +
                                        "',@EMP_RESIDENCY_ID='" + _obj_smhr_employee.EMP_RESIDENCY_ID +
                                        "',@EMP_ANNUALGROSSSALARY='" + _obj_smhr_employee.emp_ANNUAL_GROSSSALARY +
                                        "',@EMP_ANNUALBASICSALARY='" + _obj_smhr_employee.emp_ANNUAL_BASICSALARY +
                                        "',@EMP_CATEGORY_ID='" + _obj_smhr_employee.EMP_CATEGORY_ID +
                                        "',@EMP_TIMESHEETREQUIRED='" + _obj_smhr_employee.EMP_TIMESHEETREQUIRED +
                                        "',@EMP_AUSRESIDENCY_ID='" + _obj_smhr_employee.EMP_AUSRESIDENCY_ID +
                                        "',@EMP_ID = '" + _obj_smhr_employee.EMP_ID +
                                        "',@EMP_SUBDIVISION= '" + _obj_smhr_employee.EMP_SUBDIVISION +
                                        "',@EMP_WORKSTATUS= '" + _obj_smhr_employee.EMP_WORKSTATUS +
                                        "',@EMP_FUNDNAME='" + _obj_smhr_employee.EMP_FUNDNAME +
                                        "',@EMP_MEMBER_ID='" + _obj_smhr_employee.EMP_MEMBERID +
                                        "',@EMP_CURRENTPROJECT='" + _obj_smhr_employee.EMP_CURRENTPROJECT +
                                        "',@EMP_ISMANUAL='" + _obj_smhr_employee.EMP_ISMANUAL +
                                        "',@EMP_INCRMENTDATE=" + (_obj_smhr_employee.EMP_INCREMENTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_INCREMENTDATE + "'") + "" +
                                        ",@EMP_COUNTY_ID =" + _obj_smhr_employee.EMP_COUNTY_ID +

                                        ",@EMP_ACTIVITY='" + _obj_smhr_employee.EMP_ACTIVITY + "'" +
                                        ",@EMP_PROGRAMME='" + _obj_smhr_employee.EMP_PROGRAMME + "'" +
                                        ",@EMP_ORGUNIT='" + _obj_smhr_employee.EMP_ORGUNIT + "'" +
                                        ",@EMP_INTERVENTION='" + _obj_smhr_employee.EMP_INTERVENTION + "'" +
                                        ",@EMP_FOCUS_AREA='" + _obj_smhr_employee.EMP_FOCUS_AREA + "'" +
                                        ",@EMP_RESULT_AREA='" + _obj_smhr_employee.EMP_RESULT_AREA + "'" +
                                        ",@EMP_OUTCOME='" + _obj_smhr_employee.EMP_OUTCOME + "'"

                                        ))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.EMP_COPY:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                        ",@EMP_DIRECTORATE_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) + "'" +
                                        ",@EMP_DEPARTMENT_ID='" + _obj_smhr_employee.EMP_DEPARTMENT_ID + "'" +
                                        ",@EMP_PAYCURRENCY='" + _obj_smhr_employee.EMP_PAYCURRENCY + "'" +
                                        ",@EMP_EMPCODE='" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_SOURCEBU='" + _obj_smhr_employee.emp_SOURCEBU + "'" +
                                        ",@EMP_SALALRYSTRUCT_ID='" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                        ",@EMP_DESIGNATION_ID='" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'" +
                                        ",@EMP_ANNUALGROSSSALARY='" + _obj_smhr_employee.emp_ANNUAL_GROSSSALARY + "'" +
                                        ",@EMP_ANNUALBASICSALARY='" + _obj_smhr_employee.emp_ANNUAL_BASICSALARY + "'" +
                                        ",@EMP_GROSSSAL='" + _obj_smhr_employee.EMP_GROSSSAL + "'" +
                                        ",@EMP_BASIC='" + _obj_smhr_employee.EMP_BASIC + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.DelPic:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE @Operation='DelPic',@EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "',@ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_EmpFamily(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    string qry = string.Format("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                               ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
                                               ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
                                               ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
                                               ",@EMPFMDTL_SURNAME = '" + _obj_smhr_employee.EMPFMDTL_SURNAME + "'" +
                                               ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
                                               ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
                                               ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
                                               ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                               ",@EMPFMDTL_ANNUALINCOME='" + Convert.ToDouble(_obj_smhr_employee.EMPFMDTL_ANNUALINCOME) + "'" +
                                               ",@EMPFMDTL_PHOTO='" + _obj_smhr_employee.EMPFMDTL_PHOTO + "'" +
                                               ",@EMPFMDTL_BIOMETRICDATA='" + _obj_smhr_employee.EMPFMDTL_BIOMETRICDOC + "'" +
                                               ",@EMPFMDTL_BIODATA='" + _obj_smhr_employee.EMPFMDTL_BIODATA +
                                               "',@EMPFMDTL_IS_DEP='" + _obj_smhr_employee.EMPFMDTL_IS_DEP +
                                               "',@EMPFMDTL_IS_EDU='" + _obj_smhr_employee.EMPFMDTL_IS_EDU +
                                               "',@EMPFMDTL_IS_MED='" + _obj_smhr_employee.EMPFMDTL_IS_MED + "'");

                    if (string.Compare(_obj_smhr_employee.EMPFMDTL_EMPREL_NAME.ToLower(), "spouse", true) == 0)
                    {
                        qry = qry + ",@EMPFMDTL_WIFEIDNUMBER = '" + _obj_smhr_employee.EMPFMDTL_WIFEIDNUMBER + "'";
                    }
                    else
                    {
                        qry = qry + ",@EMPFMDTL_RELDOB = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_RELDOB).ToString("MM/dd/yyyy") + "'";
                    }
                    if (ExecuteNonQuery(qry))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
                                        ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
                                        ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
                                        ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
                                        ",@EMFM_RELDOB = '" + Convert.ToString(_obj_smhr_employee.EMFM_RELDOB) + "'" +
                                        ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
                                        ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
                                        ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
                                        ",@EMPFMDTL_IMAGE = '" + _obj_smhr_employee.EMPFMDTL_IMAGE + "'" +
                                        ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
                                        ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@EMPFMDTL_ANNUALINCOME='" + Convert.ToDouble(_obj_smhr_employee.EMPFMDTL_ANNUALINCOME) + "'" +
                                        ",@EMPFMDTL_OCCUPATION='" + _obj_smhr_employee.EMPFMDTL_OCCUPATION + "'" +
                                        ",@EMPFMDTL_RELNOMINEE='" + _obj_smhr_employee.EMPFMDTL_NOMINEE +
                                        "',@EMPFMDTL_IS_DEP='" + _obj_smhr_employee.EMPFMDTL_IS_DEP +
                                        "',@EMPFMDTL_IS_EDU='" + _obj_smhr_employee.EMPFMDTL_IS_EDU +
                                        "',@EMPFMDTL_IS_MED='" + _obj_smhr_employee.EMPFMDTL_IS_MED + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    string qry1 = " EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                  ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
                                  ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
                                  ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
                                  ",@EMPFMDTL_SURNAME = '" + _obj_smhr_employee.EMPFMDTL_SURNAME + "'" +
                                  ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
                                  ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
                                  ",@EMPFMDTL_LASTMDFBY = '" + _obj_smhr_employee.EMPFMDTL_LASTMDFBY + "'" +
                                  ",@EMPFMDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_LASTMDFDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                  ",@EMPFMDTL_ANNUALINCOME='" + Convert.ToDouble(_obj_smhr_employee.EMPFMDTL_ANNUALINCOME) + "'" +
                                  ",@EMPFMDTL_PHOTO='" + _obj_smhr_employee.EMPFMDTL_PHOTO + "'" +
                                  ",@EMPFMDTL_BIODATA='" + _obj_smhr_employee.EMPFMDTL_BIODATA + "'" +
                                  ",@EMPFMDTL_BIOMETRICDATA='" + _obj_smhr_employee.EMPFMDTL_BIOMETRICDOC + "'" +
                                  ",@EMPFMDTL_ID = '" + _obj_smhr_employee.EMPFMDTL_ID +
                                  "',@EMPFMDTL_IS_DEP='" + _obj_smhr_employee.EMPFMDTL_IS_DEP +
                                  "',@EMPFMDTL_IS_EDU='" + _obj_smhr_employee.EMPFMDTL_IS_EDU +
                                  "',@EMPFMDTL_IS_MED='" + _obj_smhr_employee.EMPFMDTL_IS_MED + "'";

                    if (string.Compare(_obj_smhr_employee.EMPFMDTL_EMPREL_NAME.ToLower(), "spouse", true) == 0)
                    {
                        qry1 = qry1 + ",@EMPFMDTL_WIFEIDNUMBER = '" + _obj_smhr_employee.EMPFMDTL_WIFEIDNUMBER + "'";
                    }
                    else
                    {
                        qry1 = qry1 + ",@EMPFMDTL_RELDOB = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_RELDOB).ToString("MM/dd/yyyy") + "'";
                    }
                    if (ExecuteNonQuery(qry1))
                        status = true;
                    else
                        status = false;
                    break;
                //Modified
                case operation.Insert_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_FAMILYDETAILS_MODIFIED @Operation='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
                                        ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
                                        ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
                                        ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
                                        ",@EMPFMDTL_RELDOB = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_RELDOB).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
                                        ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
                                        ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
                                        ",@EMPFMDTL_IMAGE = '" + _obj_smhr_employee.EMPFMDTL_IMAGE + "'" +
                                        ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
                                        ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy" + " " + "HH:mm") + "'" +
                                        ",@EMPFMDTL_ANNUALINCOME='" + _obj_smhr_employee.EMPFMDTL_ANNUALINCOME + "'" +
                                        ",@EMPFMDTL_OCCUPATION='" + _obj_smhr_employee.EMPFMDTL_OCCUPATION + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                //Modified
                case operation.Update_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_FAMILYDETAILS_MODIFIED @Operation='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
                                        ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
                                        ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
                                        ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
                                        ",@EMPFMDTL_RELDOB = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_RELDOB).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
                                        ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
                                        ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
                                        ",@EMPFMDTL_IMAGE = '" + _obj_smhr_employee.EMPFMDTL_IMAGE + "'" +
                                        ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
                                        ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPFMDTL_ANNUALINCOME='" + _obj_smhr_employee.EMPFMDTL_ANNUALINCOME + "'" +
                                        ",@EMPFMDTL_OCCUPATION='" + _obj_smhr_employee.EMPFMDTL_OCCUPATION + "'" +
                                        ",@EMPFMDTL_ID = '" + _obj_smhr_employee.EMPFMDTL_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static bool set_RehireEmployee(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_REHIREEMPLOYEE @EMP_ID = " + _obj_smhr_employee.EMP_ID + "" +
                                        ",@EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_CREATEDBY = '" + _obj_smhr_employee.EMP_CREATEDBY + "'" +
                                        ",@EMP_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMP_LASTMDFBY = '" + _obj_smhr_employee.EMP_LASTMDFBY + "'" +
                                        ",@EMP_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@GLOBALCONFIG_ORGANISATION_ID = '" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                        ",@EMP_APPLICANT = '" + Convert.ToString(_obj_smhr_employee.EMPFMDTL_NAME) + "'" +
                                        ",@EMP_TYPE='" + Convert.ToString(_obj_smhr_employee.EMP_EMPLOYEETYPE) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_EMPCODE = '" + _obj_smhr_employee.EMP_EMPCODE + "'" +
                                        ",@EMP_APPLICANT_ID = '" + _obj_smhr_employee.EMP_APPLICANT_ID + "'" +
                                        ",@EMP_DOJ = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_DOJ).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMP_DOC = " + (_obj_smhr_employee.EMP_DOC == null ? "null" : "'" + _obj_smhr_employee.EMP_DOC + "'") + "" +
                                        ",@EMP_DESIGNATION_ID = '" + _obj_smhr_employee.EMP_DESIGNATION_ID + "'" +
                                        ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                        ",@EMP_DATEOFLASTPROMOTION = " + (_obj_smhr_employee.EMP_DATEOFLASTPROMOTION == null ? "null" : "'" + _obj_smhr_employee.EMP_DATEOFLASTPROMOTION + "'") +
                                        ",@EMP_GRADE = '" + _obj_smhr_employee.EMP_GRADE + "'" +
                                        ",@EMP_REPORTINGEMPLOYEE = '" + _obj_smhr_employee.EMP_REPORTINGEMPLOYEE + "'" +
                                        ",@EMP_RPTSTARTDATE = " + (_obj_smhr_employee.EMP_RPTSTARTDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_RPTSTARTDATE + "'") +
                                        ",@EMP_RPTENDDATE = " + (_obj_smhr_employee.EMP_RPTENDDATE == null ? "null" : "" + _obj_smhr_employee.EMP_RPTENDDATE + "'") +
                                        ",@EMP_SHIFT_ID = '" + _obj_smhr_employee.EMP_SHIFT_ID + "'" +
                                        ",@EMP_GROSSSAL = '" + _obj_smhr_employee.EMP_GROSSSAL + "'" +
                                        ",@EMP_BASIC = '" + _obj_smhr_employee.EMP_BASIC + "'" +
                                        ",@EMP_PAYMENTMODE_ID = '" + _obj_smhr_employee.EMP_PAYMENTMODE_ID + "'" +
                                        ",@EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                        ",@EMP_LEAVESTRUCT_ID = '" + _obj_smhr_employee.EMP_LEAVESTRUCT_ID + "'" +
                                        ",@EMP_STATUS = '" + _obj_smhr_employee.EMP_STATUS + "'" +
                                        ",@EMP_PROBATIONDATE = " + (_obj_smhr_employee.EMP_PROBATIONDATE == null ? "null" : "'" + _obj_smhr_employee.EMP_PROBATIONDATE + "'") +
                                        ",@EMP_NOTICEPERIOD = '" + _obj_smhr_employee.EMP_NOTICEPERIOD + "'" +
                                        ",@EMP_LASTMDFBY = '" + _obj_smhr_employee.EMP_LASTMDFBY + "'" +
                                        ",@EMP_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMP_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMP_SUPBUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_employee.EMP_SUPBUSINESSUNIT_ID) + "'" +
                                        ",@EMP_HOBBIES='" + Convert.ToString(_obj_smhr_employee.EMP_HOBBIES) + "'" +
                                        ",@EMP_CATEGORY_ID='" + _obj_smhr_employee.EMP_CATEGORY_ID + "'" +
                                        ",@EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        //public static bool set_EmpFamily(SMHR_EMPLOYEE _obj_smhr_employee)
        //{
        //    bool status = false;
        //    switch (_obj_smhr_employee.OPERATION)
        //    {
        //        case operation.Insert:
        //            if (ExecuteNonQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
        //                                ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
        //                                ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
        //                                ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
        //                                ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
        //                                ",@EMPFMDTL_RELDOB = '" + _obj_smhr_employee.EMPFMDTL_RELDOB + "'" +
        //                                ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
        //                                ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
        //                                ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
        //                                ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
        //                                ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //        case operation.Update:
        //            if (ExecuteNonQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
        //                                ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
        //                                ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
        //                                ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
        //                                ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
        //                                ",@EMPFMDTL_RELDOB = '" + _obj_smhr_employee.EMPFMDTL_RELDOB + "'" +
        //                                ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
        //                                ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
        //                                ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
        //                                ",@EMPFMDTL_LASTMDFBY = '" + _obj_smhr_employee.EMPFMDTL_LASTMDFBY + "'" +
        //                                ",@EMPFMDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
        //                                ",@EMPFMDTL_ID = '" + _obj_smhr_employee.EMPFMDTL_ID + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;

        //        //Modified
        //        case operation.Insert_New:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_FAMILYDETAILS_MODIFIED @Operation='" + _obj_smhr_employee.OPERATION + "'" +
        //                                ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
        //                                ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
        //                                ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
        //                                ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
        //                                ",@EMPFMDTL_RELDOB = '" + _obj_smhr_employee.EMPFMDTL_RELDOB + "'" +
        //                                ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
        //                                ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
        //                                ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
        //                                ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
        //                                ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
        //                                ",@EMPFMDTL_ANNUALINCOME='" + _obj_smhr_employee.EMPFMDTL_ANNUALINCOME + "'" +
        //                                ",@EMPFMDTL_OCCUPATION='" + _obj_smhr_employee.EMPFMDTL_OCCUPATION + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;

        //        //Modified
        //        case operation.Update_New:
        //            if (ExecuteNonQuery("EXEC USP_SMHR_FAMILYDETAILS_MODIFIED @Operation='" + _obj_smhr_employee.OPERATION + "'" +
        //                                ",@EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'" +
        //                                ",@EMPFMDTL_SERIAL = '" + _obj_smhr_employee.EMPFMDTL_SERIAL + "'" +
        //                                ",@EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "'" +
        //                                ",@EMPFMDTL_NAME = '" + _obj_smhr_employee.EMPFMDTL_NAME + "'" +
        //                                ",@EMPFMDTL_RELDOB = '" + _obj_smhr_employee.EMPFMDTL_RELDOB + "'" +
        //                                ",@EMPFMDTL_RELDEPENDENT = '" + _obj_smhr_employee.EMPFMDTL_RELDEPENDENT + "'" +
        //                                ",@EMPFMDTL_RELEMERGENCY = '" + _obj_smhr_employee.EMPFMDTL_EMERGENCYCONTACT + "'" +
        //                                ",@EMPFMDTL_RELNEXTTOKIN = '" + _obj_smhr_employee.EMPFMDTL_ISNEXTTOKIN + "'" +
        //                                ",@EMPFMDTL_CREATEDBY = '" + _obj_smhr_employee.EMPFMDTL_CREATEDBY + "'" +
        //                                ",@EMPFMDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPFMDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
        //                                ",@EMPFMDTL_ANNUALINCOME='" + _obj_smhr_employee.EMPFMDTL_ANNUALINCOME + "'" +
        //                                ",@EMPFMDTL_OCCUPATION='" + _obj_smhr_employee.EMPFMDTL_OCCUPATION + "'" +
        //                                ",@EMPFMDTL_ID = '" + _obj_smhr_employee.EMPFMDTL_ID + "'"))
        //                status = true;
        //            else
        //                status = false;
        //            break;
        //    }
        //    return status;
        //}

        public static DataTable get_EmployeeFamily(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                if (Convert.ToString(_obj_smhr_employee.EMPFMDTL_ID) == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMPFMDTL_ID = " + _obj_smhr_employee.EMPFMDTL_ID);
                }
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = 'Check_New', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Get)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = 'Get', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Select2)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = 'Select2', @EMPFMDTL_ID = '" + _obj_smhr_employee.EMPFMDTL_ID + "',@EMPFMDTL_EMP_ID='" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Chk)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMPFMDTL_EMPREL_ID = '" + _obj_smhr_employee.EMPFMDTL_EMPREL_ID + "',@EMPFMDTL_EMP_ID='" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Available)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_employee.EMP_ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_employee.EMP_ORGANISATION_ID + "',@EMPFMDTL_ID=" + _obj_smhr_employee.EMPFMDTL_ID);
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check2)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = '" + _obj_smhr_employee.OPERATION + "', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_employee.EMP_ORGANISATION_ID + "',@EMPFMDTL_ID=" + _obj_smhr_employee.EMPFMDTL_ID);
            }
            else if (_obj_smhr_employee.OPERATION == operation.CheckEmp)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = 'EMP_CLAIM', @EMPFMDTL_EMP_ID = " + _obj_smhr_employee.EMP_ID);
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPFAMILYDETAILS @Operation = 'check', @EMPFMDTL_EMP_ID = '" + _obj_smhr_employee.EMPFMDTL_EMP_ID + "',@ORGANISATION_ID= '" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
        }

        public static bool set_EmployeeSwipe(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEESWIPEMASTER @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPSWM_EMP_ID = '" + _obj_smhr_employee.EMPSWM_EMP_ID + "'" +
                                        ",@EMPSWM_SERIAL = '" + _obj_smhr_employee.EMPSWM_SERIAL + "'" +
                                        ",@EMPSWM_CARDCODE = '" + _obj_smhr_employee.EMPSWM_CARDCODE + "'" +
                                        ",@EMPSWM_CARDISSUE = '" + _obj_smhr_employee.EMPSWM_CARDISSUE + "'" +
                                        ",@EMPSWM_CARDEXPIRY = '" + _obj_smhr_employee.EMPSWM_CARDEXPIRY + "'" +
                                        ",@EMPSWM_REMARKS = '" + _obj_smhr_employee.EMPSWM_REMARKS + "'" +
                                        ",@EMPSWM_CREATEDBY = '" + _obj_smhr_employee.EMPSWM_CREATEDBY + "'" +
                                        ",@EMPSWM_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSWM_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEESWIPEMASTER @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPSWM_EMP_ID = '" + _obj_smhr_employee.EMPSWM_EMP_ID + "'" +
                                        ",@EMPSWM_SERIAL = '" + _obj_smhr_employee.EMPSWM_SERIAL + "'" +
                                        ",@EMPSWM_CARDCODE = '" + _obj_smhr_employee.EMPSWM_CARDCODE + "'" +
                                        ",@EMPSWM_CARDISSUE = '" + _obj_smhr_employee.EMPSWM_CARDISSUE + "'" +
                                        ",@EMPSWM_CARDEXPIRY = '" + _obj_smhr_employee.EMPSWM_CARDEXPIRY + "'" +
                                        ",@EMPSWM_REMARKS = '" + _obj_smhr_employee.EMPSWM_REMARKS + "'" +
                                        ",@EMPSWM_LASTMDFBY = '" + _obj_smhr_employee.EMPSWM_LASTMDFBY + "'" +
                                        ",@EMPSWM_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSWM_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPSWM_ID = '" + _obj_smhr_employee.EMPSWM_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmployeeSwipe(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEESWIPEMASTER @Operation = 'check'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEESWIPEMASTER @Operation = 'check', @EMPSWM_EMP_ID = '" + _obj_smhr_employee.EMPSWM_EMP_ID + "'");
            }
        }

        public static bool set_EmpOTInfo(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEOTRATE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPOTR_EMP_ID = '" + _obj_smhr_employee.EMPOTR_EMP_ID + "'" +
                                        ",@EMPOTR_OTTYPE_ID = '" + _obj_smhr_employee.EMPOTR_OTTYPE_ID + "'" +
                                        ",@EMPOTR_OTRATE = '" + _obj_smhr_employee.EMPOTR_OTRATE + "'" +
                                        ",@EMPOTR_CREATEDBY = '" + _obj_smhr_employee.EMPOTR_CREATEDBY + "'" +
                                        ",@EMPOTR_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPOTR_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEOTRATE @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPOTR_EMP_ID = '" + _obj_smhr_employee.EMPOTR_EMP_ID + "'" +
                                        ",@EMPOTR_OTTYPE_ID = '" + _obj_smhr_employee.EMPOTR_OTTYPE_ID + "'" +
                                        ",@EMPOTR_OTRATE = '" + _obj_smhr_employee.EMPOTR_OTRATE + "'" +
                                        ",@EMPOTR_LASTMDFBY = '" + _obj_smhr_employee.EMPOTR_LASTMDFBY + "'" +
                                        ",@EMPOTR_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPOTR_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPOTR_ID = '" + _obj_smhr_employee.EMPOTR_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmpOTRate(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                if (_obj_smhr_employee.EMPWOFF_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEOTRATE @Operation = 'select'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEOTRATE @Operation = 'select', @EMPOTR_ID = '" + _obj_smhr_employee.EMPOTR_ID + "'");
                }
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEOTRATE @Operation = 'Empty', @EMPOTR_EMP_ID = '" + _obj_smhr_employee.EMPOTR_EMP_ID + "'");
            }
        }

        public static DataTable get_EmpWeeklyoff(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                if (_obj_smhr_employee.EMPWOFF_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = 'select'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = 'select', @EMPWOFF_ID = '" + _obj_smhr_employee.EMPWOFF_ID + "'");
                }
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = 'select', @EMPWOFF_EMP_ID = '" + _obj_smhr_employee.EMPWOFF_EMP_ID + "'");
            }
        }

        public static bool set_EmpWeeklyoff(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPWOFF_EMP_ID = '" + _obj_smhr_employee.EMPWOFF_EMP_ID + "'" +
                                        ",@EMPWOFF_DAY_ID = '" + _obj_smhr_employee.EMPWOFF_DAY_ID + "'" +
                                        ",@EMPWOFF_CREATEDBY  = '" + _obj_smhr_employee.EMPWOFF_CREATEDBY + "'" +
                                        ",@EMPWOFF_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPWOFF_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = '" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMPWOFF_EMP_ID = '" + _obj_smhr_employee.EMPWOFF_EMP_ID + "'" +
                                        ",@EMPWOFF_DAY_ID = '" + _obj_smhr_employee.EMPWOFF_DAY_ID + "'" +
                                        ",@EMPWOFF_LASTMDFBY = '" + _obj_smhr_employee.EMPWOFF_LASTMDFBY + "'" +
                                        ",@EMPWOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPWOFF_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPWOFF_ID = '" + _obj_smhr_employee.EMPWOFF_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable LOAD_ALLEMP_BY_CONTROLS(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_NEW @OPERATION = 'LOAD_ALLEMP_BY_CONTROLS', @ORGANISATION_ID = " + _obj_smhr_employee.EMP_ORGANISATION_ID +
                                ",@EMP_BUSINESSUNIT_ID = " + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                ",@EMP_DIRECTORATE_ID = " + _obj_smhr_employee.EMP_DIRECTORATE_ID +
                                ",@EMP_DEPARTMENT_ID = " + _obj_smhr_employee.EMP_DEPARTMENT_ID);
        }

        /// <summary>
        /// Written by Eshwar_Dev 20131220 to load Applicant Names based upon the controls
        /// </summary>
        /// <param name="_obj_smhr_employee"></param>
        /// <returns></returns>
        public static DataTable Get_Applicant_NamesbyControls(SMHR_EMPLOYEE _obj_smhr_employee)//int buID, int orgID, int dirID, int depID)
        {
            DataTable dtAppNames = new DataTable();

            if ((Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) != 0) && (Convert.ToInt32(_obj_smhr_employee.EMP_DEPARTMENT_ID) == 0))
            {
                dtAppNames = ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_NEW @OPERATION = 'LOAD_EMP_BY_DIR',   @ORGANISATION_ID = " + _obj_smhr_employee.EMP_ORGANISATION_ID +
                                          ",@EMP_BUSINESSUNIT_ID = " + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                          ",@EMP_DIRECTORATE_ID = " + _obj_smhr_employee.EMP_DIRECTORATE_ID);
            }
            else if ((Convert.ToInt32(_obj_smhr_employee.EMP_DIRECTORATE_ID) != 0) && (Convert.ToInt32(_obj_smhr_employee.EMP_DEPARTMENT_ID) != 0))
            {
                dtAppNames = ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_NEW @OPERATION = 'LOAD_EMP_BY_DIR_DEP',@ORGANISATION_ID = " + _obj_smhr_employee.EMP_ORGANISATION_ID +
                                          ",@EMP_BUSINESSUNIT_ID = " + _obj_smhr_employee.EMP_BUSINESSUNIT_ID +
                                          ",@EMP_DIRECTORATE_ID = " + _obj_smhr_employee.EMP_DIRECTORATE_ID +
                                          ",@EMP_DEPARTMENT_ID = " + _obj_smhr_employee.EMP_DEPARTMENT_ID);
            }
            else
            {
                dtAppNames = ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_NEW @OPERATION = 'LOAD_EMP_BY_BU_ORG',@ORGANISATION_ID = " + _obj_smhr_employee.EMP_ORGANISATION_ID +
                                          ",@EMP_BUSINESSUNIT_ID = " + _obj_smhr_employee.EMP_BUSINESSUNIT_ID);
            }
            return dtAppNames;
        }

        public static bool get_EmployeeStatus(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.CHECKDUPLICATE:  //To check if MemberID/PensionID exists
                    if (Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEE @Operation = '" + _obj_smhr_employee.OPERATION +
                                                                                                                                                     "', @EMP_MEMBER_ID ='" + _obj_smhr_employee.EMP_MEMBERID +
                                                                                                                                                     "',  @EMP_ORGANISATION_ID =" + _obj_smhr_employee.ORGANISATION_ID +
                                                                                                                                                     ", @EMP_ID = " + _obj_smhr_employee.EMP_ID)))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        # region SMHR_EMPPROMOTIONS

        ///// <summary>
        ///// Method to get the EmpPromotions Details. 
        ///// </summary>
        ///// <returns>DataTable</returns>
        ///// <remarks>
        /////  Author             : MKD 
        /////  Created on         : 2009-08-31
        /////  Last Modified on   : N/A
        /////  Last Modfied by    : N/A
        ///// </remarks>
        ///// 
        public static DataTable get_EmpPromotions(SMHR_EMPPROMOTIONS _obj_Smhr_Emppromotions)
        {
            if (_obj_Smhr_Emppromotions.OPERATION == operation.Select)
            {
                if ((_obj_Smhr_Emppromotions.EMPPRO_ID.ToString() == "0") && (_obj_Smhr_Emppromotions.EMPPRO_EMPID.ToString() == "0"))
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @Operation = 'select',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "',@EMP_LOGIN_ID='" + _obj_Smhr_Emppromotions.LOGIN_ID + "'");
                }
                else if ((_obj_Smhr_Emppromotions.EMPPRO_ID.ToString() != "0") && (_obj_Smhr_Emppromotions.EMPPRO_EMPID.ToString() == "0"))
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @Operation = 'select', @EMPPRO_ID = '" + _obj_Smhr_Emppromotions.EMPPRO_ID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @Operation = 'select',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
            }
            else if (_obj_Smhr_Emppromotions.OPERATION == operation.Select1)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = 'Select1',@EMP_ORGANISATION_ID='" + _obj_Smhr_Emppromotions.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Emppromotions.OPERATION == operation.Select_New)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = 'Select_New',@EMPPRO_BUSINESSUNIT_ID='" + _obj_Smhr_Emppromotions.BUID + "',@EMPPRO_GRADE='" + _obj_Smhr_Emppromotions.EMPPRO_GRADE + "',@EMP_ORGANISATION_ID='" + _obj_Smhr_Emppromotions.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Emppromotions.OPERATION == operation.Update)
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = 'Update',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = 'FILL',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
            }
        }

        public static DataTable get_ReportingEmployee(SMHR_EMPPROMOTIONS _obj_Smhr_Emppromotions)
        {
            if (_obj_Smhr_Emppromotions.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Emppromotions.EMPPRO_EMPID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION_GETREPORTINGEMP  @Operation = 'Select',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION_GETREPORTINGEMP  @Operation = 'Select',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
            }
            else if (_obj_Smhr_Emppromotions.OPERATION == operation.EMPTY_R)
            {
                if (_obj_Smhr_Emppromotions.EMPPRO_EMPID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION_GETREPORTINGEMP  @Operation = 'EMPTY_R',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION_GETREPORTINGEMP  @Operation = 'EMPTY_R',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
                }
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EMPPROMOTION_GETREPORTINGEMP  @Operation = 'Select',@EMPPRO_EMPID = '" + _obj_Smhr_Emppromotions.EMPPRO_EMPID + "',@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'");
            }
        }

        public static bool set_EmpPromotion(SMHR_EMPPROMOTIONS _obj_Smhr_Emppromotions, SMHR_EMPPROMOTIONS _obj_Smhr_Promotions_2)
        {
            bool status = false;
            switch (_obj_Smhr_Emppromotions.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = 'Insert'" +
                                        ",@EMPPRO_EMPID = " + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_EMPID) + "" +
                                        ",@EMPPRO_DATEOFPROMOTION = '" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_DATEOFPROMOTION) + "'" +
                                        ",@EMPPRO_DESIGNATION_ID = " + _obj_Smhr_Emppromotions.EMPPRO_DESIGNATION_ID + "" +
                                        ",@EMPPRO_GRADE = " + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_GRADE) + "" +
                                        ",@EMPPRO_SLAB_ID = " + Convert.ToString(_obj_Smhr_Emppromotions.EMP_SLAB_ID) + "" +
                                        ",@EMPPRO_REPORTINGEMPLOYEE = " + Convert.ToInt32(_obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE) + "" +
                                        ",@EMPPRO_REPORTINGEMPLOYEE_ENDDATE = " + (_obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE_ENDDATE == null ? "null" : "'" + _obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE_ENDDATE + "'") +
                                        ",@EMMPRO_SHIFT_ID = " + Convert.ToString(_obj_Smhr_Emppromotions.EMMPRO_SHIFT_ID) + "" +
                                        ",@EMPPRO_SALALRYSTRUCT_ID =" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_SALALRYSTRUCT_ID) + "" +
                                        ",@EMPPRO_LEAVESTRUCT_ID=" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_LEAVESTRUCT_ID) + "" +
                                        ",@EMPPRO_GROSSSAL = " + Convert.ToDouble(_obj_Smhr_Emppromotions.EMPPRO_GROSSSAL) + "" +
                                        ",@EMPPRO_BASIC = " + Convert.ToString(Convert.ToDouble(_obj_Smhr_Emppromotions.EMPPRO_BASIC)) +
                                        ",@OLD_EMPPRO_DATEOFPROMOTION = '" + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_DATEOFPROMOTION) + "'" +
                                        ",@OLD_EMPPRO_DESIGNATION_ID = " + _obj_Smhr_Promotions_2.EMPPRO_DESIGNATION_ID + "" +
                                        ",@OLD_EMPPRO_GRADE = " + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_GRADE) + "" +
                                        ",@OLD_EMPPRO_SLAB_ID = " + Convert.ToString(_obj_Smhr_Promotions_2.EMP_SLAB_ID) + "" +
                                        ",@OLD_EMPPRO_REPORTINGEMPLOYEE = " + Convert.ToInt32(_obj_Smhr_Promotions_2.EMPPRO_REPORTINGEMPLOYEE) + "" +
                                        ",@OLD_EMPPRO_REPORTINGEMPLOYEE_ENDDATE = " + (_obj_Smhr_Promotions_2.EMPPRO_REPORTINGEMPLOYEE_ENDDATE == null ? "null" : "'" + _obj_Smhr_Promotions_2.EMPPRO_REPORTINGEMPLOYEE_ENDDATE + "'") +
                                        ",@OLD_EMMPRO_SHIFT_ID = " + Convert.ToString(_obj_Smhr_Promotions_2.EMMPRO_SHIFT_ID) + "" +
                                        ",@OLD_EMPPRO_SALALRYSTRUCT_ID =" + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_SALALRYSTRUCT_ID) + "" +
                                        ",@OLD_EMPPRO_LEAVESTRUCT_ID=" + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_LEAVESTRUCT_ID) + "" +
                                        ",@OLD_EMPPRO_GROSSSAL = " + Convert.ToDouble(_obj_Smhr_Promotions_2.EMPPRO_GROSSSAL) + "" +
                                        ",@OLD_EMPPRO_BASIC = " + Convert.ToString(Convert.ToDouble(_obj_Smhr_Promotions_2.EMPPRO_BASIC)) + "" +
                                        ",@EMP_ORGANISATION_ID='" + Convert.ToString(_obj_Smhr_Emppromotions.ORGANISATION_ID) + "'" +
                                        ",@EMMPRO_STATUS='" + Convert.ToInt32(_obj_Smhr_Promotions_2.EMPPRO_STATUS) + "'" +
                                        ",@OLD_EMPPRO_EMPLOYEETYPE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_EMPLOYEETYPE) + "'" +
                                        ",@EMPPRO_EMPLOYEETYPE='" + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_EMPLOYEETYPEN) + "'" +
                                        ",@OLD_EMPPRO_EMPCODE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_EMPCODE) + "'" +
                                        ",@EMPPRO_EMPCODE='" + Convert.ToString(_obj_Smhr_Promotions_2.EMPPRO_EMPCODEN) + "'" +
                                        ",@EMPPRO_SUPBUSINESSUNIT_ID='" + Convert.ToInt32(_obj_Smhr_Promotions_2.BUID) + "'" +
                                        ",@EMPPRO_ANNUALGROSSSALARY='" + _obj_Smhr_Promotions_2.EMPPRO_ANNUALGROSSSAL + "'" +
                                        ",@EMPPRO_ANNUALBASICSALARY='" + _obj_Smhr_Promotions_2.EMPPRO_ANNUALBASIC + "'" +
                                        ",@EMPPRO_INCREMENTTYPE_ID='" + _obj_Smhr_Emppromotions.EMPPRO_INCREMENTTYPE_ID + "'" +
                                        ",@EMPPRO_INCRMENTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_INCRMENTDATE) + "'" +
                                        ",@EMPRO_CONTRACT_STARTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_STARTDATE) + "'" +
                                        ",@EMPRO_CONTRACT_ENDDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_ENDDATE) + "'" +
                                        ",@EMPPRO_PERIOD=" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD +
                                        ",@OLD_EMPPRO_INCRMENTDATE='" + _obj_Smhr_Emppromotions.EMPPRO_INCRMENTDATE + "'" +
                                        ",@OLD_EMPRO_CONTRACT_STARTDATE='" + _obj_Smhr_Emppromotions.EMPPRO_CONTRACT_STARTDATE + "'" +
                                        ",@OLD_EMPRO_CONTRACT_ENDDATE='" + _obj_Smhr_Emppromotions.EMPPRO_CONTRACT_ENDDATE + "'" +
                                        ",@OLD_EMPPRO_PERIOD=" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD + "" +
                                        ",@EMPPRO_CREATEDBY=" + _obj_Smhr_Emppromotions.EMPPRO_CREATEDBY + "" +
                                        ",@EMPPRO_CREATEDDATE='" + _obj_Smhr_Emppromotions.EMPPRO_CREATEDDATE + "'" +
                                        ",@EMPPRO_LSTMDFBY=" + _obj_Smhr_Emppromotions.EMPPRO_LSTMDFBY + "" +
                                        ",@MP_LSTMDFDATE='" + _obj_Smhr_Emppromotions.MP_LSTMDFDATE + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation = ' Update'" +
                                        ",@EMPPRO_EMPID = " + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_EMPID) + "" +
                                        ",@EMPPRO_DATEOFPROMOTION = '" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_DATEOFPROMOTION) + "'" +
                                        ",@EMPPRO_DESIGNATION_ID = " + _obj_Smhr_Emppromotions.EMPPRO_DESIGNATION_ID + "" +
                                        ",@EMPPRO_GRADE = " + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_GRADE) + "" +
                                        ",@EMPPRO_REPORTINGEMPLOYEE = " + Convert.ToInt32(_obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE) + "" +
                                        ",@EMPPRO_REPORTINGEMPLOYEE_ENDDATE = '" + Convert.ToDateTime(_obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE_ENDDATE) + "'" +
                                        ",@EMMPRO_SHIFT_ID = " + Convert.ToString(_obj_Smhr_Emppromotions.EMMPRO_SHIFT_ID) + "" +
                                        ",@EMPPRO_SALALRYSTRUCT_ID =" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_SALALRYSTRUCT_ID) + "" +
                                        ",@EMPPRO_LEAVESTRUCT_ID=" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_LEAVESTRUCT_ID) + "" +
                                        ",@EMPPRO_GROSSSAL = '" + Convert.ToDouble(_obj_Smhr_Emppromotions.EMPPRO_GROSSSAL) + "'" +
                                        ",@EMPPRO_BASIC = " + Convert.ToDouble(_obj_Smhr_Emppromotions.EMPPRO_BASIC) +
                                        ",@EMPPRO_INCRMENTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_INCRMENTDATE) + "'" +
                                         ",@EMPRO_CONTRACT_STARTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_STARTDATE) + "'" +
                                        ",@EMPRO_CONTRACT_ENDDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_ENDDATE) + "'" +
                                        ",@EMPPRO_PERIOD=" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert_New:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPPROMOTION @Operation='Insert_New',@EMPPRO_EMPID='" + _obj_Smhr_Emppromotions.EMPPRO_EMPID +
                                        "',@EMPPRO_BUSINESSUNIT_ID='" + _obj_Smhr_Emppromotions.BUID +
                                        "',@EMMPRO_STATUS='" + _obj_Smhr_Emppromotions.EMPPRO_STATUS +
                                        "',@EMPPRO_BASIC='" + _obj_Smhr_Emppromotions.EMPPRO_BASIC +
                                        "',@EMPPRO_GROSSSAL='" + _obj_Smhr_Emppromotions.EMPPRO_GROSSSAL +
                                        "',@EMPPRO_LEAVESTRUCT_ID='" + _obj_Smhr_Emppromotions.EMPPRO_LEAVESTRUCT_ID +
                                        "',@EMPPRO_SALALRYSTRUCT_ID='" + _obj_Smhr_Emppromotions.EMPPRO_SALALRYSTRUCT_ID +
                                        "',@EMPPRO_REPORTINGEMPLOYEE_ENDDATE=" + (_obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE_ENDDATE == null ? "null" : "'" + _obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE_ENDDATE + "'") +
                                        ",@EMPPRO_REPORTINGEMPLOYEE='" + _obj_Smhr_Emppromotions.EMPPRO_REPORTINGEMPLOYEE +
                                        "',@EMPPRO_DATEOFPROMOTION='" + _obj_Smhr_Emppromotions.EMPPRO_DATEOFPROMOTION +
                                        "',@EMPPRO_ANNUALGROSSSALARY='" + _obj_Smhr_Emppromotions.EMPPRO_ANNUALGROSSSAL +
                                        "',@EMPPRO_ANNUALBASICSALARY='" + _obj_Smhr_Emppromotions.EMPPRO_ANNUALBASIC + "'" +
                                        ", @EMPPRO_SLAB_ID = " + _obj_Smhr_Emppromotions.EMP_SLAB_ID +
                                        ", @OLD_EMPPRO_SLAB_ID = " + _obj_Smhr_Promotions_2.EMP_SLAB_ID +
                                        ", @EMPPRO_INCREMENTTYPE_ID=" + _obj_Smhr_Emppromotions.EMPPRO_INCREMENTTYPE_ID +
                                        ",@@EMPPRO_INCRMENTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_INCRMENTDATE) + "'" +
                                        ",@EMPRO_CONTRACT_STARTDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_STARTDATE) + "'" +
                                        ",@EMPRO_CONTRACT_ENDDATE='" + Convert.ToString(_obj_Smhr_Emppromotions.EMPPRO_CONTRACT_ENDDATE) + "'" +
                                        ",@EMPPRO_PERIOD=" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC JOB_SMHR_EMP_PROMOTION @STATUS = '" + Convert.ToInt32(_obj_Smhr_Promotions_2.EMPPRO_STATUS) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.CHECKSLABPERIODS:

                    DataTable dtData = ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE @OPERATION = 'CHECKSLABPERIODS',@EMPLOYEEGRADE_ORGANISATION_ID='" +
                                                    _obj_Smhr_Emppromotions.ORGANISATION_ID +
                                                    "',@EMPLOYEEGRADE_ID='" + _obj_Smhr_Emppromotions.EMPPRO_GRADE +
                                                    "',@VALIDATEPERIOD='" + _obj_Smhr_Emppromotions.VALIDATEPERIOD + "'");
                    if (dtData.Rows.Count > 0)
                    {
                        if (dtData.Rows[0][0].ToString() == "0")
                            status = false;
                        else
                            status = true;
                    }
                    else
                        return status = false;
                    break;
                case operation.Check:

                    DataTable dt = ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @OPERATION = 'Check PayRoll',@EMPPRO_EMPID='" + _obj_Smhr_Emppromotions.EMPPRO_EMPID +
                        "',@ORGANISATION_ID='" + _obj_Smhr_Emppromotions.ORGANISATION_ID + "',@EMPPRO_PERIOD='" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD +
                        "',@EXEC_DATE = '" + Convert.ToDateTime(_obj_Smhr_Emppromotions.EMPPRO_DATEOFPROMOTION) + "'");
                    if (dt.Rows.Count > 0)
                    {
                        if (dt.Rows[0][0].ToString() == "0")
                            status = false;
                        else
                            status = true;
                    }

                    break;
                case operation.Check1:
                    DataTable dtcheck = ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @OPERATION = 'CheckPayRollRollBack',@EMPPRO_EMPID='" + _obj_Smhr_Emppromotions.EMPPRO_EMPID +
                        "',@ORGANISATION_ID='" + _obj_Smhr_Emppromotions.ORGANISATION_ID + "',@EMPPRO_PERIOD='" + _obj_Smhr_Emppromotions.EMPPRO_PERIOD +
                        "',@EXEC_DATE = '" + Convert.ToDateTime(_obj_Smhr_Emppromotions.EMPPRO_DATEOFPROMOTION) + "'");
                    if (dtcheck.Rows.Count > 0)
                    {
                        if (dtcheck.Rows[0][0].ToString() == "0")
                            status = false;
                        else
                            status = true;
                    }

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        # region SMHR_EMPNODUE

        ///// <summary>
        ///// Method to get the EmpPromotions Details. 
        ///// </summary>
        ///// <returns>DataTable</returns>
        ///// <remarks>
        /////  Author             : MKD 
        /////  Created on         : 2009-08-31
        /////  Last Modified on   : N/A
        /////  Last Modfied by    : N/A
        ///// </remarks>
        ///// 
        public static DataTable get_EmpNoDue(SMHR_EMPNODUE _obj_Smhr_EmpNoDue)
        {
            if (_obj_Smhr_EmpNoDue.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPNODUE @Operation = 'Empty', @EMPNODUE_EMP_ID = '" + _obj_Smhr_EmpNoDue.EMPNODUE_EMP_ID + "',@ORGANISATION_ID='" + _obj_Smhr_EmpNoDue.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPNODUE @Operation = 'Edit', @EMPNODUE_EMP_ID = '" + _obj_Smhr_EmpNoDue.EMPNODUE_EMP_ID + "',@ORGANISATION_ID='" + _obj_Smhr_EmpNoDue.ORGANISATION_ID + "'");

            }
        }

        public static string set_EmpNoDue(SMHR_EMPNODUE _obj_Smhr_EmpNoDue, SMHR_EMPASSETDOC _obj_smhr_empAssetDoc)
        {
            string StrQuery = string.Empty;
            switch (_obj_Smhr_EmpNoDue.OPERATION)
            {
                case operation.Insert:
                    StrQuery = " EXEC USP_SMHR_EMPNODUE @Operation = 'Insert'" +
                               ",@EMPNODUE_EMP_ID = '" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_EMP_ID) + "'" +
                               ",@EMPNODUE_HR_MASTER_ID = '" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_HR_MASTER_ID) + "'" +
                               ",@EMPNODUE_STATUS = '" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_STATUS) + "'" +
                               ",@EMPNODUE_REMARKS = '" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_REMARKS) + "'" +
                               ",@EMPNODUE_CREATEDBY = '" + Convert.ToInt32(_obj_Smhr_EmpNoDue.EMPNODUE_CREATEDBY) + "'" +
                               ",@EMPNODUE_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_EmpNoDue.EMPNODUE_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                               ",@EMPNODUE_LASTMDFBY = '" + Convert.ToInt32(_obj_Smhr_EmpNoDue.EMPNODUE_LASTMDFBY) + "'" +
                               ",@EMPNODUE_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_EmpNoDue.EMPNODUE_LASTMDFDATE).ToString("MM/dd/yyyy") + "'";
                    break;
                case operation.Update:
                    //StrQuery = " EXEC USP_SMHR_EMPNODUE @Operation = ' Update'" +
                    //                  ",@EMPNODUE_ID = " + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_ID) + "" +
                    //                  ",@EMPNODUE_EMP_ID = '" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_EMP_ID) + "'" +
                    //                  ",@EMPNODUE_HR_MASTER_ID = " + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_HR_MASTER_ID) + "" +
                    //                  ",@EMPNODUE_STATUS = " + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_STATUS) + "" +
                    //                  ",@EMPNODUE_REMARKS = '" + Convert.ToInt32(_obj_Smhr_EmpNoDue.EMPNODUE_REMARKS) + "'" +
                    //                  ",@EMPNODUE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_LASTMDFBY) + "" +
                    //                  ",@EMPNODUE_LASTMDFDATE='" + Convert.ToString(_obj_Smhr_EmpNoDue.EMPNODUE_LASTMDFDATE) + "'  ";

                    StrQuery = "  EXEC USP_SMHR_EMPASSETDOC @Operation = 'Update'" +
                               ", @EMPASSETDOC_EMP_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_EMP_ID) + "'" +
                               ", @EMPASSETDOC_TYPE = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_TYPE) + "'" +
                               ", @EMPASSETDOC_SERIAL = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_SERIAL) + "'" +
                               ", @EMPASSETDOC_CODE = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_CODE) + "'" +
                               ", @EMPASSETDOC_NAME = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMPASSETDOC_NAME) + "'" +
                               ", @EMP_ASSETDOC_AD_Type = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_AD_Type) + "'" +
                               ", @EMP_ASSETDOC_RETURNABLE = '" + Convert.ToBoolean(_obj_smhr_empAssetDoc.EMP_ASSETDOC_RETURNABLE) + "'" +
                               ", @EMP_ASSETDOC_REMARKS = '" + Convert.ToString(_obj_smhr_empAssetDoc.EMP_ASSETDOC_REMARKS) + "'" +
                               ", @EMPASSETDOC_ID = '" + Convert.ToInt32(_obj_smhr_empAssetDoc.EMPASSETDOC_ID) + "'";

                    break;
                default:
                    break;
            }
            return StrQuery;
        }

        #endregion

        #region EMPLOYEE_RELIEVING

        public static DataTable get_EmpReliving(string strQry, string empID, int org_id, int user_id)
        {
            if (empID == string.Empty)
                return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation = 'SELECT',@ORGANISATION_ID=" + org_id);
            else if (empID == "-1")
                return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation = 'grid',@ORGANISATION_ID=" + org_id + ",@EMP_LOGIN_ID =" + user_id);
            else
                return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation = 'SELECT',@EMP_ID='" + empID + "',@ORGANISATION_ID='" + org_id + "'");
        }

        public static DataTable get_EmpReliving_Edit(string strQry, string empID, int org_id)
        {
            if (strQry == "Get")
                return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation = 'Get',@EMP_ID='" + empID + "',@ORGANISATION_ID='" + org_id + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation = 'Select1',@ORGANISATION_ID='" + org_id + "'");
        }

        public static DataTable get_Reportees(SMHR_EMPLOYEE _obj_Smhr_Employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPRELIVING @Operation='Select_Emp',@EMP_ID='" + _obj_Smhr_Employee.EMP_ID + "',@ORGANISATION_ID='" + _obj_Smhr_Employee.ORGANISATION_ID + "'");
        }

        public static bool set_EmpReliving(SMHR_EMPLOYEE _obj_Smhr_Employee, string strQry, int org_id)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_EMPRELIVING @Operation = '" + _obj_Smhr_Employee.OPERATION +
                                "', @EMP_ID=" + _obj_Smhr_Employee.EMP_ID +
                                " , @EMP_RELDATE='" + Convert.ToDateTime(_obj_Smhr_Employee.EMP_RELDATE).ToString("MM/dd/yyyy") +
                                "', @EMP_STATUS = " + Convert.ToInt32(_obj_Smhr_Employee.EMP_STATUS) +
                                ",  @EMP_LASTMDFBY=" + _obj_Smhr_Employee.EMP_LASTMDFBY +
                                ",  @EMP_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_Employee.EMP_LASTMDFDATE).ToString("MM/dd/yyyy") +
                                "', @QUERY='" + BLL.ReplaceQuote(strQry) +
                                "',@ORGANISATION_ID='" + Convert.ToInt32(org_id) + "'"))
                status = true;
            else
                status = false;

            return status;
        }

        public static DataTable get_EmpTask(SMHR_EMPLOYEE _obj_Smhr_Employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation='Empty1',@EMP_CODE='" + _obj_Smhr_Employee.EMP_EMPCODE + "',@PROJEMPLOYEE_ORGANISATION_ID='" + _obj_Smhr_Employee.ORGANISATION_ID + "'");
        }

        #endregion

        #region SMHR_PAYTRAN

        public static DataTable get_PayBusinessUnit(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Empty', @EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "', @EMP_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "',@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Check1', " +
                                    " @EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                    ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                    ",@EMP_DOJ = '" + _obj_smhr_employee.EMP_DOJ + "'" +
                                    ",@EMP_RELDATE = '" + _obj_smhr_employee.EMP_RELDATE + "'" +
                                    ",@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                    ",@EMP_PRDDTL_ID='" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Check', " +
                                    " @EMP_SALALRYSTRUCT_ID = '" + _obj_smhr_employee.EMP_SALALRYSTRUCT_ID + "'" +
                                    ",@EMP_BUSINESSUNIT_ID = '" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                    ",@EMP_ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_payrolltrans(SMHR_PAYROLL _obj_smhr_payroll)
        {
            if (_obj_smhr_payroll.MODE == 28)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = '28', @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 8)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = '" + _obj_smhr_payroll.MODE + "'" +
                                    ", @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ", @EMPSALDTLS_SALSTRUCT_ID = '" + _obj_smhr_payroll.EMP_SALSTRUCT + "'" +
                                    ", @BUID = '" + _obj_smhr_payroll.BUID + "'" +
                                    ",@ORGID='" + _obj_smhr_payroll.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = '" + _obj_smhr_payroll.MODE + "'" +
                                    ", @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ", @EMPSALDTLS_SALSTRUCT_ID = '" + _obj_smhr_payroll.EMP_SALSTRUCT + "'" +
                                    ", @BUID = '" + _obj_smhr_payroll.BUID + "'" +
                                    ",@ORGID='" + _obj_smhr_payroll.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_Quickpayrolltrans(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = '" + _obj_smhr_payroll.MODE + "'" +
                                ", @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                ", @EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'" +
                                ", @STDT = '" + _obj_smhr_payroll.STARTDATE + "'" +
                                ", @ENDDT = '" + _obj_smhr_payroll.ENDDATE + "'");
        }

        public static bool set_payrolltrans(SMHR_EMPLOYEE _obj_smhr_employee, string localisation)
        {
            try
            {
                if (_obj_smhr_employee.EMPSALDTLS_STRUCT.ToString() == string.Empty)
                {
                    if (localisation.ToUpper() == "INDIA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_INDIA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else if (localisation.ToUpper() == "KENYA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_KENYA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'" +
                                               ",@MDFY_BY = " + _obj_smhr_employee.CREATEDBY);
                    }
                    else if (localisation.ToUpper() == "PNG")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_PNG @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else if (localisation.ToUpper() == "AUSTRALIA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_AUS @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_INDIA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                }
                else
                {
                    if (localisation.ToUpper() == "INDIA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_INDIA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STRUCT = '" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else if (localisation.ToUpper() == "KENYA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_KENYA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STRUCT = '" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'" +
                                               ",@MDFY_BY = " + _obj_smhr_employee.CREATEDBY);
                    }
                    else if (localisation.ToUpper() == "PNG")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_PNG @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STRUCT = '" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else if (localisation.ToUpper() == "AUSTRALIA")
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_DhanushAUSTRALIA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STRUCT = '" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                    else
                    {
                        return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLTRANSACTION_INDIA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                               ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                               ",@EMPSALDTLS_STRUCT = '" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                               ",@EMPSALDTLS_STR ='" + _obj_smhr_employee.EMPSALDTLS_STR + "'" +
                                               ",@EMPSALDTLS_ID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                               ",@EMPSALDTLS_DATE = '" + Convert.ToDateTime(_obj_smhr_employee.EMPSALDTLS_DATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@BUS_ID = '" + Convert.ToInt32(_obj_smhr_employee.EMP_BUSINESSUNIT_ID) + "'" +
                                               ",@ORG_ID = '" + Convert.ToInt32(_obj_smhr_employee.ORGANISATION_ID) + "'");
                    }
                }
            }
            catch (Exception ex)
            {
                if (ex.Message.Contains("FAILEDTRANS"))
                {
                    throw new Exception("NO EMPLOYEES TO RUN PAYROLL");
                }
                else if (ex.Message.Contains("NOATTENDS"))
                {
                    throw new Exception("NOATTENDS");
                }
                else if (ex.Message.Contains("NOMAPPING"))
                {
                    throw new Exception("NOMAPPING");
                }
                else if (ex.Message.Contains("ALREADYEXIST"))
                {
                    throw new Exception("ALREADYEXIST");
                }
                else
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
        }

        //Methods to do Quick PayRoll Trans
        public static bool set_quickpayrolltrans(SMHR_EMPLOYEE _obj_smhr_employee, string localisation)
        {
            try
            {
                if (localisation.ToUpper() == "INDIA")
                {
                    return ExecuteNonQuery(" EXEC USP_SMHR_QUICKPAY @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                           ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                           ",@EMPDAYS = " + _obj_smhr_employee.days + "" +
                                           ",@EMPSALDTLS_EMPID =" + _obj_smhr_employee.EMP_ID + "" +
                                           ",@EMPSALDTLS_STRUCT ='" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                           ",@USERID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                           ",@PAYDATE = '" + _obj_smhr_employee.EMPSALDTLS_DATE + "'" +
                                           ",@ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                           ",@PAYSTDT = '" + _obj_smhr_employee.EMPSALDTLS_FRMDT + "'" +
                                           ",@PAYENDDT = '" + _obj_smhr_employee.EMPSALDTLS_ENDDT + "'" +
                                           ",@BUS_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
                }
                else if (localisation.ToUpper() == "KENYA")
                {
                    return ExecuteNonQuery(" EXEC USP_SMHR_QUICKPAY_KENYA @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                           ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                           ",@EMPDAYS = " + _obj_smhr_employee.days + "" +
                                           ",@EMPSALDTLS_EMPID =" + _obj_smhr_employee.EMP_ID + "" +
                                           ",@EMPSALDTLS_STRUCT ='" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                           ",@USERID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                           ",@PAYDATE = '" + _obj_smhr_employee.EMPSALDTLS_DATE + "'" +
                                           ",@ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                           ",@PAYSTDT = '" + _obj_smhr_employee.EMPSALDTLS_FRMDT + "'" +
                                           ",@PAYENDDT = '" + _obj_smhr_employee.EMPSALDTLS_ENDDT + "'" +
                                           ",@BUS_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'" +
                                           ",@MDFY_BY = " + _obj_smhr_employee.CREATEDBY);
                }
                else if (localisation.ToUpper() == "AUSTRALIA")
                {
                    return ExecuteNonQuery(" EXEC USP_SMHR_QUICKPAY_AUS @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                           ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                           ",@EMPDAYS = " + _obj_smhr_employee.days + "" +
                                           ",@EMPSALDTLS_EMPID =" + _obj_smhr_employee.EMP_ID + "" +
                                           ",@EMPSALDTLS_STRUCT ='" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                           ",@USERID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                           ",@PAYDATE = '" + _obj_smhr_employee.EMPSALDTLS_DATE + "'" +
                                           ",@ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                           ",@PAYSTDT = '" + _obj_smhr_employee.EMPSALDTLS_FRMDT + "'" +
                                           ",@PAYENDDT = '" + _obj_smhr_employee.EMPSALDTLS_ENDDT + "'" +
                                           ",@BUS_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
                }
                else
                {
                    return ExecuteNonQuery(" EXEC USP_SMHR_QUICKPAY @EMPSALDTLS_PERIOD_ID = '" + _obj_smhr_employee.EMPSALDTLS_PERIOD_ID + "'" +
                                           ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_smhr_employee.EMPSALDTLS_PRDDTL_ID + "'" +
                                           ",@EMPDAYS = " + _obj_smhr_employee.days + "" +
                                           ",@EMPSALDTLS_EMPID =" + _obj_smhr_employee.EMP_ID + "" +
                                           ",@EMPSALDTLS_STRUCT ='" + _obj_smhr_employee.EMPSALDTLS_STRUCT + "'" +
                                           ",@USERID = '" + _obj_smhr_employee.EMPSALDTLS_ID + "'" +
                                           ",@PAYDATE = '" + _obj_smhr_employee.EMPSALDTLS_DATE + "'" +
                                           ",@ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'" +
                                           ",@PAYSTDT = '" + _obj_smhr_employee.EMPSALDTLS_FRMDT + "'" +
                                           ",@PAYENDDT = '" + _obj_smhr_employee.EMPSALDTLS_ENDDT + "'" +
                                           ",@BUS_ID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'");
                }
            }
            catch (Exception ex)
            {
                if (ex.Message.Contains("FAILEDTRANS"))
                {
                    throw new Exception("NO EMPLOYEES TO RUN PAYROLL");
                }
                else if (ex.Message.Contains("NOATTENDS"))
                {
                    throw new Exception("NOATTENDS");
                }
                else
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
        }

        #endregion

        #region SMHR_PAYROLL

        public static DataTable get_Payroll(SMHR_PAYROLL _obj_smhr_payroll)
        {
            if (_obj_smhr_payroll.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 1,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 2,@TRANID = '" + _obj_smhr_payroll.TRANID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 3,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID='" + _obj_smhr_payroll.BUID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 19)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 19,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'");
            }
            else if (_obj_smhr_payroll.MODE == 29)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 29,@PERODID = '" + _obj_smhr_payroll.PERODID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 20,@PERODID = '" + _obj_smhr_payroll.PERODID + "'");
            }
        }

        public static bool set_Payroll_Main(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 4, @TRANID = '" + _obj_smhr_payroll.TRANID + "'" +
                                   ",@EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'" +
                                   ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'");
        }

        public static bool set_Payroll(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteNonQuery(" EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 5, @TRANID = '" + _obj_smhr_payroll.TRANID + "'" +
                                   ",@EMPDATA = '" + _obj_smhr_payroll.EMPDATA + "', @EMP_ID = " + _obj_smhr_payroll.EMP_ID + "" +
                                   ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'" +
                                   ",@PERODID = '" + _obj_smhr_payroll.PERODID + "'");
        }

        public static DataTable get_PayApproval(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 9,@TRANID = '" + _obj_smhr_payroll.TRANID + "'");
        }

        public static DataTable get_PayDetails(SMHR_PAYROLL _obj_smhr_payroll)
        {
            if (_obj_smhr_payroll.MODE == 10)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 10, @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "', @BUID = '" + _obj_smhr_payroll.BUID + "',@TRANID='" + _obj_smhr_payroll.TRANID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 12)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 12, @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "', @BUID = '" + _obj_smhr_payroll.BUID + "',@TRANID='" + _obj_smhr_payroll.TRANID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 13)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 13, @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "', @BUID = '" + _obj_smhr_payroll.BUID + "',@TRANID='" + _obj_smhr_payroll.TRANID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 18)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 18, @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "', @BUID = '" + _obj_smhr_payroll.BUID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 22)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 22,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 23)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 23,@TRANID = '" + _obj_smhr_payroll.TRANID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 30)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 30,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 31)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 31,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 32)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 32,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "',@PERODID='" + _obj_smhr_payroll.PERODID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 33)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 33,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "',@PERODID='" + _obj_smhr_payroll.PERODID + "',@EMP_ID='" + _obj_smhr_payroll.EMP_ID + "',@ORGID='" + _obj_smhr_payroll.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 34)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 34,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "',@PERODID='" + _obj_smhr_payroll.PERODID + "',@EMP_ID='" + _obj_smhr_payroll.EMP_ID + "',@ORGID='" + _obj_smhr_payroll.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 35)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 35,@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "',@BUID ='" + _obj_smhr_payroll.BUID + "',@PERODID='" + _obj_smhr_payroll.PERODID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 25, @PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "', @BUID = '" + _obj_smhr_payroll.BUID + "'");
            }
        }

        public static DataTable get_SalDetails(SMHR_PAYROLL _obj_smhr_payroll)
        {
            if (_obj_smhr_payroll.MODE == 14)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 14" +
                                    ",@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'" +
                                    ",@TRANID = '" + _obj_smhr_payroll.TRANID + "'" +
                                    ",@EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 15)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 15" +
                                    ",@EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'");
            }
            else if (_obj_smhr_payroll.MODE == 24)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 24" +
                                    ",@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'" +
                                    ",@TRANID = '" + _obj_smhr_payroll.TRANID + "'" +
                                    ",@EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLAPPROVAL @MODE = 21" +
                                    ",@PERIODDTLID = '" + _obj_smhr_payroll.PERIODDTLID + "'" +
                                    ",@STATUS = '" + _obj_smhr_payroll.STATUS + "'" +
                                    ",@TRANID = '" + _obj_smhr_payroll.TRANID + "'" +
                                    ",@EMP_ID = '" + _obj_smhr_payroll.EMP_ID + "'");
            }
        }

        #endregion

        #region SMHR_APPROVAL

        public static bool set_PayrollReject(SMHR_PAYROLL _obj_smhr_payroll)
        {
            ////return ExecuteNonQuery(" EXEC USP_PAYTRAN_REJECT @TRANID = '" + _obj_smhr_payroll.TRANID + "'," +
            ////            " @EMPDATA = '" + Convert.ToString(_obj_smhr_payroll.EMPDATA) + "', @MODE = " + _obj_smhr_payroll.MODE + "");
            return ExecuteNonQuery(" EXEC USP_PAYTRAN_REJECT @TRANID = '" + _obj_smhr_payroll.TRANID + "'," +
                                   " @EMPDATA = '" + Convert.ToString(_obj_smhr_payroll.EMPDATA) + "', @MODE = " + _obj_smhr_payroll.MODE + "" +
                                   ",@PERODID = '" + _obj_smhr_payroll.PERODID +"'"+
                                   ",@PAYTRAN_LASTMDFBY = '" + _obj_smhr_payroll.LASTMDFBY +"'");
        }

        public static bool set_PayrollReject_complete(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteNonQuery(" EXEC USP_PAYTRAN_REJECT @TRANID = '" + _obj_smhr_payroll.TRANID + "'," +
                                   " @MODE = " + _obj_smhr_payroll.MODE + "");
        }

        #endregion

        #region SMHR_EXPENSE_NEW

        public static DataTable get_Expense(SMHR_EXPENSE _obj_smhr_expense)
        {
            if (_obj_smhr_expense.OPERATION == operation.Select)
            {
                if (_obj_smhr_expense.EXPENSE_ID.ToString() == "0")
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EXPENSE @Operation = 'select',@ORGANISATION_ID = '" + _obj_smhr_expense.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery(" EXEC USP_SMHR_EXPENSE @Operation = 'select', @EXPENSE_ID = '" + _obj_smhr_expense.EXPENSE_ID + "' ");
                }
            }
            else if (_obj_smhr_expense.OPERATION == operation.Check_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENSE_NEW @operation='Check_New',@EXPENSE_STATUS='" + _obj_smhr_expense.EXPENSE_STATUS + "',@EXPENSE_APPROVEDBY='" + _obj_smhr_expense.EXPENSE_APPROVEDBY + "'");
            }
            else if (_obj_smhr_expense.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENSE_NEW @operation='Select_New',@EMP_ID='" + _obj_smhr_expense.EMP_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EXPENSE @Operation = 'check', @EMP_REPORTINGEMPLOYEE='" + _obj_smhr_expense.EXPENSE_EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_expense.ORGANISATION_ID + "'");
            }
        }

        public static bool set_Expense(SMHR_EXPENSE _obj_smhr_expense)
        {
            bool status = false;
            switch (_obj_smhr_expense.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EXPENSE @Operation='Insert', @EXPENSE_EMP_ID= " + _obj_smhr_expense.EXPENSE_EMP_ID +
                                        ",  @EXPENSE_BUSINESSUNIT_ID = '" + _obj_smhr_expense.BUSINESSUNIT_ID +
                                        "' , @EXPENSE_APPDATE='" + Convert.ToDateTime(_obj_smhr_expense.EXPENSE_APPDATE).ToString("MM/dd/yyyy") +
                                        "', @EXPENSE_NAME='" + _obj_smhr_expense.EXPENSE_NAME +
                                        "', @EXPENSE_CREATEDBY=" + _obj_smhr_expense.CREATEDBY +
                                        " , @EXPENSE_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_expense.CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "', @EXPENSE_LASTMDFBY = " + _obj_smhr_expense.LASTMDFBY +
                                        " , @EXPENSE_LASTMDFDATE='" + Convert.ToDateTime(_obj_smhr_expense.LASTMDFDATE).ToString("MM/dd/yyyy") +
                                        "', @QUERY='" + _obj_smhr_expense.QUERY + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:

                    if (_obj_smhr_expense.QUERY != null)
                    {
                        if (ExecuteNonQuery("EXEC USP_SMHR_EXPENSE @Operation='Update',@EXPENSE_ID =" + _obj_smhr_expense.EXPENSE_ID +
                                            " , @EXPENSE_EMP_ID= " + _obj_smhr_expense.EXPENSE_EMP_ID +
                                            " , @EXPENSE_APPDATE='" + Convert.ToDateTime(_obj_smhr_expense.EXPENSE_APPDATE).ToString("MM/dd/yyyy") +
                                            "', @EXPENSE_LASTMDFBY = " + _obj_smhr_expense.LASTMDFBY +
                                            " , @EXPENSE_LASTMDFDATE='" + Convert.ToDateTime(_obj_smhr_expense.LASTMDFDATE).ToString("MM/dd/yyyy") +
                                            "', @QUERY='" + _obj_smhr_expense.QUERY + "'"))
                            status = true;
                        else
                            status = false;
                    }
                    else
                    {
                        return ExecuteNonQuery("EXEC USP_SMHR_EXPENSE @Operation = 'Update'" +
                                               ",@EXPENSE_APPROVEDBY = '" + _obj_smhr_expense.EXPENSE_APPROVEDBY + "'" +
                                               ",@EXPENSE_APPROVEDDATE = '" + Convert.ToDateTime(_obj_smhr_expense.EXPENSE_APPROVEDDATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@EXPENSE_STATUS = '" + _obj_smhr_expense.EXPENSE_STATUS + "'" +
                                               ",@EXPENSE_LASTMDFBY = '" + _obj_smhr_expense.LASTMDFBY + "'" +
                                               ",@EXPENSE_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_expense.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                               ",@EXPENSE_NAME = '" + Convert.ToInt32(_obj_smhr_expense.EXPENSE_NAME) + "'" +
                                               ",@EXPDTL_ID='" + _obj_smhr_expense.EXPDTL_ID + "'");
                    }
                    break;
                case operation.Chk:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EXPENSE @Operation = 'Chk'" +
                                        ",@EXPENSE_APPROVEDBY = '" + _obj_smhr_expense.EXPENSE_APPROVEDBY + "'" +
                                        ",@EXPENSE_APPROVEDDATE = '" + Convert.ToDateTime(_obj_smhr_expense.EXPENSE_APPROVEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EXPENSE_STATUS = '" + _obj_smhr_expense.EXPENSE_STATUS + "'" +
                                        ",@EXPENSE_LASTMDFBY = '" + _obj_smhr_expense.LASTMDFBY + "'" +
                                        ",@EXPENSE_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_expense.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EXPENSE_NAME = '" + Convert.ToInt32(_obj_smhr_expense.EXPENSE_NAME) + "'" +
                                        ",@EXPDTL_ID='" + _obj_smhr_expense.EXPDTL_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }

            return status;
        }

        public static DataTable get_ExpenseDetails(SMHR_EXPENSEDETAIL _obj_Smhr_ExpenseDetail)
        {
            if (_obj_Smhr_ExpenseDetail.EXPENSEDTL_EXPENSE_ID.ToString() == "0")
            {
                return ExecuteQuery(" EXEC USP_SMHR_EXPENSEDETAIL @Operation = 'select'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_EXPENSEDETAIL @Operation = 'select', @EXPENSEDTL_EXPENSE_ID = '" + _obj_Smhr_ExpenseDetail.EXPENSEDTL_EXPENSE_ID + "' ");
            }
        }

        public static string set_ExpenseDetail(SMHR_EXPENSEDETAIL _obj_Smhr_ExpenseDetail)
        {
            string strQuery = string.Empty;
            switch (_obj_Smhr_ExpenseDetail.OPERATION)
            {
                case operation.Insert:
                    strQuery = "\n  EXEC USP_SMHR_EXPENSEDETAIL @Operation = 'Insert'" +
                               ",@EXPENSEDTL_EXPENSE_ID = @TEMP" +
                               ",@EXPENSEDTL_TYPE_ID = " + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_TYPE_ID) + "" +
                               ",@EXPENSEDTL_EXPENSEDATE = '" + Convert.ToDateTime(_obj_Smhr_ExpenseDetail.EXPENSEDTL_EXPENSEDATE).ToString("MM/dd/yyyy") + "'" +
                               ",@EXPENSEDTL_AMOUNT = " + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_AMOUNT) + "" +
                               ",@EXPENSEDTL_CURRID = " + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_CURRID) + "" +
                               ",@EXPENSEDTL_DESC = '" + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_DESC) + "'" +
                               ",@EXPENSEDTL_ATTACHMENT = '" + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_ATTACHMENT) + "'" +
                               ",@EXPENSEDTL_CREATEDBY = " + Convert.ToString(_obj_Smhr_ExpenseDetail.CREATEDBY) + "" +
                               ",@EXPENSEDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_ExpenseDetail.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                               ",@EXPENSEDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_ExpenseDetail.LASTMDFBY) + "" +
                               ",@EXPENSEDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_ExpenseDetail.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                               ",@EXPENSEDTL_STATUS='" + _obj_Smhr_ExpenseDetail.EXPENSEDTL_STATUS + "'";

                    break;
                case operation.Update:
                    strQuery = "\n EXEC USP_SMHR_EXPENSEDETAIL @Operation = 'Update'" +
                               ",@EXPENSEDTL_ID=" + _obj_Smhr_ExpenseDetail.EXPENSEDTL_ID +
                               ",@EXPENSEDTL_EXPENSE_ID = " + _obj_Smhr_ExpenseDetail.EXPENSEDTL_EXPENSE_ID +
                               ",@EXPENSEDTL_TYPE_ID = " + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_TYPE_ID) + "" +
                               ",@EXPENSEDTL_EXPENSEDATE = '" + Convert.ToDateTime(_obj_Smhr_ExpenseDetail.EXPENSEDTL_EXPENSEDATE).ToString("MM/dd/yyyy") + "'" +
                               ",@EXPENSEDTL_AMOUNT = '" + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_AMOUNT) + "'" +
                               ",@EXPENSEDTL_CURRID = " + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_CURRID) + "" +
                               ",@EXPENSEDTL_DESC = '" + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_DESC) + "'" +
                               ",@EXPENSEDTL_ATTACHMENT = '" + Convert.ToString(_obj_Smhr_ExpenseDetail.EXPENSEDTL_ATTACHMENT) + "'" +
                               ",@EXPENSEDTL_LASTMDFBY = " + Convert.ToString(_obj_Smhr_ExpenseDetail.LASTMDFBY) + "" +
                               ",@EXPENSEDTL_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Smhr_ExpenseDetail.LASTMDFDATE).ToString("MM/dd/yyyy") + "'";

                    break;
                default:
                    break;
            }
            return strQuery;
        }

        #endregion

        #region SMHR_IDENTIFICATION

        public static DataTable get_Identification(SMHR_EMPBNKDTLS _obj_smhr_empbnkdtls)
        {
            if (_obj_smhr_empbnkdtls.EMPBNKDTLS_ID.ToString() == "0")
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'select',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID +
                                    "',@EMP_LOGIN_ID='" + _obj_smhr_empbnkdtls.LOGIN_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'select',@EMPBNKDTLS_ID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_ID + "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_BankDetCheck(SMHR_EMPBNKDTLS _obj_smhr_empbnkdtls)
        {
            if (_obj_smhr_empbnkdtls.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'Check'," +
                                    "@EMPBNKDTLS_ID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_ID + "'," +
                                    "@EMPBNKDTLS_EMPID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID +
                                    "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_empbnkdtls.OPERATION == operation.Select_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'Select_Self'," +
                                    "@EMPBNKDTLS_EMPID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID +
                                    "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_empbnkdtls.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'Validate'," +
                                    "@EMPBNKDTLS_ID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_ID + "'," +
                                    "@EMPBNKDTLS_EMPID = '" + _obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID +
                                    "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "',@BUSUNTBANK_ACCOUNTNO='" + _obj_smhr_empbnkdtls.BUSUNTBANK_ACCOUNTNO + "'");
            }
            else if (_obj_smhr_empbnkdtls.OPERATION == operation.Validate1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'Validate1',@EMPBNKDTLS_EMPID ='" + _obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID +
                                    "',@BUSUNTBANK_SWIFT='" + _obj_smhr_empbnkdtls.BUSUNTBANK_SWIFT + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPBANKDTLS @Operation = 'Empty'," +
                                    " @BUSUNTBANK_ACCOUNTNO = '" + _obj_smhr_empbnkdtls.BUSUNTBANK_ACCOUNTNO +
                                    "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'");
            }
        }

        public static bool set_Identification(SMHR_EMPBNKDTLS _obj_smhr_empbnkdtls)
        {
            bool status = false;
            switch (_obj_smhr_empbnkdtls.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPBANKDTLS @Operation = '" + _obj_smhr_empbnkdtls.OPERATION + "'" +
                                        ",@EMPBNKDTLS_EMPID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID) + "'" +
                                        ",@BUSUNTBANK_BANKID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNITBANK_BANKID) + "'" +
                                        ",@BUSUNTBANK_BRANCHID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNITBANK_BRANCHID) + "'" +
                                        ",@BUSUNTBANK_ACCOUNTNO = '" + Convert.ToString(_obj_smhr_empbnkdtls.BUSUNTBANK_ACCOUNTNO).Replace("'", "''") + "'" +
                                        ",@BUSUNTBANK_SWIFT = '" + Convert.ToString(_obj_smhr_empbnkdtls.BUSUNTBANK_SWIFT) + "'" +
                                        ",@BUSUNTBANK_ISACTIVE = '" + Convert.ToBoolean(_obj_smhr_empbnkdtls.BUSUNTBANK_ISACTIVE) + "'" +
                                        ",@BUSUNTBANK_ISDEFAULT = '" + Convert.ToBoolean(_obj_smhr_empbnkdtls.BUSUNTBANK_ISDEFAULT) + "'" +
                                        ",@BUSUNTBANK_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNTBANK_CREATEDBY) + "'" +
                                        ",@BUSUNTBANK_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_empbnkdtls.BUSUNTBANK_CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPBANKDTLS @Operation = '" + _obj_smhr_empbnkdtls.OPERATION + "'" +
                                        ",@EMPBNKDTLS_EMPID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.EMPBNKDTLS_EMPID) + "'" +
                                        ",@BUSUNTBANK_BANKID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNITBANK_BANKID) + "'" +
                                        ",@BUSUNTBANK_BRANCHID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNITBANK_BRANCHID) + "'" +
                                        ",@BUSUNTBANK_ACCOUNTNO = '" + Convert.ToString(_obj_smhr_empbnkdtls.BUSUNTBANK_ACCOUNTNO).Replace("'", "''") + "'" +
                                        ",@BUSUNTBANK_SWIFT = '" + Convert.ToString(_obj_smhr_empbnkdtls.BUSUNTBANK_SWIFT) + "'" +
                                        ",@BUSUNTBANK_ISACTIVE = '" + Convert.ToBoolean(_obj_smhr_empbnkdtls.BUSUNTBANK_ISACTIVE) + "'" +
                                        ",@BUSUNTBANK_ISDEFAULT = '" + Convert.ToBoolean(_obj_smhr_empbnkdtls.BUSUNTBANK_ISDEFAULT) + "'" +
                                        ",@BUSUNTBANK_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.BUSUNTBANK_LASTMDFBY) + "'" +
                                        ",@BUSUNTBANK_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_empbnkdtls.BUSUNTBANK_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPBNKDTLS_ID = '" + Convert.ToInt32(_obj_smhr_empbnkdtls.EMPBNKDTLS_ID) +
                                        "',@ORGANISATION_ID='" + _obj_smhr_empbnkdtls.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMP_PAYITEMS

        public static DataTable get_EmpDetails(SMHR_EMP_PAYITEMS _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            //inseted by raghasudha 04/oct/2013 by raghasudha for employees directorate wise
            if (_obj_smhr_emp_payitems.OPERATION == operation.EmployeesDirectoratewise)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'EmployeesDirectoratewise', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "',@DIRECTORATE_ID='" + _obj_smhr_emp_payitems.DIRECTORATE_ID + "'");
            }
            if (_obj_smhr_emp_payitems.OPERATION == operation.EmployeesDepartmentwise)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'EmployeesDepartmentwise', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "',@DIRECTORATE_ID='" + _obj_smhr_emp_payitems.DIRECTORATE_ID + "',@DEPARTMENT_ID='" + _obj_smhr_emp_payitems.DEPARTMENT_ID + "'");
            }
            //added to include relieved employee details.Anirudh.08/07/2011
            if (_obj_smhr_emp_payitems.OPERATION == operation.EmployeesSubDepartmentWise)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'EmployeesSubDepartmentWise', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "',@DIRECTORATE_ID='" + _obj_smhr_emp_payitems.DIRECTORATE_ID + "',@DEPARTMENT_ID='" + _obj_smhr_emp_payitems.DEPARTMENT_ID + "',@EMP_DIV_ID='" + _obj_smhr_emp_payitems.SUBDEPARTMENT_ID + "'");
            }
            if (_obj_smhr_emp_payitems.OPERATION == operation.EmployeesBUwise)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'EmployeesBUwise', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.EMPTY_R)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'EMPTY_R', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty1', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Get', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Empty2)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty2', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "',@PERIOD_ID='" + _obj_smhr_emp_payitems.PERIOD_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Self', @EMP_ID = '" + _obj_smhr_emp_payitems.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Self_Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Self_Edit', @EMP_ID = '" + _obj_smhr_emp_payitems.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Empty_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty_Self', @REPORTING_EMP_ID = '" + _obj_smhr_emp_payitems.REPORTING_EMP_ID + "',@SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Empty_Self_Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty_Self_Edit', @REPORTING_EMP_ID = '" + _obj_smhr_emp_payitems.REPORTING_EMP_ID + "',@SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Empty_PH)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty_PH', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.GetPass)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'GetPass', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Self_Count)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation='Self_Count', @EMP_ID='" + _obj_smhr_emp_payitems.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Self_Transfer)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation='Self_Transfer', @EMP_ID='" + _obj_smhr_emp_payitems.EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Select_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Selfnew',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.getEmp)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'GetData',@EMP_ID='" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.GETGRADE)
            {
                return ExecuteQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = 1, @PAYITEM_ID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'check'," +
                                    " @SMHR_EMP_PAYITEMS_EMPID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID +
                                    "',@ORGANISATION_ID = '" + _obj_smhr_emp_payitems.ORGANISATION_ID +
                                    "',@SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.BUID +
                                    "'");
                //,@SMHR_EMP_PAYITEMS_ORGANISATION_ID='" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_ORGANISATION_ID + "'");

            }
        }

        public static DataTable get_EmpSalaryStruct(SMHR_EMP_PAYITEMS _obj_smhr_emp_payitems)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Select', @SMHR_EMP_PAYITEMS_EMPID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID + "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
        }

        public static bool set_EmpPayElements(SMHR_EMP_PAYITEMS _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Insert'" +
                                       ",@SMHR_EMP_PAYITEMS_EMPID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_PAYITEMID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_VALUE = '" + Convert.ToDouble(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_VALUE) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CALMODE = '" + Convert.ToString(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CALMODE) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CHECKED = '" + Convert.ToBoolean(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CHECKED) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") +
                                       "',@ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'" +
                                       ",@SMHR_BUSUNIT='" + _obj_smhr_emp_payitems.BUID + "'");
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Insert1)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Insert1', @SMHR_EMP_PAYITEMS_ID = " + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_ID);
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.Delete1)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Delete1', @IDs = '" + Convert.ToString(_obj_smhr_emp_payitems.SDATE)
                                    + "', @OldIDs = '" + Convert.ToString(_obj_smhr_emp_payitems.EDATE)
                                    + "', @SMHR_EMP_PAYITEMS_EMPID = " + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID)
                                    + " , @SMHR_EMP_PAYITEMS_CREATEDBY = " + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY));
            }
            else if (_obj_smhr_emp_payitems.OPERATION == operation.DelPic)
            {
                return ExecuteNonQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = 2, @IDs = '" + Convert.ToString(_obj_smhr_emp_payitems.SDATE)
                                    + "', @OldIDs = '" + Convert.ToString(_obj_smhr_emp_payitems.EDATE)
                                    + "', @SMHR_EMP_PAYITEMS_EMPID = " + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID)
                                    + " , @SMHR_EMP_PAYITEMS_CREATEDBY = " + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY));
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Delete', @SMHR_EMP_PAYITEMS_EMPID  = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID) + "'");
            }
        }

        public static DataTable get_EmpDetails_1(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty', @SMHR_BUSUNIT = '" + _obj_smhr_emp_payitems.SMHR_BUSUNIT + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'check', @SMHR_EMP_PAYITEMS_EMPID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID + "'");
            }
        }

        public static DataTable get_EmpSalaryStruct_1(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Select', @SMHR_EMP_PAYITEMS_EMPID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID + "'");
        }

        public static bool set_EmpPayElements_1(DataTable dtPayItemData, int payItemID)
        {
            List<SqlParameter> lstSqlparams = new List<SqlParameter>();
            lstSqlparams.Add(new SqlParameter("@MODE", "5"));
            lstSqlparams.Add(new SqlParameter("@SMHR_EMP_PAYITEMS_PAYITEMID", payItemID));
            lstSqlparams.Add(new SqlParameter("@SMHR_EMP_PAYITEMS_DATA", dtPayItemData));
            int result = ExecuteNonQuery("USP_PAYITEM_WISE_EMPLOYEE", lstSqlparams.ToArray());
            if (result > 0)
                return true;
            else
                return false;
        }

        public static bool set_EmpPayElements_1(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.MODE == 3)
            {
                if (_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_VALUE != -1)
                    return ExecuteNonQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "'" +
                                           ",@SMHR_EMP_PAYITEMS_EMPID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_BUID='" + Convert.ToInt32(_obj_smhr_emp_payitems.BUID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_PAYITEMID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_VALUE = '" + Convert.ToDouble(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_VALUE) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CALMODE = '" + Convert.ToString(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CALMODE) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CHECKED = '" + Convert.ToBoolean(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CHECKED) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                           ",@SMHR_EMP_PAYITEMS_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                           ",@SMHR_EMP_PAYITEMS_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_emp_payitems.ORGANISATION_ID) + "'");
                else
                    return ExecuteNonQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "'" +
                                           ",@SMHR_EMP_PAYITEMS_EMPID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_BUID='" + Convert.ToInt32(_obj_smhr_emp_payitems.BUID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_PAYITEMID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_VALUE = 'NULL'" +
                                           ",@SMHR_EMP_PAYITEMS_CALMODE = '" + Convert.ToString(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CALMODE) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CHECKED = '" + Convert.ToBoolean(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CHECKED) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                           ",@SMHR_EMP_PAYITEMS_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                           ",@SMHR_EMP_PAYITEMS_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                           ",@SMHR_EMP_PAYITEMS_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_emp_payitems.ORGANISATION_ID) + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "'" +
                                       ",@SMHR_EMP_PAYITEMS_PAYITEMID  = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_BUID='" + Convert.ToInt32(_obj_smhr_emp_payitems.BUID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_ORGANISATION_ID='" + _obj_smhr_emp_payitems.ORGANISATION_ID + "'");
            }
        }

        #endregion

        #region SMHR_IDENTIFICATION

        public static DataTable get_IdentityDetails(SMHR_IDENTIFICATION _obj_smhr_identity)
        {
            if (_obj_smhr_identity.OPERATION == operation.Select)
            {
                if (_obj_smhr_identity.IDNTMASTER_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = 'select',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = 'select',@IDNTMASTER_ID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_ID) + "',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'");
                }
            }
            else if (_obj_smhr_identity.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = 'Check', @IDNTMASTER_EMPID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_EMPID) + "',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = 'Check', @IDNTMASTER_EMPID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_EMPID) + "',@IDNTMASTER_TYPE = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_TYPE) + "',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'");
            }
        }

        public static bool set_IdentityDetails(SMHR_IDENTIFICATION _obj_smhr_identity)
        {
            bool status = false;
            switch (_obj_smhr_identity.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = '" + _obj_smhr_identity.OPERATION + "'" +
                                        ",@IDNTMASTER_EMPID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_EMPID) + "'" +
                                        ",@IDNTMASTER_CODE = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_CODE).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_NAME = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_NAME).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_TYPE = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_TYPE).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_ISSUEDT = " + (_obj_smhr_identity.IDNTMASTER_ISSUEDT == null ? "null" : "'" + _obj_smhr_identity.IDNTMASTER_ISSUEDT + "'") + "" +
                                        ",@IDNTMASTER_EXPIRYDT = " + (_obj_smhr_identity.IDNTMASTER_EXPIRYDT == null ? "null" : "'" + _obj_smhr_identity.IDNTMASTER_EXPIRYDT + "'") + "" +
                                        ",@IDNTMASTER_ISSUEDORG = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_ISSUEDORG).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_CREATEDBY) + "'" +
                                        ",@IDNTMASTER_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_identity.IDNTMASTER_CREATEDDATE).ToString("MM/dd/yyyy") + "',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_IDENTIFICATIONMASTER @Operation = '" + _obj_smhr_identity.OPERATION + "'" +
                                        ",@IDNTMASTER_CODE = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_CODE).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_EMPID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_EMPID) + "'" +
                                        ",@IDNTMASTER_NAME = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_NAME).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_TYPE = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_TYPE).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_ISSUEDT = " + (_obj_smhr_identity.IDNTMASTER_ISSUEDT == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_identity.IDNTMASTER_ISSUEDT).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@IDNTMASTER_EXPIRYDT = " + (_obj_smhr_identity.IDNTMASTER_EXPIRYDT == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_identity.IDNTMASTER_EXPIRYDT).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@IDNTMASTER_ISSUEDORG = '" + Convert.ToString(_obj_smhr_identity.IDNTMASTER_ISSUEDORG).Replace("'", "''") + "'" +
                                        ",@IDNTMASTER_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_LASTMDFBY) + "'" +
                                        ",@IDNTMASTER_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_identity.IDNTMASTER_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@IDNTMASTER_ID = '" + Convert.ToInt32(_obj_smhr_identity.IDNTMASTER_ID) + "',@ORGANISATION_ID='" + _obj_smhr_identity.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPLOYEEWEEKLYOFF

        public static bool set_EmpWeekOff(SMHR_EMPLOYEEWEEKLYOFF _obj_smhr_weekOff)
        {
            bool status = false;
            switch (_obj_smhr_weekOff.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = '" + _obj_smhr_weekOff.OPERATION + "'" +
                                        ",@EMPWOFF_EMP_ID = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_EMP_ID) + "'" +
                                        ",@EMPWOFF_EFFDATE = " + (_obj_smhr_weekOff.EMPWOFF_EFFDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_weekOff.EMPWOFF_EFFDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@EMPWOFF_MON = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_MON) + "'" +
                                        ",@EMPWOFF_TUE = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_TUE) + "'" +
                                        ",@EMPWOFF_WED = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_WED) + "'" +
                                        ",@EMPWOFF_THU = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_THU) + "'" +
                                        ",@EMPWOFF_FRI = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_FRI) + "'" +
                                        ",@EMPWOFF_SAT = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SAT) + "'" +
                                        ",@EMPWOFF_SUN = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SUN) + "'" +
                                        ",@EMPWOFF_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_CREATEDBY) + "'" +
                                        ",@EMPWOFF_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_weekOff.EMPWOFF_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert1:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = '" + _obj_smhr_weekOff.OPERATION + "'" +
                                        ",@EMPWOFF_EMP_ID = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_EMP_ID) + "'" +
                                        ",@EMPWOFFEFDATE = " + (_obj_smhr_weekOff.EMPWOFFEFDATE == null ? "null" : "'" + (_obj_smhr_weekOff.EMPWOFFEFDATE).ToString() + "'") + "" +
                                        ",@EMPWOFF_MON = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_MON) + "'" +
                                        ",@EMPWOFF_TUE = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_TUE) + "'" +
                                        ",@EMPWOFF_WED = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_WED) + "'" +
                                        ",@EMPWOFF_THU = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_THU) + "'" +
                                        ",@EMPWOFF_FRI = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_FRI) + "'" +
                                        ",@EMPWOFF_SAT = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SAT) + "'" +
                                        ",@EMPWOFF_SUN = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SUN) + "'" +
                                        ",@EMPWOFF_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_CREATEDBY) + "'" +
                                        ",@EMPWOFF_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_weekOff.EMPWOFF_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = '" + _obj_smhr_weekOff.OPERATION + "'" +
                                        ",@EMPWOFF_EMP_ID = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_EMP_ID) + "'" +
                                        ",@EMPWOFF_EFFDATE = " + (_obj_smhr_weekOff.EMPWOFF_EFFDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_smhr_weekOff.EMPWOFF_EFFDATE).ToString("MM/dd/yyyy") + "'") + "" +
                                        ",@EMPWOFF_MON = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_MON) + "'" +
                                        ",@EMPWOFF_TUE = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_TUE) + "'" +
                                        ",@EMPWOFF_WED = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_WED) + "'" +
                                        ",@EMPWOFF_THU = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_THU) + "'" +
                                        ",@EMPWOFF_FRI = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_FRI) + "'" +
                                        ",@EMPWOFF_SAT = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SAT) + "'" +
                                        ",@EMPWOFF_SUN = '" + Convert.ToBoolean(_obj_smhr_weekOff.EMPWOFF_SUN) + "'" +
                                        ",@EMPWOFF_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_LASTMDFBY) + "'" +
                                        ",@EMPWOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_weekOff.EMPWOFF_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmpWeekOff(SMHR_EMPLOYEEWEEKLYOFF _obj_smhr_weekOff)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEWEEKLYOFF @Operation = 'select',@EMPWOFF_EMP_ID = '" + Convert.ToInt32(_obj_smhr_weekOff.EMPWOFF_EMP_ID) + "'");
        }

        #endregion

        #region GENERATE_PAYSLIP

        public static DataTable get_payslip(string strQry, string periodid, string buid, string deptid, string strSession, string emp_id, int LOGIN_ID)
        {
            if (periodid == string.Empty && buid == string.Empty)
            {
                return ExecuteQuery("EXEC USP_GENERATE_PAYSLIP @Operation = '" + strQry.ToUpper() + "'");
            }
            else if (periodid != string.Empty && buid == string.Empty)
            {
                if (strSession.ToUpper() == "ADMIN")
                {
                    return ExecuteQuery("EXEC USP_GENERATE_PAYSLIP @Operation = '" + strQry.ToUpper() + "', @PERIODDTL_ID = " + periodid + ",@EMP_ID=" + emp_id + ",@EMP_LOGIN_ID=" + LOGIN_ID);
                }
                else
                {
                    return ExecuteQuery("EXEC USP_GENERATE_PAYSLIP @Operation = '" + strQry.ToUpper() + "', @PERIODDTL_ID = " + periodid + ", @EMP_ID=" + emp_id);
                }
            }
            else if (periodid != string.Empty && buid != string.Empty)
            {
                return ExecuteQuery("EXEC USP_GENERATE_PAYSLIP @Operation = '" + strQry.ToUpper() + "', @PERIODDTL_ID = " + periodid + ", @BU_ID = " + buid + ",@DEPARTMENT_ID=" + deptid);
            }
            else
            {
                return null;
            }
        }

        #endregion

        #region 125631512

        public static DataTable get_1259735()
        {
            return ExecuteQuery("EXEC USP_189526458");
        }

        #endregion

        #region EMPLOYEE_LOB

        public static DataTable get_EmpLOB(int ORGID, int @BUID, int @PERIOD_ID, int @EMP_LEAVESTRUCT_ID)
        {
            return ExecuteQuery("EXEC USP_SMHR_GetLeaveOpeningBalances @ORGID ='" + ORGID + "',@BUID='" + BUID + "',@PERIOD_ID='" + PERIOD_ID + "',@EMP_LEAVESTRUCT_ID='" + @EMP_LEAVESTRUCT_ID + "'");
        }

        public static DataTable getEmpLOB(SMHR_LOB _obj_SMHR_LOB)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_LOB @OPERATION = 'Get', @LT_EMPID =" + _obj_SMHR_LOB.LT_EMPID + ",@LT_PERIOD=" + _obj_SMHR_LOB.LT_PERIOD + ", @LT_LOB = 0, @LT_CURRENTBALANCE = 0, @LT_CREATEDBY = 0, @LASTMDFBY = 0");
        }

        public static bool setEmpLOB(SMHR_LOB _obj_SMHR_LOB)
        {
            if (ExecuteNonQuery("EXEC USP_SMHR_EMP_LOB @OPERATION = 'INSERT/UPDATE', @LT_EMPID =" + _obj_SMHR_LOB.LT_EMPID + ",@LT_LOB='"
                                    + _obj_SMHR_LOB.LT_BAL + "',@LT_PERIOD=" + _obj_SMHR_LOB.LT_PERIOD + ", @LT_CREATEDDATE = '" + _obj_SMHR_LOB.CREATEDDATE +
                                    "',@LASTMDFBY=" + _obj_SMHR_LOB.LASTMDFBY + ",@LT_CURRENTBALANCE=" + _obj_SMHR_LOB.LT_BAL + ", @LT_MODIFIEDDATE = '" + _obj_SMHR_LOB.LASTMDFDATE +
                                    "', @LT_CREATEDBY = " + _obj_SMHR_LOB.LASTMDFBY))

                return true;
            else
                return false;
        }

        public static DataTable get_EmpLeaves(int ORGID, int @BUID, int @PERIOD_ID, int @EMP_ID)
        {
            return ExecuteQuery("EXEC USP_SMHR_GetLeaveOpeningBalances_employee @ORGID ='" + ORGID + "',@BUID='" + BUID + "',@PERIOD_ID='" + PERIOD_ID + "',@EMP_ID='" + EMP_ID + "'");
        }

        public static bool set_EMpLOB(SMHR_LOB _obj_smhr_lob, string StrQuery)
        {
            bool status = false;
            switch (_obj_smhr_lob.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_UpdateEmpLOB(SMHR_LOB _obj_smhr_lob)
        {
            if (_obj_smhr_lob.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEOPENINGBALANCES @OPERATION='CHECK1',@LT_LEAVETYPEID='" + _obj_smhr_lob.LT_LEAVETYPEID + "'" +
                                    ",@LT_EMPID='" + _obj_smhr_lob.LT_EMPID + "'" +
                                    ",@LT_PERIOD='" + Convert.ToString(_obj_smhr_lob.LT_PERIOD) + "'");
            }
            else if (_obj_smhr_lob.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEOPENINGBALANCES @OPERATION='Empty1',@LEAVE_CODE='" + _obj_smhr_lob.LT_LEAVECODE + "'" +
                                    ",@LOB_ORGANISATIONID='" + Convert.ToString(_obj_smhr_lob.ORGANISATION_ID) + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEOPENINGBALANCES @OPERATION='CHECK1',@LT_LEAVETYPEID='" + _obj_smhr_lob.LT_LEAVETYPEID + "'" +
                                    ",@LT_EMPID='" + _obj_smhr_lob.LT_EMPID + "'" +
                                    ",@LT_PERIOD='" + Convert.ToString(_obj_smhr_lob.LT_PERIOD) + "'");
            }
        }

        public static bool set_UpdateEmpLOB(SMHR_LOB _obj_smhr_lob)
        {
            bool status = false;
            switch (_obj_smhr_lob.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEOPENINGBALANCES @Operation='" + _obj_smhr_lob.OPERATION + "'" +
                                        ",@LT_EMPID='" + _obj_smhr_lob.LT_EMPID + "'" +
                                        ",@LT_LEAVETYPEID='" + _obj_smhr_lob.LT_LEAVETYPEID + "'" +
                                        ",@LT_LOB='" + _obj_smhr_lob.LT_LOB + "'" +
                                        ",@LT_LEAVEENTITLED='" + _obj_smhr_lob.LT_LEAVEENTITLED + "'" +
                                        ",@LT_CURRENTBALANCE='" + _obj_smhr_lob.LT_CURRENTBALANCE + "'" +
                                        ",@LT_PERIOD='" + _obj_smhr_lob.LT_PERIOD + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEOPENINGBALANCES @Operation = '" + _obj_smhr_lob.OPERATION + "'" +
                                        ",@LOB_LEAVETYPEID = " + _obj_smhr_lob.LOB_LEAVETYPEID +
                                        ",@LOB_EMPID = " + _obj_smhr_lob.LOB_EMPID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_LOBRecords(SMHR_LOB _obj_smhr_lob)
        {
            return ExecuteQuery("EXEC USP_SMHR_LEAVEOPENINGBALANCES @Operation = 'Empty', @LOB_BUID =" + _obj_smhr_lob.LOB_BUID + "");
        }

        #endregion

        #region SMHR_TAXSLAB

        public static DataTable get_Taxslab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 5)
            {
                return ExecuteQuery("EXEC USP_TAX_SLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                    ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_TAX_SLAB @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
        }

        public static bool set_TaxSlab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 2)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_SLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXCREATEDBY = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDBY + "'" +
                                       ", @SMHR_TAXCREATEDDATE = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else if (_obj_smhr_taxslab.SMHR_TAXMODE == 3)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_SLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXLASTMDFBY  = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFBY + "'" +
                                       ", @SMHR_TAXLASTMDFDATE = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC USP_TAX_SLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
        }

        #endregion

        #region SMHR_PAYREJECT

        public static DataTable get_PayrejectDet(SMHR_PAYREJECT _obj_smhr_reject)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYTRAN_REJECT @MODE = '" + _obj_smhr_reject.MODE + "',@ORGANISATION_ID='" + _obj_smhr_reject.ORGANISATION_ID + "'");
        }

        //this method will load the information about payroll in payroll details screen
        public static DataTable get_Paytran(SMHR_PAYREJECT _obj_smhr_payreject)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYTRAN_REJECT @MODE='" + _obj_smhr_payreject.MODE +
                                "',@BUSINESSUNIT_ID='" + _obj_smhr_payreject.BUID + "',@PRDDTL_ID='" + _obj_smhr_payreject.PERIODDTL_ID + "'");
        }

        public static DataTable get_payrejectEmpDet(SMHR_PAYREJECT _obj_smhr_reject)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYTRAN_REJECT @TRANID = '" + _obj_smhr_reject.TRANID + "', " +
                                " @MODE = '" + _obj_smhr_reject.MODE + "'");
        }

        //public static bool set_payreject(SMHR_PAYREJECT _obj_smhr_reject)
        //{
        //    return ExecuteNonQuery("EXEC USP_PAYTRAN_REJECT @MODE = 3, " +
        //                    "@TRANID = '" + _obj_smhr_reject.TRANID + "'");
        //}

        public static bool set_payrollback(SMHR_PAYREJECT _obj_smhr_reject)
        {
            return ExecuteNonQuery("EXEC USP_PAYTRAN_REJECT @MODE = 3, " +
                                   " @TRANID = '" + _obj_smhr_reject.TRANID + "'," +
                                   " @PERIODDTLID = '" + _obj_smhr_reject.PERIODDTL_ID +
                                   "',@BUID=" + _obj_smhr_reject.BUID +
                                   ",@MDFY_BY=" + _obj_smhr_reject.CREATEDBY);
        }

        #endregion

        # region SMHR_LEAVEBALANCES

        public static bool set_leavebalances(SMHR_LEAVEBALANCE _obj_smhr_leavebal)
        {
            bool status = false;
            switch (_obj_smhr_leavebal.MODE)
            {
                case 4:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEBALANCES @Operation = 'Update',@MODE = 4,@EMPNAME = '" + _obj_smhr_leavebal.EMPNAME + "',@LT_LEAVETYPEID ='" + _obj_smhr_leavebal.LT_LEAVETYPEID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 5:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEBALANCES @Operation = 'Update',@MODE = 5,@LT_EMPID = " + _obj_smhr_leavebal.EMPNAME +
                                        ",@NDAYS=" + _obj_smhr_leavebal.NDays + ",@LT_LEAVETYPEID ='" + _obj_smhr_leavebal.LT_LEAVETYPEID +
                                        "',@LEAVEAPP_ID='" + _obj_smhr_leavebal.LEAVEAPP_ID +
                                        "',@LEAVEAPP_APPROVEDATE = '" + _obj_smhr_leavebal.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "',@LEAVEAPP_ORGANISATION_ID='" + _obj_smhr_leavebal.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 8:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEBALANCES @Operation = 'Update',@MODE = 8,@LT_EMPID = " + _obj_smhr_leavebal.EMPNAME +
                                        ",@NDAYS=" + _obj_smhr_leavebal.NDays + ",@LT_LEAVETYPEID ='" + _obj_smhr_leavebal.LT_LEAVETYPEID +
                                        "',@LEAVEAPP_ID='" + _obj_smhr_leavebal.LEAVEAPP_ID +
                                        "',@LEAVEAPP_APPROVEDATE='" + _obj_smhr_leavebal.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "',@LEAVEAPP_ORGANISATION_ID='" + _obj_smhr_leavebal.ORGANISATION_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 6:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEBALANCES @Operation = 'Update',@MODE = 6,@LT_EMPID = " + _obj_smhr_leavebal.LT_EMPID + ",@NDAYS=" + _obj_smhr_leavebal.NDays + ",@LT_LEAVETYPEID ='" + _obj_smhr_leavebal.LT_LEAVETYPEID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 9:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_LEAVEBALANCES @Operation = 'Update',@MODE = 9,@LT_EMPID = " + _obj_smhr_leavebal.LT_EMPID + ",@NDAYS=" + _obj_smhr_leavebal.NDays + ",@LT_PRD_ID ='" + _obj_smhr_leavebal.LT_PRD_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_leavebalances(SMHR_LEAVEBALANCE _obj_smhr_leavebal)
        {
            DataTable dt_leaveBal = new DataTable();
            if (_obj_smhr_leavebal.OPERATION == operation.Select)
            {
                if ((_obj_smhr_leavebal.MODE == 0) && (_obj_smhr_leavebal.LT_EMPID != 0))
                {
                    dt_leaveBal = ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCES @Operation = 'select',@MODE = 0, @LT_ID = " + (_obj_smhr_leavebal.LT_ID == 0 ? "null" : "" + _obj_smhr_leavebal.LT_ID + "") +
                                               ", @LT_EMPID = " + _obj_smhr_leavebal.LT_EMPID + "");
                }
                else if (_obj_smhr_leavebal.MODE == 1)
                {
                    if ((_obj_smhr_leavebal.OPERATION == operation.Select) && (_obj_smhr_leavebal.MODE == 1))
                        dt_leaveBal = ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCES @Operation = 'select',@MODE = 1, @LT_EMPID = " + _obj_smhr_leavebal.LT_EMPID + "");
                }
                else if (_obj_smhr_leavebal.MODE == 2)
                {
                    if ((_obj_smhr_leavebal.OPERATION == operation.Select) && (_obj_smhr_leavebal.MODE == 2))
                        dt_leaveBal = ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCES @Operation = 'select',@MODE = 2, @LT_LEAVETYPEID = " + _obj_smhr_leavebal.LT_LEAVETYPEID + "");
                }
                else if (_obj_smhr_leavebal.MODE == 3)
                {
                    if ((_obj_smhr_leavebal.OPERATION == operation.Select) && (_obj_smhr_leavebal.MODE == 3))
                        dt_leaveBal = ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCES @Operation = 'select',@MODE = 3, @MONTHS = " + _obj_smhr_leavebal.Months + ", @LT_EMPID = " + _obj_smhr_leavebal.LT_EMPID + "");
                }
            }
            return dt_leaveBal;
        }

        public static bool LeaveYearEndProcess(SMHR_LEAVEBALANCE _obj_smhr_leavebal)
        {
            return ExecuteNonQuery("EXEC USP_LEAVEYEARENDPROCESS @BUSID = " + _obj_smhr_leavebal.BUID + ",@YEAR = '" + _obj_smhr_leavebal.Year + "'");
        }

        #endregion

        #region SMHR_ESS

        public static DataTable get_EmpESS(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("EXEC USP_EMP_ESS @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @MODE = '" + _obj_smhr_employee.Mode + "'");
        }

        public static DataTable get_EmpLeaveCalender(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("Exec USP_SMHR_LEAVECALE  @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @MODE = '" + _obj_smhr_employee.Mode + "'");
            //if (_obj_smhr_employee.Mode == 1)
            //{
            //    return ExecuteQuery("Exec USP_SMHR_LEAVECALE  @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @MODE = '" + _obj_smhr_employee.Mode + "'");
            //}
            //else
            //{
            //    return ExecuteQuery("Exec USP_SMHR_LEAVECALE  @EMP_ID = '" + _obj_smhr_employee.EMP_ID + "', @MODE = '" + _obj_smhr_employee.Mode + "'");
        }

        #endregion

        #region SMHR_TAX_EXEMPT_MASTER

        public static DataTable get_Tax_Master(SMHR_TAX_EXEMPT _obj_smhr_taxExempt)
        {
            if (_obj_smhr_taxExempt.Mode == 4)
            {
                return ExecuteQuery("EXEC USP_TAX_EXEMPT @MODE = '4',@COUNTRY_ORGANISATION_ID = '" + _obj_smhr_taxExempt.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_taxExempt.Mode == 5)
            {
                return ExecuteQuery("EXEC USP_TAX_EXEMPT @MODE = '5', " +
                                    " @SMHR_TAX_ID = '" + _obj_smhr_taxExempt.SMHR_TAX_ID + "'");
            }
            else if (_obj_smhr_taxExempt.Mode == 7)
            {
                return ExecuteQuery("EXEC USP_TAX_EXEMPT @MODE = '7'," +
                                    " @SMHR_TAX_COUNTRY_ID='" + _obj_smhr_taxExempt.SMHR_TAX_COUNTRY_ID + "',@SMHR_TAX_NAME='" + _obj_smhr_taxExempt.SMHR_TAX_NAME + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_TAX_EXEMPT @MODE = '1'");
            }
        }

        public static bool set_TaxExempt(SMHR_TAX_EXEMPT _obj_smhr_taxExempt)
        {
            if (_obj_smhr_taxExempt.Mode == 2)
            {
                return ExecuteNonQuery("EXEC USP_TAX_EXEMPT @MODE = '" + _obj_smhr_taxExempt.Mode + "'" +
                                       ",@SMHR_TAX_COUNTRY_ID = '" + Convert.ToInt32(_obj_smhr_taxExempt.SMHR_TAX_COUNTRY_ID) + "'" +
                                       ",@SMHR_TAX_NAME = '" + Convert.ToString(_obj_smhr_taxExempt.SMHR_TAX_NAME) + "'" +
                                       ",@SMHR_TAX_DESC = '" + Convert.ToString(_obj_smhr_taxExempt.SMHR_TAX_DESC) + "'" +
                                       ",@SMHR_TAX_MAXLIMIT = '" + _obj_smhr_taxExempt.SMHR_TAX_MAXLIMIT + "'" +
                                       ",@SMHR_TAX_ACTIVE = '" + Convert.ToBoolean(_obj_smhr_taxExempt.SMHR_TAX_ACTIVE) + "'" +
                                       ",@SMHR_TAX_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_taxExempt.SMHR_TAX_CREATEDBY) + "'" +
                                       ",@SMHR_TAX_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_taxExempt.SMHR_TAX_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_TAX_EXEMPT @MODE = '" + _obj_smhr_taxExempt.Mode + "'" +
                                       ",@SMHR_TAX_COUNTRY_ID = '" + Convert.ToInt32(_obj_smhr_taxExempt.SMHR_TAX_COUNTRY_ID) + "'" +
                                       ",@SMHR_TAX_NAME = '" + Convert.ToString(_obj_smhr_taxExempt.SMHR_TAX_NAME) + "'" +
                                       ",@SMHR_TAX_DESC = '" + Convert.ToString(_obj_smhr_taxExempt.SMHR_TAX_DESC) + "'" +
                                       ",@SMHR_TAX_MAXLIMIT = '" + _obj_smhr_taxExempt.SMHR_TAX_MAXLIMIT + "'" +
                                       ",@SMHR_TAX_ACTIVE = '" + Convert.ToBoolean(_obj_smhr_taxExempt.SMHR_TAX_ACTIVE) + "'" +
                                       ",@SMHR_TAX_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_taxExempt.SMHR_TAX_LASTMDFBY) + "'" +
                                       ",@SMHR_TAX_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_taxExempt.SMHR_TAX_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@SMHR_TAX_ID = '" + Convert.ToInt32(_obj_smhr_taxExempt.SMHR_TAX_ID) + "'");
            }
        }

        #endregion

        #region SMHR_INCOME

        public static DataTable get_Income_Master(SMHR_INCOME _obj_smhr_Income)
        {
            if (_obj_smhr_Income.Mode == 4)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCOME @MODE = '4',@SMHR_INCOME_ORGID = '" + _obj_smhr_Income.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_Income.Mode == 5)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCOME @MODE = '5', " +
                                    " @SMHR_INCOME_ID = '" + _obj_smhr_Income.SMHR_INCOME_ID + "'");
            }
            else if (_obj_smhr_Income.Mode == 7)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCOME @MODE = '7'," +
                                    " @SMHR_INCOME_BUID='" + _obj_smhr_Income.SMHR_INCOME_BUID + "',@SMHR_INCOME_NAME='" + _obj_smhr_Income.SMHR_INCOME_NAME + "',@SMHR_INCOME_ORGID='" + _obj_smhr_Income.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_INCOME @MODE = '1'");
            }
        }

        public static bool set_Income_Master(SMHR_INCOME _obj_smhr_Income)
        {
            if (_obj_smhr_Income.Mode == 2)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_INCOME @MODE = '" + _obj_smhr_Income.Mode + "'" +
                                       ",@SMHR_INCOME_BUID = '" + Convert.ToInt32(_obj_smhr_Income.SMHR_INCOME_BUID) + "'" +
                                       ",@SMHR_INCOME_NAME = '" + Convert.ToString(_obj_smhr_Income.SMHR_INCOME_NAME) + "'" +
                                       ",@SMHR_INCOME_DESC = '" + Convert.ToString(_obj_smhr_Income.SMHR_INCOME_DESC) + "'" +
                                       ",@SMHR_INCOME_MAXLIMIT = '" + _obj_smhr_Income.SMHR_INCOME_MAXLIMIT + "'" +
                                       ",@SMHR_INCOME_ACTIVE = '" + Convert.ToBoolean(_obj_smhr_Income.SMHR_INCOME_ACTIVE) + "'" +
                                       ",@SMHR_INCOME_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_Income.SMHR_INCOME_CREATEDBY) + "'" +
                                       ",@SMHR_INCOME_ORGID='" + Convert.ToInt32(_obj_smhr_Income.ORGANISATION_ID) + "'" +
                                       ",@SMHR_INCOME_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_Income.SMHR_INCOME_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_INCOME @MODE = '" + _obj_smhr_Income.Mode + "'" +
                                       ",@SMHR_INCOME_BUID = '" + Convert.ToInt32(_obj_smhr_Income.SMHR_INCOME_BUID) + "'" +
                                       ",@SMHR_INCOME_NAME = '" + Convert.ToString(_obj_smhr_Income.SMHR_INCOME_NAME) + "'" +
                                       ",@SMHR_INCOME_DESC = '" + Convert.ToString(_obj_smhr_Income.SMHR_INCOME_DESC) + "'" +
                                       ",@SMHR_INCOME_MAXLIMIT = '" + _obj_smhr_Income.SMHR_INCOME_MAXLIMIT + "'" +
                                       ",@SMHR_INCOME_ACTIVE = '" + Convert.ToBoolean(_obj_smhr_Income.SMHR_INCOME_ACTIVE) + "'" +
                                       ",@SMHR_INCOME_LASTMDFBY = '" + Convert.ToInt32(_obj_smhr_Income.SMHR_INCOME_LASTMDFBY) + "'" +
                                       ",@SMHR_INCOME_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_Income.SMHR_INCOME_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@SMHR_INCOME_ID = '" + Convert.ToInt32(_obj_smhr_Income.SMHR_INCOME_ID) + "'");
            }
        }

        #endregion

        #region SMHR_TDS_CONSULTANT

        public static DataTable get_TDS_CONSULTANT(SMHR_TDS_CONSULTANT _obj_smhr_tds_consultant)
        {
            if (_obj_smhr_tds_consultant.OPERATION == operation.Select)
            {
                if (_obj_smhr_tds_consultant.TDS_ID != 0)
                {
                    return ExecuteQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "', @TDS_ID = '" + _obj_smhr_tds_consultant.TDS_ID + "'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "'");
                }
            }
            else if (_obj_smhr_tds_consultant.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "'");
            }
        }

        public static bool set_TDS_CONSULTANT(SMHR_TDS_CONSULTANT _obj_smhr_tds_consultant)
        {
            if (_obj_smhr_tds_consultant.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "'" +
                                       ",@TDS_COUNTRY_ID = '" + Convert.ToInt32(_obj_smhr_tds_consultant.TDS_COUNTRY_ID) + "'" +
                                       ",@TDS_VALUE = '" + Convert.ToDecimal(_obj_smhr_tds_consultant.TDS_VALUE) + "'" +
                                       ",@TDS_CREATED_BY = '" + Convert.ToInt32(_obj_smhr_tds_consultant.TDS_CREATED_BY) + "'" +
                                       ",@TDS_CREATED_DATE = '" + Convert.ToDateTime(_obj_smhr_tds_consultant.TDS_CREATED_DATE).ToString("MM/dd/yyyy") + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_TDS_CONSULTANT @OPERATION = '" + _obj_smhr_tds_consultant.OPERATION + "'" +
                                       ",@TDS_COUNTRY_ID = '" + Convert.ToInt32(_obj_smhr_tds_consultant.TDS_COUNTRY_ID) + "'" +
                                       ",@TDS_VALUE = '" + Convert.ToDecimal(_obj_smhr_tds_consultant.TDS_VALUE) + "'" +
                                       ",@TDS_LSTMDF_BY = '" + Convert.ToInt32(_obj_smhr_tds_consultant.TDS_LSTMDF_BY) + "'" +
                                       ",@TDS_LSTMDF_DATE = '" + Convert.ToDateTime(_obj_smhr_tds_consultant.TDS_LSTMDF_DATE).ToString("MM/dd/yyyy") + "'" +
                                       ",@TDS_ID = '" + Convert.ToInt32(_obj_smhr_tds_consultant.TDS_ID) + "'");
            }
        }

        #endregion

        #region SMHR_ESS

        #endregion

        #region SMHR_EMP_TAX_TRANS

        public static DataTable get_Tax_trans(SMHR_TAX_TRANS _obj_smhr_tax_trans)
        {
            if (_obj_smhr_tax_trans.Mode == 1)
            {
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = 1, @EMP_ID = '" + _obj_smhr_tax_trans.SMHR_EMPTAX_EMPID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "',@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_BU + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 5)
            {
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = 5, @SMHR_EMPTAX_ORGID = '" + _obj_smhr_tax_trans.ORGANISATION_ID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 6)
            {
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = 6,@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID +
                                    "',@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.BUID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 9)
            {
                // for knowing the count of employees who hads saved the information about tax
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE =9,@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_BU + "',@SMHR_EMPTAX_NEWPERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_NEWPERIODID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 10)
            {
                // for knowing the number of records inserted for that exempted id
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE =10,@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_BU + "',@SMHR_EMPTAX_NEWPERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_NEWPERIODID + "',@SMHR_EMPTAX_TAXID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_TAXID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 11)
            {
                // for loading the tax elelments of that businessunit's country
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE =11,@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.BUID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 12)
            {
                // for displaying gird data 
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE =12,@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.BUID + "',@SMHR_EMPTAX_TAXID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_ID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 14)
            {
                //for getting the tax amount of an employee with respect to the period and tax id
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE =14,@SMHR_EMPTAX_TAXID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_ID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "',@SMHR_EMPTAX_EMPID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_EMPID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = 4, @EMP_ID = '" + _obj_smhr_tax_trans.SMHR_EMPTAX_EMPID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "'");
            }
        }

        public static bool set_Tax_Trans(SMHR_TAX_TRANS _obj_smhr_tax_trans)
        {
            if (_obj_smhr_tax_trans.Mode == 2)
            {
                return ExecuteNonQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = '2'" +
                                       ",@SMHR_EMPTAX_EMPID = '" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_EMPID) + "'" +
                                       ",@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.BUID + "'" +
                                       ",@SMHR_EMPTAX_TAXID = '" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_TAXID) + "'" +
                                       ",@SMHR_EMPTAX_AMOUNT = '" + Convert.ToDouble(_obj_smhr_tax_trans.SMHR_EMPTAX_AMOUNT) + "'" +
                                       ",@SMHR_EMPTAX_AMT = '" + Convert.ToDouble(_obj_smhr_tax_trans.SMHR_EMPTAX_AMT) + "'" +
                                       ",@SMHR_EMPTAX_PERIOD_ID='" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID) + "'" +
                                       ",@SMHR_EMPTAX_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_CREATEDBY) + "'" +
                                       ",@SMHR_EMPTAX_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_tax_trans.SMHR_EMPTAX_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 7)
            {
                // to dump all tax savings from one financial period to other financial period
                return ExecuteNonQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = '7',@SMHR_EMPTAX_CREATEDBY='" + _obj_smhr_tax_trans.SMHR_EMPTAX_CREATEDBY +
                                       "',@SMHR_EMPTAX_NEWPERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_NEWPERIODID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID +
                                       "',@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.BUID + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 8)
            {
                // to copy all the exempted tax amounts from one to other periods for particular exempted tax
                return ExecuteNonQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = '8',@SMHR_EMPTAX_BUID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_BU +
                                       "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID + "',@SMHR_EMPTAX_NEWPERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_NEWPERIODID +
                                       "',@SMHR_EMPTAX_TAXID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_ID + "',@SMHR_EMPTAX_CREATEDBY='" + _obj_smhr_tax_trans.CREATEDBY + "'");
            }
            else if (_obj_smhr_tax_trans.Mode == 13)
            {
                // for deleting information related to employee on that particular period with tax id
                return ExecuteNonQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = '13'" +
                                       ",@SMHR_EMPTAX_EMPID = '" + _obj_smhr_tax_trans.SMHR_EMPTAX_EMPID + "',@SMHR_EMPTAX_PERIOD_ID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID +
                                       "',@SMHR_EMPTAX_TAXID='" + _obj_smhr_tax_trans.SMHR_EMPTAX_ID + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_EMP_TDS_EXEMPT @MODE = '3'" +
                                       ",@SMHR_EMPTAX_EMPID = '" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_EMPID) + "',@SMHR_EMPTAX_PERIOD_ID='" + Convert.ToInt32(_obj_smhr_tax_trans.SMHR_EMPTAX_PERIOD_ID) + "'");
            }
        }

        #endregion

        #region SMHR_EMP_INCOME_TRANS

        public static DataTable get_Income_trans(SMHR_INCOME_TRANS _obj_smhr_income_trans)
        {
            if (_obj_smhr_income_trans.Mode == 1)
            {
                return ExecuteQuery("EXEC USP_EMP_INCOME_TRANS @MODE = 1, @EMP_ID = '" + _obj_smhr_income_trans.SMHR_EMPINCOME_EMPID + "',@SMHR_INCOME_ORGID='" + _obj_smhr_income_trans.ORGANISATION_ID + "',@SMHR_EMPINCOME_PERIOD='" + _obj_smhr_income_trans.SMHR_EMPINCOME_PERIOD + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_EMP_INCOME_TRANS @MODE = 4, @EMP_ID = '" + _obj_smhr_income_trans.SMHR_EMPINCOME_EMPID + "',@SMHR_EMPINCOME_PERIOD='" + _obj_smhr_income_trans.SMHR_EMPINCOME_PERIOD + "'");
            }
        }

        public static bool set_Income_Trans(SMHR_INCOME_TRANS _obj_smhr_income_trans)
        {
            if (_obj_smhr_income_trans.Mode == 2)
            {
                return ExecuteNonQuery("EXEC USP_EMP_INCOME_TRANS @MODE = '2'" +
                                       ",@SMHR_EMPINCOME_EMPID = '" + Convert.ToInt32(_obj_smhr_income_trans.SMHR_EMPINCOME_EMPID) + "'" +
                                       ",@SMHR_EMPINCOME_INCOMEID = '" + Convert.ToInt32(_obj_smhr_income_trans.SMHR_EMPINCOME_INCOMEID) + "'" +
                                       ",@SMHR_EMPINCOME_AMOUNT = '" + Convert.ToDouble(_obj_smhr_income_trans.SMHR_EMPINCOME_AMOUNT) + "'" +
                                       ",@SMHR_EMPINCOME_AMT = '" + Convert.ToDouble(_obj_smhr_income_trans.SMHR_EMPINCOME_AMT) + "'" +
                                       ",@SMHR_EMPINCOME_PERIOD='" + Convert.ToInt32(_obj_smhr_income_trans.SMHR_EMPINCOME_PERIOD) + "'" +
                                       ",@SMHR_EMPINCOME_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_income_trans.SMHR_EMPINCOME_CREATEDBY) + "'" +
                                       ",@SMHR_EMPINCOME_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_income_trans.SMHR_EMPINCOME_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_EMP_INCOME_TRANS @MODE = '3'" +
                                       ",@SMHR_EMPINCOME_EMPID = '" + Convert.ToInt32(_obj_smhr_income_trans.SMHR_EMPINCOME_EMPID) + "',@SMHR_EMPINCOME_PERIOD='" + _obj_smhr_income_trans.SMHR_EMPINCOME_PERIOD + "'");
            }
        }

        #endregion

        # region SMHR_EMPCOMPOFF

        public static DataTable get_empcompffs(SMHR_EMPCOMOFF _obj_smhr_compoff)
        {
            if ((_obj_smhr_compoff.OPERATION == operation.Select) && (_obj_smhr_compoff.EMPCOMPOFF_ID == 0))
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Select', @ORGANISATION_ID = " + _obj_smhr_compoff.ORGANISATION_ID + ",@EMP_LOGIN_ID='" + _obj_smhr_compoff.LOGIN_ID + "'");
            }
            else if ((_obj_smhr_compoff.OPERATION == operation.Select) && (_obj_smhr_compoff.EMPCOMPOFF_ID != 0))
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Select',@EMPCOMPOFF_ID = " + _obj_smhr_compoff.EMPCOMPOFF_ID + "");
            }
            else if (_obj_smhr_compoff.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Empty',@BUID = " + _obj_smhr_compoff.BUID + "");
            }
            else if (_obj_smhr_compoff.OPERATION == operation.EMPTY_R)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'EMPTY_R',@BUID = " + _obj_smhr_compoff.BUID + "");
            }
            else if (_obj_smhr_compoff.OPERATION == operation.Empty_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Empty_Self',@BUID = " + _obj_smhr_compoff.BUID + ",@EMPCOMPOFF_EMPID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + "");
            }
            else if (_obj_smhr_compoff.OPERATION == operation.Check)

                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Check',@EMPCOMPOFF_EMPID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + ",@EMPCOMPOFF_ORGANISATION_ID=" + _obj_smhr_compoff.ORGANISATION_ID + "");

            else if (_obj_smhr_compoff.OPERATION == operation.Select_New)
                return (ExecuteQuery("EXEC USP_SMHR_COMPOFFAPPSTATUS @operation='Select_New',@EMP_ID='" + _obj_smhr_compoff.EMP_ID + "'"));
            else if (_obj_smhr_compoff.OPERATION == operation.Check_New) //&& (_obj_smhr_compoff.EMPCOMPOFF_APPROVEDBY != 0))
                return (ExecuteQuery("EXEC USP_SMHR_COMPOFFAPPSTATUS @operation='Check_New',@EMPCOMPOFF_STATUS='" + _obj_smhr_compoff.EMPCOMPOFF_STATUS + "',@EMPCOMPOFF_APPROVEDBY='" + _obj_smhr_compoff.EMPCOMPOFF_APPROVEDBY + "'"));
            else if (_obj_smhr_compoff.OPERATION == operation.Validate1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Validate1',@EMPCOMPOFF_COMPOFFDAY ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_COMPOFFDAY).ToString("MM/dd/yyyy") + "',@EMPCOMPOFF_EMPID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + "");
            }
            else
                return ExecuteQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Validate',@EMPCOMPOFF_WORKDAY ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_WORKDAY).ToString("MM/dd/yyyy") + "',@EMPCOMPOFF_EMPID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + "");
        }

        public static DataTable CheckWorkDay(SMHR_EMPCOMOFF _obj_smhr_compoff)
        {
            return ExecuteQuery(" EXEC usp_SMHR_CHECKFORCOMPOFF @WORKDAY = '" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_WORKDAY).ToString("MM/dd/yyyy") +
                                "', @EMP_ID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + "");
        }

        public static DataTable CheckCompoffDay(SMHR_EMPCOMOFF _obj_smhr_compoff)
        {
            return ExecuteQuery(" EXEC usp_SMHR_CHECKFORCOMPOFF @WORKDAY = '" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_COMPOFFDAY).ToString("MM/dd/yyyy") +
                                "', @EMP_ID = " + _obj_smhr_compoff.EMPCOMPOFF_EMPID + "");
        }

        public static bool set_empcompoffs(SMHR_EMPCOMOFF _obj_smhr_compoff)
        {
            bool status = false;
            switch (_obj_smhr_compoff.OPERATION)
            {
                case operation.Insert:
                    ExecuteNonQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Insert',@EMPCOMPOFF_EMPID = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_EMPID) + "" +
                                    ",@EMPCOMPOFF_WORKDAY ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_WORKDAY).ToString("MM/dd/yyyy") + "'" +
                                    //",@EMPCOMPOFF_COMPOFFDAY='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_COMPOFFDAY).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LOGINTIME ='" + _obj_smhr_compoff.EMPCOMPOFF_LOGINTIME + "'" +
                                    ",@EMPCOMPOFF_LOGOUTTIME ='" + _obj_smhr_compoff.EMPCOMPOFF_LOGOUTTIME + "'" +
                                    ",@EMPCOMPOFF_DAYS =" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_DAYS) + "" +
                                    ",@EMPCOMPOFF_REASON= '" + Convert.ToString(_obj_smhr_compoff.EMPCOMPOFF_REASON) + "'" +
                                    ",@EMPCOMPOFF_STATUS =" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_STATUS) + "" +
                                    ",@EMPCOMPOFF_ORGANISATION_ID=" + Convert.ToInt32(_obj_smhr_compoff.ORGANISATION_ID) + "" +
                                    ",@EMPCOMPOFF_APPLIEDDATE ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_APPLIEDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_CREATEDBY = " + Convert.ToInt32(_obj_smhr_compoff.CREATEDBY) + "" +
                                    ",@EMPCOMPOFF_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_compoff.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_compoff.LASTMDFBY) + "" +
                                    ",@EMPCOMPOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_compoff.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LEAVETYPE='" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_LEAVETYPE) + "'");

                    break;
                case operation.Update:
                    //if (_obj_smhr_compoff.EMPCOMPOFF_APPROVEDBY == 0)
                    //{
                    ExecuteNonQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Update',@EMPCOMPOFF_ID=" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_ID) + "" +
                                    ",@EMPCOMPOFF_EMPID = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_EMPID) + "" +
                                    ",@EMPCOMPOFF_WORKDAY ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_WORKDAY).ToString("MM/dd/yyyy") + "'" +
                                    //",@EMPCOMPOFF_COMPOFFDAY='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_COMPOFFDAY).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LOGINTIME ='" + _obj_smhr_compoff.EMPCOMPOFF_LOGINTIME + "'" +
                                    ",@EMPCOMPOFF_LOGOUTTIME ='" + _obj_smhr_compoff.EMPCOMPOFF_LOGOUTTIME + "'" +
                                    ",@EMPCOMPOFF_DAYS =" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_DAYS) + "" +
                                    ",@EMPCOMPOFF_REASON= '" + Convert.ToString(_obj_smhr_compoff.EMPCOMPOFF_REASON) + "'" +
                                    ",@EMPCOMPOFF_STATUS =" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_STATUS) + "" +
                                    ",@EMPCOMPOFF_APPLIEDDATE ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_APPLIEDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_compoff.LASTMDFBY) + "" +
                                    ",@EMPCOMPOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_compoff.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LEAVETYPE='" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_LEAVETYPE) + "'");
                    break;
                //}
                //else
                //{
                //    ExecuteNonQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Update',@EMPCOMPOFF_APPROVEDBY = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_APPROVEDBY) + "" +
                //         ",@EMPCOMPOFF_APPROVEDDATE ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_APPROVEDDATE).ToString("MM/dd/yyyy") + "'" +
                //         ",@EMPCOMPOFF_REASON= '" + Convert.ToString(_obj_smhr_compoff.EMPCOMPOFF_REASON) + "'" +
                //         ",@EMPCOMPOFF_APPROVALREMARKS = " + (_obj_smhr_compoff.EMPCOMPOFF_APPROVALREMARKS == null ? "null" : "'" + _obj_smhr_compoff.EMPCOMPOFF_APPROVALREMARKS + "'") +
                //         ",@EMPCOMPOFF_STATUS = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_STATUS) + "" +
                //         ",@EMPCOMPOFF_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_compoff.LASTMDFBY) + "" +
                //         ",@EMPCOMPOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_compoff.LASTMDFDATE).ToString("MM/dd/yyyy") + "'"+
                //         ",@EMPCOMPOFF_LEAVETYPE='"+Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_LEAVETYPE)+"'");
                //    break;
                //}
                case operation.Update1:
                    ExecuteNonQuery("EXEC USP_SMHR_EMPCOMPOFF @Operation = 'Update1',@EMPCOMPOFF_APPROVEDBY = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_APPROVEDBY) + "" +
                                    ",@EMPCOMPOFF_APPROVEDDATE ='" + Convert.ToDateTime(_obj_smhr_compoff.EMPCOMPOFF_APPROVEDDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_REASON= '" + Convert.ToString(_obj_smhr_compoff.EMPCOMPOFF_REASON) + "'" +
                                    ",@EMPCOMPOFF_APPROVALREMARKS = " + (_obj_smhr_compoff.EMPCOMPOFF_APPROVALREMARKS == null ? "null" : "'" + _obj_smhr_compoff.EMPCOMPOFF_APPROVALREMARKS + "'") +
                                    ",@EMPCOMPOFF_STATUS = " + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_STATUS) + "" +
                                    ",@EMPCOMPOFF_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_compoff.LASTMDFBY) + "" +
                                    ",@EMPCOMPOFF_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_compoff.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                    ",@EMPCOMPOFF_LEAVETYPE='" + Convert.ToInt32(_obj_smhr_compoff.EMPCOMPOFF_LEAVETYPE) + "'");
                    break;
                default:
                    break;
            }
            return true;
        }

        #endregion

        # region SMHR_LOANTRANSDTL

        public static bool set_EmpLoanTranDtl(SMHR_LOANTRANSDTL _obj_smhr_loantransdtl, string StrQuery)
        {
            bool status = false;
            switch (_obj_smhr_loantransdtl.OPERATION)
            {
                //case operation.Insert:
                //    StrQuery = " EXEC USP_SMHR_LOANTRANDTL @Operation = '" + _obj_smhr_loantransdtl.OPERATION + "'" +
                //                        ",@LOANTRADTL_LOANTRAN_ID = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRADTL_LOANTRAN_ID) + "'" +
                //                        ",@LOANTRANDTL_LOANNO = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRANDTL_LOANNO) + "'" +
                //                        ",@LOANTRANDTL_EMIPAYMENTDUEDATE = " + _obj_smhr_loantransdtl.LOANTRANDTL_EMIPAYMENTDUEDATE + "'" +
                //                        ",@LOANTRANDTL_EMIAMOUNT = " + _obj_smhr_loantransdtl.LOANTRANDTL_EMIAMOUNT + "'" +
                //                        ",@LOANTRANDTL_EMISTATUS = " + _obj_smhr_loantransdtl.LOANTRANDTL_EMISTATUS + "" +
                //                        ",@LOANTRANDTL_CURRENTBALANCEAMOUNT = " + _obj_smhr_loantransdtl.LOANTRANDTL_CURRENTBALANCEAMOUNT + "" +
                //                        ",@LOANTRANDTL_CURRENTLOANAMOUNt =" + _obj_smhr_loantransdtl.LOANTRANDTL_CURRENTLOANAMOUNT + "" +
                //                        ",@LOANTRANDTL_CURR_EMINO =" + _obj_smhr_loantransdtl.LOANTRANDTL_CURR_EMINO + "";
                //    break;
                case operation.Insert:
                    if (ExecuteNonQuery("" + StrQuery + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = '" + _obj_smhr_loantransdtl.OPERATION + "', @LOANTRADTL_LOANTRAN_ID = " + Convert.ToInt32(_obj_smhr_loantransdtl.LOANTRADTL_LOANTRAN_ID) +
                                        ",@LOANTRANDTL_LOANNO = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRANDTL_LOANNO) + "'" +
                                        ",@LOANTRANDTL_EMIPAYMENTDUEDATE = '" + _obj_smhr_loantransdtl.LOANTRANDTL_EMIPAYMENTDUEDATE + "'" +
                                        ",@LOANTRANDTL_EMIAMOUNT = " + _obj_smhr_loantransdtl.LOANTRANDTL_EMIAMOUNT +
                                        ",@LOANTRANDTL_EMISTATUS = " + _obj_smhr_loantransdtl.LOANTRANDTL_EMISTATUS +
                                        ",@LOANTRANDTL_CURRENTBALANCEAMOUNT = " + _obj_smhr_loantransdtl.LOANTRANDTL_CURRENTBALANCEAMOUNT +
                                        ",@LOANTRANDTL_CURRENTLOANAMOUNt = " + _obj_smhr_loantransdtl.LOANTRANDTL_CURRENTLOANAMOUNT +
                                        ",@LOANTRANDTL_CURR_EMINO = " + _obj_smhr_loantransdtl.LOANTRANDTL_CURR_EMINO +
                                        ",@LOANTRANDTL_INTEREST = " + _obj_smhr_loantransdtl.LOANTRANDTL_INTEREST +
                                        ",@LOANTRANS_COMMENTS = '" + _obj_smhr_loantransdtl.LOANTRANS_COMMENTS + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EmpLoanTranDetail(SMHR_LOANTRANSDTL _obj_smhr_loantransdtl)
        {
            if (_obj_smhr_loantransdtl.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = 'Select',@LOANTRADTL_LOANTRAN_ID =" + Convert.ToInt32(_obj_smhr_loantransdtl.LOANTRADTL_LOANTRAN_ID) + "");
            }
            if (_obj_smhr_loantransdtl.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = 'Select_New',@LOANTRADTL_LOANTRAN_ID =" + Convert.ToInt32(_obj_smhr_loantransdtl.LOANTRADTL_LOANTRAN_ID) + "");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = 'Check',@LOANTRADTL_LOANTRAN_ID =" + Convert.ToInt32(_obj_smhr_loantransdtl.LOANTRADTL_LOANTRAN_ID) + "");
            }
        }

        public static bool ProcessReshcdule(SMHR_LOANTRANSDTL _obj_smhr_loantransdtl, SMHR_LOANTRANS _obj_smhr_loantrans)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_LOANRESCHEDULINGPROCESS @TRAN_ID = " + Convert.ToInt32(_obj_smhr_loantrans.LOANTRANS_ID) + "" +
                                   ",@DTL_ID = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRANDTL_LOANNO) + "'" +
                                    ",@LOANTRANDTL_CREATEDBY = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRANDTLS_CREATEDBY) + "'" +
                                     ",@LOANTRANDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_loantransdtl.LOANTRANDTLS_CREATEDDATE) + "'" +
                                     ",@LOANTRANDTL_MDFYBY = '" + Convert.ToString(_obj_smhr_loantransdtl.LOANTRANDTLS_MDFYBY) + "'" +
                                     ",@LOANTRANDTL_MDFDATE = '" + Convert.ToDateTime(_obj_smhr_loantransdtl.LOANTRANDTLS_MDFYDATE) + "'" +
                                   ",@LOANTRANS_EMP_ID =" + Convert.ToInt32(_obj_smhr_loantrans.LOANTRANS_EMP_ID + ""));
        }

        #endregion

        #region SMHR_YEAR

        public static DataTable get_Year(int mode)
        {
            return ExecuteQuery("EXEC USP_YEAR @Mode=" + mode);
        }

        #endregion

        #region SMHR_DIRECTPAYMENTS

        public static DataTable get_DirectPayments(SMHR_DIRECTPAYMENTS _obj_smhr_Directpmts)
        {
            if (_obj_smhr_Directpmts.Mode == 1)
            {
                return ExecuteQuery(" EXEC USP_DIRECTPAYMENTS @MODE = 1,@SMHR_DIRECTPMT_ORG_ID='" + _obj_smhr_Directpmts.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_DIRECTPAYMENTS @MODE = 2" +
                                    ", @SMHR_DIRECTPMT_ID = '" + Convert.ToInt32(_obj_smhr_Directpmts.SMHR_DIRECTPMT_ID) + "'");
            }
        }

        public static bool set_DirectPayments(SMHR_DIRECTPAYMENTS _obj_smhr_directPmts)
        {
            if (_obj_smhr_directPmts.Mode == 3)
            {
                return ExecuteNonQuery(" EXEC USP_DIRECTPAYMENTS @MODE = 3" +
                                       ", @SMHR_DIRECTPMT_BUID = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_BUID + "'" +
                                       ", @SMHR_DIRECTPMT_EMPID = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_EMPID + "'" +
                                       ", @SMHR_DIRECTPMT_ISSUEDT = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_ISSUEDT + "'" +
                                       ", @SMHR_DIRECTPMT_AMOUNT = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_AMOUNT + "'" +
                                       ", @SMHR_DIRECTPMT_REMARKS = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_REMARKS + "'" +
                                       ", @SMHR_DIRECTPMT_TYPE = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_TYPE + "'" +
                                       ", @SMHR_DIRECTPMT_CHEQUE = '" + _obj_smhr_directPmts.SMHR_CHEQUENUMBER + "'" +
                                       ", @SMHR_DIRECTPMT_CREATEDBY = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_CREATEDBY + "'" +
                                       ", @SMHR_DIRECTPMT_CREATEDDATE = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_CREATEDDATE + "'" +
                                       ",@SMHR_DIRECTPMT_ORG_ID='" + _obj_smhr_directPmts.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC USP_DIRECTPAYMENTS @MODE = 4" +
                                       ", @SMHR_DIRECTPMT_BUID = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_BUID + "'" +
                                       ", @SMHR_DIRECTPMT_EMPID = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_EMPID + "'" +
                                       ", @SMHR_DIRECTPMT_ISSUEDT = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_ISSUEDT + "'" +
                                       ", @SMHR_DIRECTPMT_AMOUNT = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_AMOUNT + "'" +
                                       ", @SMHR_DIRECTPMT_REMARKS = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_REMARKS + "'" +
                                       ", @SMHR_DIRECTPMT_TYPE = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_TYPE + "'" +
                                       ", @SMHR_DIRECTPMT_CHEQUE = '" + _obj_smhr_directPmts.SMHR_CHEQUENUMBER + "'" +
                                       ", @SMHR_DIRECTPMT_LASTMDFBY = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_LASTMDFBY + "'" +
                                       ", @SMHR_DIRECTPMT_LASTMDFDATE  = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_LASTMDFDATE + "'" +
                                       ", @SMHR_DIRECTPMT_ID = '" + _obj_smhr_directPmts.SMHR_DIRECTPMT_ID + "'");
            }
        }

        #endregion

        #region SMHR_LEAVEMASTER

        /// <summary>
        ///  Method to Get Country Based on the LEAVEMASTER_ID
        /// </summary>
        /// <param name="LEAVEMASTER_ID"></param>
        /// <returns>Datatable with LeaveMaster Information</returns>
        /// <remarks>
        ///  Author             : MKD
        ///  Created on         : 2009-11-14 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_LeaveMaster(SMHR_LEAVEMASTER _obj_Smhr_LeaveMaster)
        {
            if (_obj_Smhr_LeaveMaster.OPERATION == operation.Select)
            {
                if (_obj_Smhr_LeaveMaster.LEAVEMASTER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'select', @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'select', @LEAVEMASTER_ID =" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_ID));
            }
            else if (_obj_Smhr_LeaveMaster.OPERATION == operation.Check)
            {
                if (_obj_Smhr_LeaveMaster.LEAVEMASTER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'Check', @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "', @LEAVEMASTER_CODE ='" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_CODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'Check', @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "',@LEAVEMASTER_CODE ='" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_CODE) + "', @LEAVEMASTER_ID =" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_ID));
            }
            else if (_obj_Smhr_LeaveMaster.OPERATION == operation.Delete)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'AllowPay', @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_LeaveMaster.OPERATION == operation.CHECKEXISTS)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'CHECKEXISTS', @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'Empty',@LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'");
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_LEAVEMASTER table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_LeaveMaster"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : MKD
        ///  Created on         : 2009-11-13
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_LeaveMaster(SMHR_LEAVEMASTER _obj_Smhr_LeaveMaster)
        {
            bool status = false;
            switch (_obj_Smhr_LeaveMaster.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'Insert', @LEAVEMASTER_CODE='" + _obj_Smhr_LeaveMaster.LEAVEMASTER_CODE + "'" +
                                        ", @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'" +
                                        ", @LEAVEMASTER_DESCRIPTION='" + _obj_Smhr_LeaveMaster.LEAVEMASTER_DESCRIPTION + "'" +
                                        ", @LEAVEMASTER_COMPOFF = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_COMPOFF + "" +
                                        ", @LEAVEMASTER_ALLOWPAY = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_ALLOWPAY + "" +
                                        ", @LEAVEMASTER_CREATEDBY= " + Convert.ToString(_obj_Smhr_LeaveMaster.CREATEDBY) +
                                        " , @LEAVEMASTER_CREATEDDATE='" + _obj_Smhr_LeaveMaster.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEMASTER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveMaster.LASTMDFBY) +
                                        " , @LEAVEMASTER_LASTMDFDATE='" + _obj_Smhr_LeaveMaster.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEMASTER_ISINCIDENT = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_ISINCIDENT))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LEAVEMASTER @Operation = 'Update',@LEAVEMASTER_ID=" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_ID) + "" +
                                        ",@LEAVEMASTER_CODE='" + _obj_Smhr_LeaveMaster.LEAVEMASTER_CODE + "'" +
                                        ", @LEAVEMASTER_ORGANISATION_ID = '" + _obj_Smhr_LeaveMaster.ORGANISATION_ID + "'" +
                                        ", @LEAVEMASTER_DESCRIPTION='" + _obj_Smhr_LeaveMaster.LEAVEMASTER_DESCRIPTION + "'" +
                                        ", @LEAVEMASTER_COMPOFF = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_COMPOFF + "" +
                                        ", @LEAVEMASTER_ALLOWPAY = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_ALLOWPAY + "" +
                                        ", @LEAVEMASTER_CREATEDBY= " + Convert.ToString(_obj_Smhr_LeaveMaster.CREATEDBY) +
                                        " , @LEAVEMASTER_CREATEDDATE='" + _obj_Smhr_LeaveMaster.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEMASTER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveMaster.LASTMDFBY) +
                                        " , @LEAVEMASTER_LASTMDFDATE='" + _obj_Smhr_LeaveMaster.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "', @LEAVEMASTER_ISINCIDENT = " + _obj_Smhr_LeaveMaster.LEAVEMASTER_ISINCIDENT))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COUNTRY @Operation = 'Delete', @LEAVEMASTER_ID=" + Convert.ToString(_obj_Smhr_LeaveMaster.LEAVEMASTER_ID) + "" +
                                        ",@LEAVEMASTER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_LeaveMaster.LASTMDFBY) +
                                        ",@LEAVEMASTER_LASTMDFDATE='" + _obj_Smhr_LeaveMaster.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPSELFSERVICE

        public static DataTable get_AssetDoc(SMHR_EMPASSETDOC _obj_smhr_assetDoc)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @EMPASSETDOC_TYPE = '" + Convert.ToString(_obj_smhr_assetDoc.EMPASSETDOC_TYPE) + "'" +
                                ",@MODE = '" + _obj_smhr_assetDoc.MODE + "'" +
                                ",@EMP_ID = '" + Convert.ToInt32(_obj_smhr_assetDoc.EMPASSETDOC_EMP_ID) + "',@ORGANISATION_ID='" + _obj_smhr_assetDoc.ORGANISATION_ID + "'");
        }

        public static DataTable get_EmpLeaveApp(SMHR_LEAVEAPP _obj_smhr_leaveApp)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '2', @EMP_ID = '" + _obj_smhr_leaveApp.LEAVEAPP_EMP_ID + "',@ORGANISATION_ID='" + _obj_smhr_leaveApp.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_smhr_leaveApp.LOGIN_ID + "'");
        }

        public static DataTable get_EmpExpenseTrans(SMHR_EXPENSE _obj_smhr_expense)
        {
            return ExecuteQuery(" EXEC USP_SMHR_EMPSELFSERVICE @MODE = '3', @EMP_ID='" + _obj_smhr_expense.EXPENSE_EMP_ID + "'");
        }

        public static DataTable get_EmpData(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '4', @EMP_ID='" + _obj_smhr_employee.EMP_ID + "'");
        }

        public static DataTable get_Birthday(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '5',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_employee.ORGANISATION_ID) + "'");
        }

        public static DataTable get_Resignation(SMHR_EMPRESIGNATION _obj_smhr_resignation)
        {
            if (_obj_smhr_resignation.MODE == 11)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '11', @EMP_ID='" + _obj_smhr_resignation.EMPREG_EMP_ID + "',@EMPREG_ORGANISATION_ID='" + _obj_smhr_resignation.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_resignation.MODE == 12)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '12', @EMP_ID='" + _obj_smhr_resignation.EMPREG_EMP_ID + "',@EMPREG_ORGANISATION_ID='" + _obj_smhr_resignation.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '6', @EMP_ID='" + _obj_smhr_resignation.EMPREG_EMP_ID + "'");
            }
        }

        public static DataTable get_EmpPay(SMHR_PAYROLL _obj_smhr_payroll)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '7', " +
                                " @EMP_ID='" + _obj_smhr_payroll.EMP_ID + "'" +
                                ", @PERIODDTL_ID = '" + _obj_smhr_payroll.PERIODDTLID + "'");
        }

        public static bool set_empSelfservicePersonal(SMHR_APPLICANT _obj_smhr_applicant)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '8', " +
                                   " @EMP_ID='" + _obj_smhr_applicant.APPLICANT_ID + "'" +
                                   ",@ADDRESS = '" + Convert.ToString(_obj_smhr_applicant.APPLICANT_ADDRESS).Replace("'", "''") + "'");
        }

        public static bool set_empSelfservicePicture(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '9', " +
                                   " @EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                   ",@EMP_PICTURE = '" + _obj_smhr_employee.EMP_PICUTRE + "'");
        }

        public static bool set_empSelfserviceResume(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_EMPSELFSERVICE @MODE = '10', " +
                                   " @EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                   ",@APPLICANT_RESUME = '" + _obj_smhr_employee.EMP_PICUTRE + "'");
        }

        #endregion

        #region SMHR_CHANGEPASSWORD

        public static DataTable get_UserInfo(SMHR_ChangePassword _obj_SMHR_ChangePWD)
        {
            return ExecuteQuery("EXEC USP_SMHR_CHANGEPASSWORD @USERNAME = '" + _obj_SMHR_ChangePWD.UserName + "', " +
                                " @OLDPASSWORD = '" + _obj_SMHR_ChangePWD.oldPassword + "', @MODE = '" + _obj_SMHR_ChangePWD.Mode + "'");
        }

        public static bool set_UserInfo(SMHR_ChangePassword _obj_SMHR_ChangePWD)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_CHANGEPASSWORD @USERNAME = '" + _obj_SMHR_ChangePWD.UserName + "', " +
                                " @NEWPASSWORD = '" + _obj_SMHR_ChangePWD.NewPasword + "', @MODE = '" + _obj_SMHR_ChangePWD.Mode + "'," +
                                "@LOGIN_PASS_CODE='" + _obj_SMHR_ChangePWD.PassCode + "', @ORGANISATION = '" + _obj_SMHR_ChangePWD.ORGANISATION_ID + "'"))
                status = true;
            else
                status = false;
            return status;
        }

        #endregion

        #region SMHR_TAX_NHIFSLAB

        public static DataTable get_NHIFSlab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 5)
            {
                return ExecuteQuery("EXEC USP_TAX_NHIF_SLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                    ", @SMHR_TAXBU = '" + _obj_smhr_taxslab.SMHR_TAXBU + "'" +
                                    ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else if (_obj_smhr_taxslab.SMHR_TAXMODE == 6)
            {
                return ExecuteQuery("EXEC USP_TAX_NHIF_SLAB @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                    ", @SMHR_TAXBU = '" + _obj_smhr_taxslab.SMHR_TAXBU + "'" +
                                    ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_TAX_NHIF_SLAB @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'" +
                                    ", @SMHR_TAXBU = '" + _obj_smhr_taxslab.SMHR_TAXBU + "'");
            }
        }

        public static bool set_NHIFSlab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 2)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_NHIF_SLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXBU = '" + _obj_smhr_taxslab.SMHR_TAXBU + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXCREATEDBY = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDBY + "'" +
                                       ", @SMHR_TAXCREATEDDATE = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else if (_obj_smhr_taxslab.SMHR_TAXMODE == 3)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_NHIF_SLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXBU = '" + _obj_smhr_taxslab.SMHR_TAXBU + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXLASTMDFBY  = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFBY + "'" +
                                       ", @SMHR_TAXLASTMDFDATE = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC USP_TAX_NHIF_SLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
        }

        #endregion

        #region SMHR_ENTERTAINMENTSLAB

        public static DataTable get_EntertainmentSlab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 5)
            {
                return ExecuteQuery("EXEC USP_TAX_ENTERTAINMENTSLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                    ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_TAX_ENTERTAINMENTSLAB @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
        }

        public static bool set_EntertainmentSlab(SMHR_TAX_SLAB _obj_smhr_taxslab)
        {
            if (_obj_smhr_taxslab.SMHR_TAXMODE == 2)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_ENTERTAINMENTSLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXCREATEDBY = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDBY + "'" +
                                       ", @SMHR_TAXCREATEDDATE = '" + _obj_smhr_taxslab.SMHR_TAXCREATEDDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else if (_obj_smhr_taxslab.SMHR_TAXMODE == 3)
            {
                return ExecuteNonQuery(" EXEC USP_TAX_ENTERTAINMENTSLAB @SMHR_TAXSERIALNO = '" + _obj_smhr_taxslab.SMHR_TAXSERIALNO + "'" +
                                       ", @SMHR_TAXFROMVALUE = '" + _obj_smhr_taxslab.SMHR_TAXFROMVALUE + "'" +
                                       ", @SMHR_TAXTOVALUE = '" + _obj_smhr_taxslab.SMHR_TAXTOVALUE + "'" +
                                       ", @SMHR_TAXVALUE = '" + _obj_smhr_taxslab.SMHR_TAXVALUE + "'" +
                                       ", @SMHR_TAXLASTMDFBY  = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFBY + "'" +
                                       ", @SMHR_TAXLASTMDFDATE = '" + _obj_smhr_taxslab.SMHR_TAXLASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                       ", @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC USP_TAX_ENTERTAINMENTSLAB @SMHR_ID = '" + _obj_smhr_taxslab.SMHR_ID + "'" +
                                       ", @MODE = '" + _obj_smhr_taxslab.SMHR_TAXMODE + "'");
            }
        }

        #endregion

        #region SMHR_ORGANISATION

        //public static DataTable get_Organisation(SMHR_ORGANISATION _obj_Organisation)
        //{
        //    if (_obj_Organisation.MODE == 1)
        //    {
        //        return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'");
        //    }
        //    else if (_obj_Organisation.MODE == 6)
        //    {
        //        return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'" +
        //                                ",@ORGANISATION_NAME = '" + _obj_Organisation.ORGANISATION_NAME + "'");
        //    }
        //    else
        //    {
        //        return Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'" +
        //                                ",@ORGANISATION_ID = '" + _obj_Organisation.ORGANISATION_ID + "'");
        //    }
        //}

        public static DataTable get_FormsbyModuleId(SMHR_FORMS _obj_forms)
        {
            DataTable dt = new DataTable();
            if (_obj_forms.MODE == 3)
            {
                dt = Dal.ExecuteQuery("EXEC USP_SMHR_USERPRIVILEGES @MODE = '3',@FORM_MODULE_ID = '" + _obj_forms.FORMS_MODULE_ID + "',@FORM_PACKAGE_ID='" + _obj_forms.FORMS_PACKAGE_ID + "'");
            }
            return dt;
        }

        public static DataTable get_Modules(SMHR_FORMS _obj_forms)
        {
            DataTable dt = new DataTable();
            if (_obj_forms.MODE == 2)
            {
                dt = Dal.ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @MODE = '2',@SMHR_MODULE_SUPER_MODULE_ID='" + _obj_forms.FORMS_MODULE_ID + "'");
            }
            else
            {
                dt = Dal.ExecuteQuery("EXEC USP_SMHR_TYPESECURITY @MODE = '7',@TYPESEC_ORG_ID='" + _obj_forms.ORGANISATION_ID + "'");
            }
            return dt;
        }

        public static DataTable get_Package(SMHR_ORGANISATION _obj_Organisation)
        {
            DataTable dt = new DataTable();
            if (_obj_Organisation.MODE == 7)
            {
                dt = Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'");
            }
            else
            {
                dt = Dal.ExecuteQuery("EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'");
            }
            return dt;
        }

        public static bool set_USERPRIVILEGES(SMHR_USERPRIVILEGES _obj_Userprivileges)
        {
            bool status = false;
            switch (_obj_Userprivileges.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_USERPRIVILEGES 'Insert', @SMHR_FORM_ID = '" + _obj_Userprivileges.FORM_ID + "'" +
                                        ", @SMHR_MODULE_ID = '" + _obj_Userprivileges.MODULE_ID + "'" +
                                        ", @SMHR_PACKAGE_ID = '" + _obj_Userprivileges.PACKAGE_ID + "'" +
                                        ", @SMHR_READ = '" + _obj_Userprivileges.READ + "'" +
                                        ", @SMHR_WRITE = '" + _obj_Userprivileges.WRITE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_USERPRIVILEGES 'Update',@SMHR_USERPRIVILEGES_ID = '" + _obj_Userprivileges.USERPRIVILEGES_ID + "'" +
                                        ", @SMHR_FORM_ID = '" + _obj_Userprivileges.FORM_ID + "'" +
                                        ", @SMHR_MODULE_ID = '" + _obj_Userprivileges.MODULE_ID + "'" +
                                        ", @SMHR_PACKAGE_ID = '" + _obj_Userprivileges.PACKAGE_ID + "'" +
                                        ", @SMHR_READ = '" + _obj_Userprivileges.READ + "'" +
                                        ", @SMHR_WRITE = '" + _obj_Userprivileges.WRITE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_Organisation(SMHR_ORGANISATION _obj_Organisation)
        {
            //bool status = false;
            if (_obj_Organisation.MODE == 3)
            {
                return ExecuteNonQuery(" EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'," +
                                       " @ORGANISATION_NAME = '" + _obj_Organisation.ORGANISATION_NAME + "'" +
                                       ", @ORGANISATION_DESC = '" + _obj_Organisation.ORGANISATION_DESC + "'" +
                                       //NEWLY ADDED FOR VARIABLE AMOUNT
                                       ",@ORGANISATION_ISVP='" + _obj_Organisation.ORGANISATION_IS_VARIABLEPAY + "'" +
                                       ",@ORGANISATION_VP_MINPERCENTAGE='" + _obj_Organisation.ORGANISATION_VP_MINPERCENTAGE + "'" +
                                       ",@ORGANISATION_VP_MAXPERCENTAGE='" + _obj_Organisation.ORGANISATION_VP_MAXPERCENTAGE + "'" +
                                       ", @ORGANISATION_ADDRESS1 = '" + _obj_Organisation.ORGANISATION_ADDRESS1 + "'" +
                                       ", @ORGANISATION_ADDRESS2 = '" + _obj_Organisation.ORGANISATION_ADDRESS1 + "'" +
                                       ", @ORGANISATION_PIN = '" + _obj_Organisation.ORGANISATION_PIN + "'" +
                                       ", @ORGANISATION_POSTBOXNO = '" + _obj_Organisation.ORGANISATION_POSTBOXNO + "'" +
                                       ", @ORGANISATION_FAX = '" + _obj_Organisation.ORGANISATION_FAX + "'" +
                                       ", @ORGANISATION_PHONE1 = '" + _obj_Organisation.ORGANISATION_PHONE1 + "'" +
                                       ", @ORGANISATION_PHONE2 = '" + _obj_Organisation.ORGANISATION_PHONE2 + "'" +
                                       ", @ORGANISATION_EMAIL = '" + _obj_Organisation.ORGANISATION_EMAIL + "'" +
                                       ", @ORGANISATION_WEBSITE = '" + _obj_Organisation.ORGANISATION_WEBSITE + "'" +
                                       ", @ORGANISATION_CONTACTPERSON = '" + _obj_Organisation.ORGANISATION_CONTACTPERSON + "'" +
                                       ", @ORGANISATION_PACKAGE_ID = '" + _obj_Organisation.ORGANISATION_PACKAGE_ID + "'" +
                                       ", @ORGANISATION_CREATEDBY = '" + _obj_Organisation.ORGANISATION_CREATEDBY + "'" +
                                       ", @ORGANISATION_CREATEDDATE = '" + Convert.ToDateTime(_obj_Organisation.ORGANISATION_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @ORGANISATION_LASTMDFBY = '" + _obj_Organisation.ORGANISATION_LASTMDFBY + "'" +
                                       ", @ORGANISATION_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Organisation.ORGANISATION_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @ORGANISATION_EMPLOYEES = '" + _obj_Organisation.ORGANISATION_EMPLOYEES1 + "'" +

                                       //new added
                                       ", @ORGANISATION_APPLICANTS = '" + _obj_Organisation.ORGANISATION_APPLICANTS1 + "'" +
                                       ",@ORGANISATION_SUPER_MODULES='" + _obj_Organisation.ORG_SUPER_MODULE_ID + "'" +
                                       ",@ORGANISATION_EMPCODE_MANUAL='" + _obj_Organisation.ORG_IS_EMPCODE_MANUAL + "'" +
                                       ",@ORGANISATION_NOOFZEROS='" + _obj_Organisation.ORGANISATION_NOOFZEROS + "'" +
                                       ",@ORGANISATION_ANNUALPROCESS='" + _obj_Organisation.ORGANISATION_ANNUALPROCESS + "'" +
                                       ",@ORGANISATION_INTEGRATION='" + _obj_Organisation.ORGANISATION_INTEGRATION + "'" +
                                       ",@ORGANISATION_ALTERNATEEMAIL='" + _obj_Organisation.ORGANISATION_ALTERNATE_EMAIL + "'" +
                                       ",@ORGANISATION_NHIF='" + _obj_Organisation.ORGANISATION_NHIF + "'" +
                                       ",@ORGANISATION_NSSF='" + _obj_Organisation.ORGANISATION_NSSF + "'" +
                                       ",@ORGANISATION_VAT='" + _obj_Organisation.ORGANISATION_VAT + "'" +
                                       ",@ORGANISATION_SMOPS_INTEGRATION='" + _obj_Organisation.ORGANISATION_SMOPS_INTEGRATION + "'" +
                                       ",@NotificationMails='" + _obj_Organisation.NotificationMails + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC USP_SMHR_ORGANISATION @MODE = '" + _obj_Organisation.MODE + "'," +
                                       " @ORGANISATION_NAME = '" + _obj_Organisation.ORGANISATION_NAME + "'" +
                                       ", @ORGANISATION_DESC = '" + _obj_Organisation.ORGANISATION_DESC + "'" +
                                       //NEWLY ADDED FOR VARIABLE AMOUNT
                                       ",@ORGANISATION_ISVP='" + _obj_Organisation.ORGANISATION_IS_VARIABLEPAY + "'" +
                                       ",@ORGANISATION_VP_MINPERCENTAGE='" + _obj_Organisation.ORGANISATION_VP_MINPERCENTAGE + "'" +
                                       ",@ORGANISATION_VP_MAXPERCENTAGE='" + _obj_Organisation.ORGANISATION_VP_MAXPERCENTAGE + "'" +
                                       ", @ORGANISATION_ADDRESS1 = '" + _obj_Organisation.ORGANISATION_ADDRESS1 + "'" +
                                       ", @ORGANISATION_ADDRESS2 = '" + _obj_Organisation.ORGANISATION_ADDRESS1 + "'" +
                                       ", @ORGANISATION_PIN = '" + _obj_Organisation.ORGANISATION_PIN + "'" +
                                       ", @ORGANISATION_POSTBOXNO = '" + _obj_Organisation.ORGANISATION_POSTBOXNO + "'" +
                                       ", @ORGANISATION_FAX = '" + _obj_Organisation.ORGANISATION_FAX + "'" +
                                       ", @ORGANISATION_PHONE1 = '" + _obj_Organisation.ORGANISATION_PHONE1 + "'" +
                                       ", @ORGANISATION_PHONE2 = '" + _obj_Organisation.ORGANISATION_PHONE2 + "'" +
                                       ", @ORGANISATION_EMAIL = '" + _obj_Organisation.ORGANISATION_EMAIL + "'" +
                                       ", @ORGANISATION_WEBSITE = '" + _obj_Organisation.ORGANISATION_WEBSITE + "'" +
                                       ", @ORGANISATION_CONTACTPERSON = '" + _obj_Organisation.ORGANISATION_CONTACTPERSON + "'" +
                                       ", @ORGANISATION_PACKAGE_ID = '" + _obj_Organisation.ORGANISATION_PACKAGE_ID + "'" +
                                       ", @ORGANISATION_ID = '" + _obj_Organisation.ORGANISATION_ID + "'" +
                                       ", @ORGANISATION_LASTMDFBY = '" + _obj_Organisation.ORGANISATION_LASTMDFBY + "'" +
                                       ", @ORGANISATION_LASTMDFDATE = '" + Convert.ToDateTime(_obj_Organisation.ORGANISATION_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @ORGANISATION_EMPLOYEES = '" + _obj_Organisation.ORGANISATION_EMPLOYEES1 + "'" +

                                       //new added
                                       ", @ORGANISATION_APPLICANTS = '" + _obj_Organisation.ORGANISATION_APPLICANTS1 + "'" +
                                       ",@ORGANISATION_SUPER_MODULES='" + _obj_Organisation.ORG_SUPER_MODULE_ID + "'" +
                                       ",@ORGANISATION_EMPCODE_MANUAL='" + _obj_Organisation.ORG_IS_EMPCODE_MANUAL + "'" +
                                       ",@ORGANISATION_ANNUALPROCESS='" + _obj_Organisation.ORGANISATION_ANNUALPROCESS + "'" +
                                       ",@ORGANISATION_INTEGRATION='" + _obj_Organisation.ORGANISATION_INTEGRATION + "'" +
                                       ",@ORGANISATION_ALTERNATEEMAIL='" + _obj_Organisation.ORGANISATION_ALTERNATE_EMAIL + "'" +
                                       ",@ORGANISATION_NHIF='" + _obj_Organisation.ORGANISATION_NHIF + "'" +
                                       ",@ORGANISATION_NSSF='" + _obj_Organisation.ORGANISATION_NSSF + "'" +
                                       ",@ORGANISATION_VAT='" + _obj_Organisation.ORGANISATION_VAT + "'" +
                                       ",@ORGANISATION_SMOPS_INTEGRATION='" + _obj_Organisation.ORGANISATION_SMOPS_INTEGRATION + "'" +
                                       ",@NotificationMails='" + _obj_Organisation.NotificationMails + "'");
            }
        }

        #endregion

        #region SMHR_EMP_MED_SCHEME

        public static DataTable get_Emp_Med_scheme(SMHR_EMP_MED_SCHEME _obj_Emp_Med_Scheme)
        {
            if (_obj_Emp_Med_Scheme.Mode == 1)
            {
                return Dal.ExecuteQuery("EXEC USP_EMPLOYEE_MEDICAL_SCHEME @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "',@SMHR_MED_ORG_ID='" + _obj_Emp_Med_Scheme.ORGANISATION_ID + "'");
            }
            else if (_obj_Emp_Med_Scheme.Mode == 5)
            {
                return Dal.ExecuteQuery("EXEC USP_EMPLOYEE_MEDICAL_SCHEME @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'" +
                                        ",@SMHR_MED_BU_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_BU_ID + "'" +
                                        ",@SMHR_MED_EMP_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_EMP_ID + "'" +
                                        ",@SMHR_MED_PERIOD_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_PERIOD_ID +
                                        "',@SMHR_MED_ORG_ID='" + _obj_Emp_Med_Scheme.ORGANISATION_ID + "'");
            }
            else
            {
                return Dal.ExecuteQuery("EXEC USP_EMPLOYEE_MEDICAL_SCHEME @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'" +
                                        ",@SMHR_MED_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_ID +
                                        "',@SMHR_MED_ORG_ID='" + _obj_Emp_Med_Scheme.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_Emp_Med_scheme_Details(SMHR_EMP_MED_SCHEME _obj_Emp_Med_Scheme)
        {
            if (_obj_Emp_Med_Scheme.Mode == 2)
            {
                return Dal.ExecuteQuery("EXEC USP_EMP_MEDICAL_SCHEME_DETAILS @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'");
            }
            else
            {
                return Dal.ExecuteQuery("EXEC USP_EMP_MEDICAL_SCHEME_DETAILS @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'" +
                                        ",@SMHR_MED_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_ID + "'");
            }
        }

        public static bool set_Emp_Med_Scheme(SMHR_EMP_MED_SCHEME _obj_Emp_Med_Scheme)
        {
            bool status = false;
            if (_obj_Emp_Med_Scheme.Mode == 3)
            {
                if (Dal.ExecuteNonQuery("EXEC USP_EMPLOYEE_MEDICAL_SCHEME @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'" +
                                        ",@SMHR_MED_ORG_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_ORG_ID + "'" +
                                        ",@SMHR_MED_BU_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_BU_ID + "'" +
                                        ",@SMHR_MED_PERIOD_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_PERIOD_ID + "'" +
                                        ",@SMHR_MED_EMP_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_EMP_ID + "'" +
                                        ",@SMHR_MED_IP_AV_AMT = '" + _obj_Emp_Med_Scheme.SMHR_MED_IP_AV_AMT + "'" +
                                        ",@SMHR_MED_OP_AV_AMT = '" + _obj_Emp_Med_Scheme.SMHR_MED_OP_AV_AMT + "'" +
                                        ",@SMHR_MED_CREATEDBY = '" + _obj_Emp_Med_Scheme.SMHR_MED_CREATEDBY + "'" +
                                        ",@SMHR_MED_CREATEDDATE = '" + _obj_Emp_Med_Scheme.SMHR_MED_CREATEDDATE + "'"))
                    status = true;
                else
                    status = false;
            }
            else
            {
                if (Dal.ExecuteNonQuery("EXEC USP_EMPLOYEE_MEDICAL_SCHEME @SMHR_MED_MODE = '" + _obj_Emp_Med_Scheme.Mode + "'" +
                                        ",@SMHR_MED_ORG_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_ORG_ID + "'" +
                                        ",@SMHR_MED_BU_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_BU_ID + "'" +
                                        ",@SMHR_MED_PERIOD_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_PERIOD_ID + "'" +
                                        ",@SMHR_MED_EMP_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_EMP_ID + "'" +
                                        ",@SMHR_MED_IP_AV_AMT = '" + _obj_Emp_Med_Scheme.SMHR_MED_IP_AV_AMT + "'" +
                                        ",@SMHR_MED_OP_AV_AMT = '" + _obj_Emp_Med_Scheme.SMHR_MED_OP_AV_AMT + "'" +
                                        ",@SMHR_MED_LASTMDFBY = '" + _obj_Emp_Med_Scheme.SMHR_MED_LASTMDFBY + "'" +
                                        ",@SMHR_MED_LASTMDFDATE = '" + _obj_Emp_Med_Scheme.SMHR_MED_LASTMDFDATE + "'" +
                                        ",@SMHR_MED_ID = '" + _obj_Emp_Med_Scheme.SMHR_MED_ID + "'"))
                    status = true;
                else
                    status = false;
            }
            return status;
        }

        #endregion

        # region SMHR_DEPARTMENT

        public static DataTable get_Department(SMHR_DEPARTMENT _obj_SMHR_Department)
        {
            if (_obj_SMHR_Department.MODE == 3)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "', " +
                                        " @DEPARTMENT_NAME = '" + _obj_SMHR_Department.DEPARTMENT_NAME + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 7)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DIRECTORATE_ID = '" + _obj_SMHR_Department.DIRECTORATE_ID + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 5)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 8)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 9)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 10)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @BUSINESSUNIT_CODE = '" + _obj_SMHR_Department.BUSINESSUNIT_NAME + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'" +
                                        ",@DEPARTMENT_NAME='" + _obj_SMHR_Department.DEPARTMENT_NAME + "'");
            }
            else if (_obj_SMHR_Department.MODE == 11)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @BUSINESSUNIT_CODE = '" + _obj_SMHR_Department.BUSINESSUNIT_NAME + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 12)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID +
                                        "',@DEPARTMENT_ID = '" + _obj_SMHR_Department.DEPARTMENT_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 13)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE='" + _obj_SMHR_Department.MODE + "'" +
                                        ",@DEPARTMENT_ID='" + _obj_SMHR_Department.DEPARTMENT_ID + "'" +
                                        ",@DEPARTMENT_BUID='" + _obj_SMHR_Department.BUID + "'" +
                                        ",@DEPARTMENT_ORG_ID='" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 14)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE='" + _obj_SMHR_Department.MODE + "'" +
                                        ",@DEPARTMENT_BUID='" + _obj_SMHR_Department.BUID + "'" +
                                        ",@DEPARTMENT_ORG_ID='" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_Department.MODE == 15)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @BUSINESSUNIT_CODE = '" + _obj_SMHR_Department.BUSINESSUNIT_NAME + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'" +
                                        ",@DEPARTMENT_CODE='" + _obj_SMHR_Department.DEPARTMENT_CODE + "'");
            }
            //Inserted BY Ragha Sudha.K on Oct 24th 2013
            else if (_obj_SMHR_Department.MODE == 16)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DIRECTORATE_ID = '" + _obj_SMHR_Department.DIRECTORATE_ID + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'");
            }
            //Inserted BY Ragha Sudha.K on Oct 24th 2013
            //Inserted BY Ragha Sudha.K on Sep 10th 2013
            else if (_obj_SMHR_Department.MODE == 20)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'");
            }
            //Inserted BY Ragha Sudha.K on Sep 10th 2013

            else if (_obj_SMHR_Department.MODE == 21)
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ", @DIRECTORATE_ID = '" + _obj_SMHR_Department.DIRECTORATE_ID + "'" +
                                        ", @DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID +
                                        "',@DEPARTMENT_ID='" + _obj_SMHR_Department.DEPARTMENT_ID + "'");

            }
            else
            {
                return Dal.ExecuteQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'," +
                                        " @DEPARTMENT_ID = '" + _obj_SMHR_Department.DEPARTMENT_ID + "'");
            }
        }

        public static bool set_Department(SMHR_DEPARTMENT _obj_SMHR_Department)
        {
            bool status = false;
            if (_obj_SMHR_Department.MODE == 1)
            {
                if (Dal.ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ",@DEPARTMENT_NAME = '" + _obj_SMHR_Department.DEPARTMENT_NAME + "'" +
                                        ",@DEPARTMENT_CODE='" + _obj_SMHR_Department.DEPARTMENT_CODE + "'" +
                                        ",@DEPARTMENT_DESC = '" + _obj_SMHR_Department.DEPARTMENT_DESC + "'" +
                                        ",@DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'" +
                                        ",@DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'" +
                                        ",@DIRECTORATE_ID = '" + _obj_SMHR_Department.DIRECTORATE_ID + "'" +
                                        ",@DEPARTMENT_ISACTIVE = '" + _obj_SMHR_Department.DEPARTMENT_ISACTIVE + "'" +
                                        ",@DEPARTMENT_CREATEDBY = '" + _obj_SMHR_Department.CREATEDBY + "'" +
                                        ",@DEPARTMENT_CREATEDDATE = '" + Convert.ToDateTime(_obj_SMHR_Department.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@DEPARTMENT_LASTMDFBY = '" + _obj_SMHR_Department.LASTMDFBY + "'" +
                                        ",@DEPARTMENT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_SMHR_Department.LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))

                    status = true;
                else
                    status = false;
            }
            else
            {
                if (Dal.ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENT @MODE = '" + _obj_SMHR_Department.MODE + "'" +
                                        ",@DEPARTMENT_ID = '" + _obj_SMHR_Department.DEPARTMENT_ID + "'" +
                                        ",@DEPARTMENT_NAME = '" + _obj_SMHR_Department.DEPARTMENT_NAME + "'" +
                                        ",@DEPARTMENT_CODE='" + _obj_SMHR_Department.DEPARTMENT_CODE + "'" +
                                        ",@DEPARTMENT_DESC = '" + _obj_SMHR_Department.DEPARTMENT_DESC + "'" +
                                        ",@DEPARTMENT_BUID = '" + _obj_SMHR_Department.BUID + "'" +
                                        ",@DEPARTMENT_ORG_ID = '" + _obj_SMHR_Department.ORGANISATION_ID + "'" +
                                        ",@DIRECTORATE_ID = '" + _obj_SMHR_Department.DIRECTORATE_ID + "'" +
                                        ",@DEPARTMENT_ISACTIVE = '" + _obj_SMHR_Department.DEPARTMENT_ISACTIVE + "'" +
                                        ",@DEPARTMENT_LASTMDFBY = '" + _obj_SMHR_Department.LASTMDFBY + "'" +
                                        ",@DEPARTMENT_LASTMDFDATE = '" + Convert.ToDateTime(_obj_SMHR_Department.LASTMDFDATE).ToString("MM/dd/yyy") + "'"))
                    status = true;
                else
                    status = false;
            }
            return status;
        }

        #endregion

        #region SMHR_CREDENTIALS

        public static DataTable get_TBL_LSINFO(int mode)
        {
            DataTable dt = new DataTable();
            dt = ExecuteQuery("EXEC USP_SMHR_TB_LSINFO @Mode = '" + mode + "'");
            return dt;
        }

        public static bool set_TBL_LSINFO(int mode)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_TB_LSINFO @Mode = '" + mode + "'");
        }

        #endregion

        #region GLOBAL_CONFIG

        public static string get_Format(string str1)
        {
            string str_Format = string.Empty;
            DataTable dt = Dal.ExecuteQuery("EXEC USP_SMHR_GLOBALCONFIG @OPERATION = 'select', @GLOBALCONFIG_ORGANISATION_ID = '" + str1 + "'");
            string str = Convert.ToString(dt.Rows[0]["GLOBALCONFIG_DATEFORMAT"]);
            SMHR_DATEFORMAT _obj_Dateformat = new SMHR_DATEFORMAT();
            _obj_Dateformat.OPERATION = operation.Select;
            _obj_Dateformat.DATEFORMAT_ID = Convert.ToInt32(str);
            DataTable dt1 = BLL.get_DateFormat(_obj_Dateformat);
            if (dt1.Rows.Count != 0)
            {
                str_Format = Convert.ToString(dt1.Rows[0]["DATEFORMAT_FORMAT"]);
            }
            return str_Format;
        }

        #endregion

        #region SMHR_EMPOTHERDETAILS

        public static DataTable get_SMHR_EMPOTHERDETAILS(SMHR_EMPOTHERDETAILS _obj_SMHR_EMPOTHERDETAILS)
        {
            if ((_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EMPID.ToString() == "0") && (_obj_SMHR_EMPOTHERDETAILS.OPERATION == operation.Select))
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTHERDETAILS @Operation = 'select'");
            }
            else if (_obj_SMHR_EMPOTHERDETAILS.OPERATION == operation.CheckPass)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTHERDETAILS @Operation='CheckPass',@EMP_ORG_ID='" + _obj_SMHR_EMPOTHERDETAILS.ORGANISATION_ID + "',@EMPOTHERDTL_PASSPORTNO='" + _obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PASSPORTNO + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPOTHERDETAILS @Operation = 'select',@EMPOTHERDTL_EMPID = '" + _obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EMPID + "'");
            }
        }

        public static bool set_SMHR_EMPOTHERDETAILS(SMHR_EMPOTHERDETAILS _obj_SMHR_EMPOTHERDETAILS)
        {
            bool status = false;
            switch (_obj_SMHR_EMPOTHERDETAILS.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPOTHERDETAILS @Operation = '" + _obj_SMHR_EMPOTHERDETAILS.OPERATION + "'" +
                                        ",@EMPOTHERDTL_EMPID = '" + Convert.ToInt32(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EMPID) + "'" +
                                        ",@EMPOTHERDTL_IDNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_IDNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PINNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PINNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NSSFNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NSSFNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NHIFNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NHIFNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_TAXRELIEFAMOUNT = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_TAXRELIEFAMOUNT).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NNAKNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NNAKNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_HELBNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_HELBNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_COOPNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_COOPNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_CREATEDBY = '" + Convert.ToInt32(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_CREATEDBY) + "'" +
                                        ",@EMPOTHERDTL_CREATEDDATE = '" + Convert.ToDateTime(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPOTHERDTL_PASSPORTNO='" + _obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PASSPORTNO + "'" +
                                        ",@EMPOTHERDTL_KRANO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_KRANO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PPIDNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PPIDNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PROJECT_ID = " + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PROJECT_ID).Replace("'", "''") + "" +
                                        ",@EMPOTHERDTL_FUNDING_ID=" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_FUNDING_ID).Replace("'", "''") + "" +
                                        ",@EMPOTHERDTL_PASSPORTEXPIRYDATE=" + (_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EXPIRYDATE == null ? "null" : "'" + _obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EXPIRYDATE + "'") + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPOTHERDETAILS @Operation = '" + _obj_SMHR_EMPOTHERDETAILS.OPERATION + "'" +
                                        ",@EMPOTHERDTL_EMPID = '" + Convert.ToInt32(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EMPID) + "'" +
                                        ",@EMPOTHERDTL_IDNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_IDNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PINNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PINNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NSSFNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NSSFNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NHIFNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NHIFNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_TAXRELIEFAMOUNT = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_TAXRELIEFAMOUNT).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_NNAKNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_NNAKNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_HELBNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_HELBNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_COOPNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_COOPNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_MODIFIEDBBY = '" + Convert.ToInt32(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_MODIFIEDBBY) + "'" +
                                        ",@EMPOTHERDTL_MODIFIEDDATE = '" + Convert.ToDateTime(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_MODIFIEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPOTHERDTL_PASSPORTNO='" + _obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PASSPORTNO + "'" +
                                        ",@EMPOTHERDTL_KRANO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_KRANO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PPIDNO = '" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PPIDNO).Replace("'", "''") + "'" +
                                        ",@EMPOTHERDTL_PROJECT_ID = " + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_PROJECT_ID).Replace("'", "''") + "" +
                                        ",@EMPOTHERDTL_FUNDING_ID=" + Convert.ToString(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_FUNDING_ID).Replace("'", "''") + "" +
                                        ",@EMPOTHERDTL_PASSPORTEXPIRYDATE='" + Convert.ToDateTime(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_EXPIRYDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPOTHERDTL_ID = '" + Convert.ToInt32(_obj_SMHR_EMPOTHERDETAILS.EMPOTHERDTL_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_PAYITEMS_EMP

        public static DataTable get_EmpDetails(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "', " +
                                    " @BUID = '" + _obj_smhr_emp_payitems.BUID + "'");
            }
            else if (_obj_smhr_emp_payitems.MODE == 6)
            {
                return ExecuteQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "', " +
                                    " @BUID = '" + _obj_smhr_emp_payitems.BUID + "', @SMHR_EMP_GRADEID = '" + _obj_smhr_emp_payitems.SMHR_EMP_GRADEID + "'");
            }
            else if (_obj_smhr_emp_payitems.MODE == 7)
            {
                return ExecuteQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "', " +
                                    " @BUID = '" + _obj_smhr_emp_payitems.BUID + "', @PAYITEM_ID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_ID +
                                    "', @SMHR_EMP_GRADEID= '" + _obj_smhr_emp_payitems.SMHR_EMP_GRADEID + "'");
                //,@SMHR_EMP_PAYITEMS_ORGANISATION_ID='"+_obj_smhr_emp_payitems.ORGANISATION_ID+"'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_PAYITEM_WISE_EMPLOYEE @MODE = '" + _obj_smhr_emp_payitems.MODE + "', " +
                                    " @BUID = '" + _obj_smhr_emp_payitems.BUID + "'," +
                                    " @PAYITEM_ID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_ID + "'");//,"+
                //" @SMHR_EMP_PAYITEMS_ORGANISATION_ID='"+_obj_smhr_emp_payitems.ORGANISATION_ID+"'");
            }
        }

        public static DataTable get_EmpSalaryStruct(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            return ExecuteQuery("EXEC USP_SMHR_PAYITEMS_EMP @Operation = 'Select', @SMHR_EMP_PAYITEMS_EMPID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID + "'");
        }

        public static bool set_EmpPayElements(SMHR_PAYITEMS_EMP _obj_smhr_emp_payitems)
        {
            if (_obj_smhr_emp_payitems.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS_EMP @Operation = 'Insert'" +
                                       ",@SMHR_EMP_PAYITEMS_EMPID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_EMPID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_PAYITEMID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_PERIODID = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PERIODID) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_VALUE = '" + Convert.ToDouble(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_VALUE) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CALMODE = '" + Convert.ToString(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CALMODE) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CHECKED = '" + Convert.ToBoolean(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CHECKED) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CREATEDBY = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDBY) + "'" +
                                       ",@SMHR_EMP_PAYITEMS_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_CREATEDDATE).ToString("MM/dd/yyyy") + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_PAYITEMS_EMP @Operation = 'Delete', @SMHR_EMP_PAYITEMS_PAYITEMID  = '" + Convert.ToInt32(_obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PAYITEMID) + "', @SMHR_EMP_PAYITEMS_PERIODID = '" + _obj_smhr_emp_payitems.SMHR_EMP_PAYITEMS_PERIODID + "'");
            }//@SMHR_EMP_PAYITEMS_EMPID  = '" + Convert.ToInt32(_obj_smhr_emp_payitems.@SMHR_EMP_PAYITEMS_EMPID) + "',
        }

        #endregion

        #region SMHR_SUPERVISOR_BU

        public static DataTable get_Sup_BusinessUnit(SMHR_LOGININFO obj_smhr_logininfo)
        {
            if (obj_smhr_logininfo.OPERATION == operation.Select)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Select',@BUSINESSUNIT_ORGANISATION_ID='" + obj_smhr_logininfo.ORGANISATION_ID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.Check)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Check',@EMP_BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.Get)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Get',@EMP_BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.Select_New)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Select_New',@EMP_BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.Check_New)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Check_New',@BUSINESSUNIT_CODE='" + obj_smhr_logininfo.LOGIN_BUSINESSUNITID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.Validate1)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Validate1',@BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "',@BUSINESSUNIT_ORGANISATION_ID='" + obj_smhr_logininfo.ORGANISATION_ID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.getEmp)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @Operation='getEmp',@PRDDTLID_ID='" + obj_smhr_logininfo.LOGIN_PRDDTL + "',@PERIOD_ID='" + obj_smhr_logininfo.LOGIN_PERIOD + "',@BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "',@ORGANISATION_ID='" + obj_smhr_logininfo.ORGANISATION_ID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.SELECTEMPLOYEE)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @Operation='SELECTEMPLOYEE',@PRDDTLID_ID='" + obj_smhr_logininfo.LOGIN_PRDDTL + "',@PERIOD_ID='" + obj_smhr_logininfo.LOGIN_PERIOD + "',@ORGANISATION_ID='" + obj_smhr_logininfo.ORGANISATION_ID + "'"));
            }
            else if (obj_smhr_logininfo.OPERATION == operation.CheckEmp)
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @Operation='CheckEmp',@PRDDTLID_ID='" + obj_smhr_logininfo.LOGIN_PRDDTL + "',@PERIOD_ID='" + obj_smhr_logininfo.LOGIN_PERIOD + "',@BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "',@ORGANISATION_ID='" + obj_smhr_logininfo.ORGANISATION_ID + "'"));
            }
            else
            {
                return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Check1', @BUSINESSUNIT_CODE='" + obj_smhr_logininfo.LOGIN_BUSINESSUNITID + "'"));
                //return (Dal.ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT_NEW @operation='Check1', @EMP_BUSINESSUNIT_ID='" + obj_smhr_logininfo.BUID + "'"));
            }
        }

        #endregion

        #region SMHR_LEAVE_YEAR_END_PROCESS

        public static DataTable get_From_Period(SMHR_LEAVE_YEAR_END_PROCESS _obj_Leave)
        {
            if (_obj_Leave.MODE == 1)
            {
                return BLL.ExecuteQuery("EXEC USP_SMHR_LEAVEYEAREND @MODE = '" + _obj_Leave.MODE + "'");
            }
            else
            {
                return BLL.ExecuteQuery("EXEC USP_SMHR_LEAVEYEAREND @MODE = '" + _obj_Leave.MODE + "'" +
                                        ", @FROM_PERIOD = '" + _obj_Leave.FROM_PERIOD + "'");
            }
        }

        public static DataTable get_To_Period(SMHR_LEAVE_YEAR_END_PROCESS _obj_Leave)
        {
            return BLL.ExecuteQuery("EXEC USP_SMHR_LEAVEYEAREND @MODE = '" + _obj_Leave.MODE + "'" +
                                    ", @FROM_PERIOD = '" + _obj_Leave.FROM_PERIOD + "'");
        }

        public static bool set_Leave_Year_Proces(SMHR_LEAVE_YEAR_END_PROCESS _obj_Leave)
        {
            return BLL.ExecuteNonQuery("EXEC USP_SMHR_LEAVEYEAREND @MODE = '" + _obj_Leave.MODE + "'" +
                                       ", @FROM_PERIOD = '" + _obj_Leave.FROM_PERIOD + "'" +
                                       ", @TO_PERIOD = '" + _obj_Leave.TO_PERIOD + "'");
        }

        #endregion

        #region SMHR_EMPLOYEE_PHYSICALDETAILS

        public static DataTable get_PhysicalDetails(SMHR_EMP_PHYSICALDETAILS _obj_SMHR_EMPPHYSICALDETAILS)
        {
            if (_obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EMPID.ToString() == "0")
            {
                return (ExecuteQuery("EXEC USP_SMHR_EMP_PHYSICALDETAILS @operation='Select_New'"));
            }
            else
            {
                return (ExecuteQuery("EXEC USP_SMHR_EMP_PHYSICALDETAILS @operation='Select_New',@EMPPHYSICALDTL_EMPID='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EMPID + "'"));
            }
        }

        public static bool set_PhysicalDetails(SMHR_EMP_PHYSICALDETAILS _obj_SMHR_EMPPHYSICALDETAILS)
        {
            bool status = false;
            switch (_obj_SMHR_EMPPHYSICALDETAILS.OPERATION)
            {
                case operation.Insert_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_PHYSICALDETAILS @operation='" + _obj_SMHR_EMPPHYSICALDETAILS.OPERATION + "'" +
                                        ",@EMPPHYSICALDTL_EMPID='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EMPID + "'" +
                                        ",@EMPPHYSICALDTL_HEIGHT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HEIGHT + "'" +
                                        ",@EMPPHYSICALDTL_WEIGHT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_WEIGHT + "'" +
                                        ",@EMPPHYSICALDTL_COLOR='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_COLOR + "'" +
                                        ",@EMPPHYSICALDTL_IDENTIFICATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_IDENTIFICATION + "'" +
                                        ",@EMPPHYSICALDTL_EYEPOWER='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EYEPOWER + "'" +
                                        ",@EMPPHYSICALDTL_HANDICAP='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HANDICAP + "'" +
                                        ",@EMPPHYSICALDTL_HANDICAP_YES='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HANDICAP_YES + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALTREATMENT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALTREATMENT + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALHOSPITAL='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALHOSPITAL + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALDURATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALDURATION + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALSTATUS='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALSTATUS + "'" +
                                        ",@EMPPHYSICALDTL_MENTALTREATMENT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALTREATMENT + "'" +
                                        ",@EMPPHYSICALDTL_MENTALHOSPITAL='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALHOSPITAL + "'" +
                                        ",@EMPPHYSICALDTL_MENTALDURATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALDURATION + "'" +
                                        ",@EMPPHYSICALDTL_MENTALSTATUS='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALSTATUS + "'" +
                                        ",@EMPPHYSICALDTL_CREATEDBY='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_CREATEDBY + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALDETAILSDOC='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALDETAILSDOC + "'" +
                                        ",@EMPPHYSICALDTL_CREATEDDATE='" + Convert.ToDateTime(_obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_PHYSICALDETAILS @operation='" + _obj_SMHR_EMPPHYSICALDETAILS.OPERATION + "'" +
                                        ",@EMPPHYSICALDTL_EMPID='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EMPID + "'" +
                                        ",@EMPPHYSICALDTL_HEIGHT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HEIGHT + "'" +
                                        ",@EMPPHYSICALDTL_WEIGHT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_WEIGHT + "'" +
                                        ",@EMPPHYSICALDTL_COLOR='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_COLOR + "'" +
                                        ",@EMPPHYSICALDTL_IDENTIFICATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_IDENTIFICATION + "'" +
                                        ",@EMPPHYSICALDTL_EYEPOWER='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_EYEPOWER + "'" +
                                        ",@EMPPHYSICALDTL_HANDICAP='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HANDICAP + "'" +
                                        ",@EMPPHYSICALDTL_HANDICAP_YES='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_HANDICAP_YES + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALTREATMENT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALTREATMENT + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALHOSPITAL='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALHOSPITAL + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALDURATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALDURATION + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALSTATUS='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALSTATUS + "'" +
                                        ",@EMPPHYSICALDTL_MENTALTREATMENT='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALTREATMENT + "'" +
                                        ",@EMPPHYSICALDTL_MENTALHOSPITAL='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALHOSPITAL + "'" +
                                        ",@EMPPHYSICALDTL_MENTALDURATION='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALDURATION + "'" +
                                        ",@EMPPHYSICALDTL_MENTALSTATUS='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MENTALSTATUS + "'" +
                                        ",@EMPPHYSICALDTL_MODIFIEDBBY='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MODIFIEDBBY + "'" +
                                        ",@EMPPHYSICALDTL_PHYSICALDETAILSDOC='" + _obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_PHYSICALDETAILSDOC + "'" +
                                        ",@EMPPHYSICALDTL_MODIFIEDDATE='" + Convert.ToDateTime(_obj_SMHR_EMPPHYSICALDETAILS.EMPPHYSICALDTL_MODIFIEDDATE).ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_EMP_NEWCONTACTS(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select_New)
            {
                return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Select_New'"));
            }
            // for checking the existance of the employee email id
            else if (_obj_smhr_employee.OPERATION == operation.Check)
            {
                if (_obj_smhr_employee.EMP_BUSINESSUNIT_ID == null)
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Check',@EMP_ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID + "'"));
                }
                else
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Check',@EMP_ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID + "',@EMP_BUID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'"));
                }
            }
            else if (_obj_smhr_employee.OPERATION == operation.CheckSkype)
            {
                if (_obj_smhr_employee.EMP_BUSINESSUNIT_ID == null)
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='CheckSkype',@EMP_ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_SKYPEID='" + _obj_smhr_employee.EMP_SKYPEID + "'"));
                }
                else
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='CheckSkype',@EMP_ORG_ID='" + _obj_smhr_employee.ORGANISATION_ID + "',@EMP_SKYPEID='" + _obj_smhr_employee.EMP_SKYPEID + "',@EMP_BUID='" + _obj_smhr_employee.EMP_BUSINESSUNIT_ID + "'"));
                }
            }
            else if (_obj_smhr_employee.OPERATION == operation.Select1)
            {
                return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Select1',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'"));
            }
            else
            {
                if (_obj_smhr_employee.OPERATION == operation.Select_EMPID)
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Select_EMPID'"));
                }
                else
                {
                    return (ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='Select_New',@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'"));
                }
            }
        }

        public static bool set_EMP_NEWCONTACTS(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            bool status = false;
            switch (_obj_smhr_employee.OPERATION)
            {
                case operation.Insert1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@EMP_MOBILENO='" + _obj_smhr_employee.EMP_MOBILENO + "'" +
                                        ",@EMP_LANDLINENO='" + _obj_smhr_employee.EMP_LANDLINENO + "'" +
                                        ",@EMP_EMAILID='" + _obj_smhr_employee.EMP_EMAILID + "'" +
                                        ",@EMP_SKYPEID='" + _obj_smhr_employee.EMP_SKYPEID + "'" +
                                        ",@EMP_EXTENSIONNO='" + _obj_smhr_employee.EMP_EXTENSION + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@LOGIN_PASS_CODE='" + _obj_smhr_employee.PASSCODE + "'" +
                                        ",@LOGIN_PASSWORD='" + _obj_smhr_employee.PASSWORD + "'" +
                                        ",@LOGIN_TYPE='" + _obj_smhr_employee.USER_GROUP + "'" +
                                        ",@CREATEDBY='" + _obj_smhr_employee.CREATEDBY + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_MODIFIED @operation='" + _obj_smhr_employee.OPERATION + "'" +
                                        ",@EMP_ID='" + _obj_smhr_employee.EMP_ID + "'" +
                                        ",@LOGIN_PASS_CODE='" + _obj_smhr_employee.PASSCODE + "'" +
                                        ",@LOGIN_PASSWORD='" + _obj_smhr_employee.PASSWORD + "'" +
                                        ",@LOGIN_TYPE='" + _obj_smhr_employee.USER_GROUP + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPIMPORTANTDATES

        public static DataTable get_SMHR_EMPIMPORTANTDATES(SMHR_EMPIMPORTANTDATES _obj_Smhr_EmpImportantDates)
        {
            if ((_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_EMPID.ToString() == "0") && (_obj_Smhr_EmpImportantDates.OPERATION == operation.Select))
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPIMPORTANTDATES @Operation = 'select'");
            }
            else if (_obj_Smhr_EmpImportantDates.OPERATION == operation.CheckPass)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPIMPORTANTDATES @Operation='CheckPass',@EMP_ORG_ID='" + _obj_Smhr_EmpImportantDates.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPIMPORTANTDATES @Operation = 'select',@EMPIMPORTANTDATES_EMPID = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_EMPID + "'");
            }
        }

        public static bool set_SMHR_EMPIMPORTANTDATES(SMHR_EMPIMPORTANTDATES _obj_Smhr_EmpImportantDates)
        {
            bool status = false;
            switch (_obj_Smhr_EmpImportantDates.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPIMPORTANTDATES @Operation = '" + _obj_Smhr_EmpImportantDates.OPERATION + "'" +
                                        ",@EMPIMPORTANTDATES_EMPID = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_EMPID) + "'" +
                                        ",@EMPIMPORTANTDATES_ORG_ID = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORG_ID) + "'" +
                                        ",@EMPIMPORTANTDATES_ANNIVERSARYDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ANNIVERSARYDATE + "'" +
                                        ",@EMPIMPORTANTDATES_PENSIONJOINEDDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_PENSIONJOINEDDATE + "'" +
                                        ",@EMPIMPORTANTDATES_MEDICALTERMINATIONDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_MEDICALTERMINATIONDATE + "'" +
                                        ",@EMPIMPORTANTDATES_CREATEDBY = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_CREATEDBY) + "'" +
                                        ",@EMPIMPORTANTDATES_ORIENTATIONDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORIENTATIONDATE + "'" +
                                        ",@EMPIMPORTANTDATES_ORIENTATIONDOC = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORIENTATIONDOC + "'" +
                                        ",@EMPIMPORTANTDATES_OFFICIALSCERECTSACTDOC = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_OFFICIALSCERECTSACTDOC + "'" +
                                        ",@EMPIMPORTANTDATES_NEXTOFKINFORM = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_NEXTOFKINFORM + "'" +
                                        ",@EMPIMPORTANTDATES_PSC2_1 = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_PSC2_1 + "'" +
                                        ",@EMPIMPORTANTDATES_STAFFPARTICULARS = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_STAFFPARTICULARS + "'" +
                                        ",@EMPIMPORTANTDATES_CREATEDDATE = '" + Convert.ToDateTime(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_EMPIMPORTANTDATES @Operation = '" + _obj_Smhr_EmpImportantDates.OPERATION + "'" +
                                        ",@EMPIMPORTANTDATES_EMPID = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_EMPID) + "'" +
                                        ",@EMPIMPORTANTDATES_ORG_ID = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORG_ID) + "'" +
                                        ",@EMPIMPORTANTDATES_ANNIVERSARYDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ANNIVERSARYDATE + "'" +
                                        ",@EMPIMPORTANTDATES_PENSIONJOINEDDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_PENSIONJOINEDDATE + "'" +
                                        ",@EMPIMPORTANTDATES_MEDICALTERMINATIONDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_MEDICALTERMINATIONDATE + "'" +
                                        ",@EMPIMPORTANTDATES_MODIFIEDBBY = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_MODIFIEDBBY) + "'" +
                                        ",@EMPIMPORTANTDATES_MODIFIEDDATE = '" + Convert.ToDateTime(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_MODIFIEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@EMPIMPORTANTDATES_ORIENTATIONDATE = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORIENTATIONDATE + "'" +
                                        ",@EMPIMPORTANTDATES_ORIENTATIONDOC = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ORIENTATIONDOC + "'" +
                                        ",@EMPIMPORTANTDATES_OFFICIALSCERECTSACTDOC = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_OFFICIALSCERECTSACTDOC + "'" +
                                        ",@EMPIMPORTANTDATES_NEXTOFKINFORM = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_NEXTOFKINFORM + "'" +
                                        ",@EMPIMPORTANTDATES_PSC2_1 = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_PSC2_1 + "'" +
                                        ",@EMPIMPORTANTDATES_STAFFPARTICULARS = '" + _obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_STAFFPARTICULARS + "'" +
                                        ",@EMPIMPORTANTDATES_ID = '" + Convert.ToInt32(_obj_Smhr_EmpImportantDates.EMPIMPORTANTDATES_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        //#region SMHR_DOCUMENT_UPLOAD

        //public static bool insertupload(SMHR_UPLOAD _obj_smhr_upload)
        //{

        //    try
        //    {
        //        bool status = false;
        //        switch (_obj_smhr_upload.OPERATION)
        //        {

        //            case operation.Insert:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_UPLOAD @OPERATION='Insert',@UPLOAD_ORGANISATION_ID='" + _obj_smhr_upload.ORG_ID + "'," +
        //                                                 " @UPLOAD_BUSINESSUNIT_ID='" + _obj_smhr_upload.BUSINESS_UNIT + "'," +
        //                                                 " @UPLOAD_FILENAME='" + _obj_smhr_upload.FILE_NAME + "'," +
        //                                                 " @UPLOAD_NEW_FOLDER='" + _obj_smhr_upload.NEW_FOLDER + "'," +
        //                                                 " @UPLOAD_FOLDER_NAME='" + _obj_smhr_upload.FOLDER_NAME + "'," +
        //                                                 " @UPLOAD_FILE_TYPE='" + _obj_smhr_upload.FILE_TYPE + "'," +
        //                                                 " @UPLOAD_CREATEDDATE='" + _obj_smhr_upload.UPLOAD_CREATEDDATE + "'," +
        //                                                 " @UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "' "))
        //                {
        //                    status = true;
        //                }
        //                break;

        //            default:

        //                break;
        //        }
        //        return status;

        //    }
        //    catch (Exception ex)
        //    {
        //        throw ex;
        //    }
        //}

        //public static DataTable Get_SMHR_UPLOAD(SMHR_UPLOAD _obj_smhr_upload)
        //{
        //    DataTable dt = new DataTable();
        //    if (_obj_smhr_upload.OPERATION == operation.Select)
        //    {
        //        string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select',@UPLOAD_BUSINESSUNIT_ID='" + _obj_smhr_upload.BUSINESS_UNIT + "'";
        //        dt = ExecuteQuery(query);
        //    }

        //    if (_obj_smhr_upload.OPERATION == operation.Select1)
        //    {
        //        string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select1'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_upload.OPERATION == operation.Select2)
        //    {
        //        string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select2',@UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_upload.OPERATION == operation.Delete)
        //    {
        //        string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Delete',@UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "'";
        //        ExecuteNonQuery(query);
        //    }
        //    return dt;

        //}

        //#endregion

        #region SMHR_DOCUMENT_UPLOAD

        public static bool insertupload(SMHR_UPLOAD _obj_smhr_upload)
        {
            try
            {
                bool status = false;
                switch (_obj_smhr_upload.OPERATION)
                {
                    case operation.Insert:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_UPLOAD @OPERATION='Insert',@UPLOAD_ORGANISATION_ID='" + _obj_smhr_upload.ORG_ID + "'," +
                                                " @UPLOAD_BUSINESSUNIT_ID='" + _obj_smhr_upload.BUSINESS_UNIT + "'," +
                                                " @UPLOAD_FILENAME='" + _obj_smhr_upload.FILE_NAME + "'," +
                                                " @UPLOAD_NEW_FOLDER='" + _obj_smhr_upload.NEW_FOLDER + "'," +
                                                " @UPLOAD_FOLDER_NAME='" + _obj_smhr_upload.FOLDER_NAME + "'," +
                                                " @UPLOAD_FILE_TYPE='" + _obj_smhr_upload.FILE_TYPE + "'," +
                                                "@CREATED_BY='" + _obj_smhr_upload.CREATED_BY + "'," +
                                                " @UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "' "))
                        {
                            status = true;
                        }
                        break;
                    default:

                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable Get_SMHR_UPLOAD(SMHR_UPLOAD _obj_smhr_upload)
        {
            DataTable dt = new DataTable();
            if (_obj_smhr_upload.OPERATION == operation.Select)
            {
                string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select',@UPLOAD_BUSINESSUNIT_ID='" + _obj_smhr_upload.BUSINESS_UNIT + "'";
                dt = ExecuteQuery(query);
            }

            if (_obj_smhr_upload.OPERATION == operation.Select1)
            {
                string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select1',@UPLOAD_ORGANISATION_ID='" + _obj_smhr_upload.ORGANISATION_ID + "',@EMP_LOGIN_ID='" + _obj_smhr_upload.LOGIN_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_upload.OPERATION == operation.Select2)
            {
                string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Select2',@UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_upload.OPERATION == operation.Delete)
            {
                string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Delete',@UPLOAD_FILE_PATH='" + _obj_smhr_upload.FILE_PATH + "'";
                ExecuteNonQuery(query);
            }
            if (_obj_smhr_upload.OPERATION == operation.Check)
            {
                string query = "EXEC USP_SMHR_UPLOAD @OPERATION='Check',@UPLOAD_FILENAME='" + _obj_smhr_upload.FILE_NAME +
                               "',@UPLOAD_ORGANISATION_ID='" + _obj_smhr_upload.ORGANISATION_ID +
                               "',@UPLOAD_FOLDER_NAME='" + _obj_smhr_upload.FOLDER_NAME + "'";
                dt = ExecuteQuery(query);
            }

            return dt;
        }

        #endregion

        //#region SMHR_BONUS

        //public static bool insert(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        //{
        //    try
        //    {
        //        bool status = false;
        //        switch (_obj_smhr_bonusmaster.OPERATION)
        //        {

        //            case operation.Insert:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Insert',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@RESTRICTION_AMOUNT='" + _obj_smhr_bonusmaster.RESTRICTION_AMOUNT + "',@MINIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MINIMUM_BONUS_PERCENTAGE + "',@MAXIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MAXIMUM_BONUS_PERCENTAGE + "',@PAYITEM_HEAD='" + _obj_smhr_bonusmaster.PAYITEM_HEAD + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            case operation.Select1:
        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Select1'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            case operation.Insert1:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Insert1', @BONUS_PAYITEM_BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_BONUS_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;

        //            case operation.Update:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@RESTRICTION_AMOUNT='" + _obj_smhr_bonusmaster.RESTRICTION_AMOUNT + "',@MINIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MINIMUM_BONUS_PERCENTAGE + "',@MAXIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MAXIMUM_BONUS_PERCENTAGE + "',@PAYITEM_HEAD='" + _obj_smhr_bonusmaster.PAYITEM_HEAD + "',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            //case operation.Update1:

        //            //    if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update1', @BONUS_PAYITEM_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "'"))
        //            //    {
        //            //        status = true;
        //            //    }
        //            case operation.Update1:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update1', @BONUS_PAYITEM_BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_BONUS_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            default:

        //                break;
        //        }
        //        return status;

        //    }
        //    catch (Exception ex)
        //    {
        //        throw ex;
        //    }
        //}

        //public static DataTable Get_SMHR_BONUSMASTER1(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        //{
        //    DataTable dt = new DataTable();
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Select1)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select1'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Select)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Select2)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select2'";
        //        dt = ExecuteQuery(query);
        //    }

        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Select3)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select3'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Get)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Get',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "'";
        //        dt = ExecuteQuery(query);
        //    }

        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Edit)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Edit',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Check)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Check',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Check1)
        //    {
        //        string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Check1',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }

        //    return dt;

        //}

        //public static bool bonus_trans_insrt(smhr_Bonus_trans _obj_bonus_trans)
        //{

        //    try
        //    {
        //        bool status = false;
        //        switch (_obj_bonus_trans.OPERATION)
        //        {

        //            case operation.Insert:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Insert',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            case operation.Validate:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Validate',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            case operation.Delete1:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Delete1',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_trans_ID=" + _obj_bonus_trans.Bonus_trans_ID + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;
        //            case operation.Approve:

        //                if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Approve',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "',@BONUS_COMMIT='" + _obj_bonus_trans.BONUS_COMMIT + "',@BONUS_FINALCOMMIT='" + _obj_bonus_trans.BONUS_FINALCOMMIT + "',@BONUS_BONUSVALUE='" + _obj_bonus_trans.BONUS_BONUSVALUE + "',@Bonus_trans_ID='" + _obj_bonus_trans.Bonus_trans_ID + "'"))
        //                {
        //                    status = true;
        //                }
        //                break;

        //            default:

        //                break;
        //        }
        //        return status;

        //    }
        //    catch (Exception ex)
        //    {
        //        throw ex;
        //    }
        //}

        //public static DataTable Get_SMHR_BONUSMASTER(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        //{
        //    DataTable dt = new DataTable();
        //    if (_obj_smhr_bonusmaster.OPERATION == operation.Select)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Select',@BONUS_BU_ID='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@BONUS_PERIOD_ID='" + _obj_smhr_bonusmaster.PERIOD + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonusmaster.PERIOD_ELEMENTS + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    return dt;
        //}

        //public static DataTable Get_SMHR_BONUS_TRANS1(smhr_Bonus_trans _obj_smhr_bonus_trans)
        //{
        //    DataTable dt = new DataTable();
        //    if (_obj_smhr_bonus_trans.OPERATION == operation.Empty)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Empty',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    else if (_obj_smhr_bonus_trans.OPERATION == operation.Check)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Check',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    else if (_obj_smhr_bonus_trans.OPERATION == operation.Delete)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Delete',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonus_trans.OPERATION == operation.Empty1)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Empty1',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonus_trans.OPERATION == operation.Get)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Get',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
        //        dt = ExecuteQuery(query);
        //    }
        //    if (_obj_smhr_bonus_trans.OPERATION == operation.Login)
        //    {
        //        string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Login',@APPRCYCLE_ID='"+_obj_smhr_bonus_trans.APPRCYCLE_ID+"'";
        //        dt = ExecuteQuery(query);
        //    }

        //    return dt;
        //}

        //public static DataTable fetch_PayItems(SMHR_PAYITEMS _obj_Smhr_Payitems)
        //{
        //    DataTable dt = new DataTable();
        //    if (_obj_Smhr_Payitems.OPERATION == operation.Select)
        //    {
        //        string query = "EXEC USP_SMHR_GETPAYITEMS @OPERATION='Select',@PAYITEM_ORGANISATION_ID='" + _obj_Smhr_Payitems.ORGANISATION_ID + "'";
        //        dt = ExecuteQuery(query);

        //    }
        //    else if (_obj_Smhr_Payitems.OPERATION == operation.Select1)
        //    {
        //        string query = "EXEC USP_SMHR_GETPAYITEMS @OPERATION='Select1' ";
        //        dt = ExecuteQuery(query);
        //    }
        //    return dt;
        //}

        //#endregion

        #region SMHR_BONUS

        public static bool insert(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        {
            try
            {
                bool status = false;
                switch (_obj_smhr_bonusmaster.OPERATION)
                {
                    case operation.Insert:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Insert',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@RESTRICTION_AMOUNT='" + _obj_smhr_bonusmaster.RESTRICTION_AMOUNT + "',@MINIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MINIMUM_BONUS_PERCENTAGE + "',@MAXIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MAXIMUM_BONUS_PERCENTAGE + "',@PAYITEM_HEAD='" + _obj_smhr_bonusmaster.PAYITEM_HEAD + "',@Bonus_org_id='" + _obj_smhr_bonusmaster.ORGANISATION_ID + "',@CREATED_BY='" + _obj_smhr_bonusmaster.CREATEDBY + "',@CREATED_DATE='" + Convert.ToDateTime(_obj_smhr_bonusmaster.CREATEDDATE).ToString("MM/dd/yyyy") + "',@MODIFIED_BY='" + _obj_smhr_bonusmaster.MODIFIED_BY + "',@MODIFIED_DATE='" + Convert.ToDateTime(_obj_smhr_bonusmaster.MODIFIED_DATE).ToString("MM/dd/yyyy") + "'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Select1:
                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Select1'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Insert1:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Insert1', @BONUS_PAYITEM_BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_BONUS_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Update:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@RESTRICTION_AMOUNT='" + _obj_smhr_bonusmaster.RESTRICTION_AMOUNT + "',@MINIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MINIMUM_BONUS_PERCENTAGE + "',@MAXIMUM_BONUS_PERCENTAGE='" + _obj_smhr_bonusmaster.MAXIMUM_BONUS_PERCENTAGE + "',@PAYITEM_HEAD='" + _obj_smhr_bonusmaster.PAYITEM_HEAD + "',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "',@MODIFIED_BY='" + _obj_smhr_bonusmaster.MODIFIED_BY + "',@MODIFIED_DATE='" + Convert.ToDateTime(_obj_smhr_bonusmaster.MODIFIED_DATE).ToString("MM/dd/yyyy") + "'"))
                        {
                            status = true;
                        }
                        break;
                    //case operation.Update1:

                    //    if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update1', @BONUS_PAYITEM_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "'"))
                    //    {
                    //        status = true;
                    //    }
                    case operation.Update1:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUSMASTER2 @OPERATION='Update1', @BONUS_PAYITEM_BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_BONUS_ID + "',@BONUS_PAYITEM_PAYITEMID='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_PAYITEMID + "',@BONUS_PAYITEM_CHECKED='" + _obj_smhr_bonusmaster.BONUS_PAYITEM_CHECKED + "',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'"))
                        {
                            status = true;
                        }
                        break;
                    default:

                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable Get_SMHR_BONUSMASTER1(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        {
            DataTable dt = new DataTable();
            if (_obj_smhr_bonusmaster.OPERATION == operation.Select1)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select1'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonusmaster.OPERATION == operation.Select)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select',@Bonus_org_id='" + _obj_smhr_bonusmaster.ORGANISATION_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonusmaster.OPERATION == operation.Select2)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select2',@Bonus_org_id='" + _obj_smhr_bonusmaster.ORGANISATION_ID + "'";
                dt = ExecuteQuery(query);
            }

            if (_obj_smhr_bonusmaster.OPERATION == operation.Select3)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Select3'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonusmaster.OPERATION == operation.Get)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Get',@BUSINESSUNIT='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "'";
                dt = ExecuteQuery(query);
            }

            if (_obj_smhr_bonusmaster.OPERATION == operation.Edit)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Edit',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonusmaster.OPERATION == operation.Check)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Check',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonusmaster.OPERATION == operation.Check1)
            {
                string query = "exec USP_SMHR_BONUSMASTER2 @OPERATION='Check1',@BONUS_ID='" + _obj_smhr_bonusmaster.BONUS_ID + "'";
                dt = ExecuteQuery(query);
            }

            return dt;
        }

        public static bool bonus_trans_insrt(smhr_Bonus_trans _obj_bonus_trans)
        {
            try
            {
                bool status = false;
                switch (_obj_bonus_trans.OPERATION)
                {
                    case operation.Insert:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Insert',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "',@Bonus_org_id='" + _obj_bonus_trans.ORGANISATION_ID + "',@CREATED_BY='" + _obj_bonus_trans.CREATED_BY + "',@MODIFIED_BY='" + _obj_bonus_trans.MODIFIED_BY + "',@BONUS_PAYITEM_HEAD='" + _obj_bonus_trans.BONUS_PAYITEM_HEAD + "'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Validate:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Validate',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Delete1:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Delete1',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_trans_ID=" + _obj_bonus_trans.Bonus_trans_ID + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "'"))
                        {
                            status = true;
                        }
                        break;
                    case operation.Approve:

                        if (Dal.ExecuteNonQuery("exec USP_SMHR_BONUS_TRANS @OPERATION='Approve',@BONUS_PERIOD_ID='" + _obj_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_bonus_trans.Bonus_Emp_ID + "',@BONUS_COMMIT='" + _obj_bonus_trans.BONUS_COMMIT + "',@BONUS_FINALCOMMIT='" + _obj_bonus_trans.BONUS_FINALCOMMIT + "',@BONUS_BONUSVALUE='" + _obj_bonus_trans.BONUS_BONUSVALUE + "',@BONUS_TOTALVALUE='" + _obj_bonus_trans.BONUS_TOTALVALUE + "',@BONUS_EXGRATIA='" + _obj_bonus_trans.BONUS_EXGRATIA + "',@Bonus_trans_ID='" + _obj_bonus_trans.Bonus_trans_ID + "',@MODIFIED_BY='" + _obj_bonus_trans.MODIFIED_BY + "'"))
                        {
                            status = true;
                        }
                        break;
                    default:

                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable Get_SMHR_BONUSMASTER(SMHR_BONUSMASTER1 _obj_smhr_bonusmaster)
        {
            DataTable dt = new DataTable();
            if (_obj_smhr_bonusmaster.OPERATION == operation.Select)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Select',@BONUS_BU_ID='" + _obj_smhr_bonusmaster.BUSINESSUNIT + "',@BONUS_PERIOD_ID='" + _obj_smhr_bonusmaster.PERIOD + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonusmaster.PERIOD_ELEMENTS + "'";
                dt = ExecuteQuery(query);
            }
            return dt;
        }

        public static DataTable Get_SMHR_BONUS_TRANS1(smhr_Bonus_trans _obj_smhr_bonus_trans)
        {
            DataTable dt = new DataTable();
            if (_obj_smhr_bonus_trans.OPERATION == operation.Empty)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Empty',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
                dt = ExecuteQuery(query);
            }
            else if (_obj_smhr_bonus_trans.OPERATION == operation.Check)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Check',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
                dt = ExecuteQuery(query);
            }
            else if (_obj_smhr_bonus_trans.OPERATION == operation.Delete)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Delete',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonus_trans.OPERATION == operation.Empty1)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Empty1',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonus_trans.OPERATION == operation.Get)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Get',@BONUS_PERIOD_ID='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ID + "',@BONUS_PERIOD_ELEMENTS='" + _obj_smhr_bonus_trans.BONUS_PERIOD_ELEMENTS + "',@BONUS_BU_ID='" + _obj_smhr_bonus_trans.BONUS_BU_ID + "',@Bonus_Trans_checked=" + _obj_smhr_bonus_trans.Bonus_Trans_checked + ",@Bonus_Percentage='" + _obj_smhr_bonus_trans.Bonus_Percentage + "',@Bonus_Emp_ID='" + _obj_smhr_bonus_trans.Bonus_Emp_ID + "'";
                dt = ExecuteQuery(query);
            }
            if (_obj_smhr_bonus_trans.OPERATION == operation.Login)
            {
                string query = "EXEC USP_SMHR_BONUS_TRANS @OPERATION='Login',@APPRCYCLE_ID='" + _obj_smhr_bonus_trans.APPRCYCLE_ID + "'";
                dt = ExecuteQuery(query);
            }

            return dt;
        }

        public static DataTable fetch_PayItems(SMHR_PAYITEMS _obj_Smhr_Payitems)
        {
            DataTable dt = new DataTable();
            if (_obj_Smhr_Payitems.OPERATION == operation.Select)
            {
                string query = "EXEC USP_SMHR_GETPAYITEMS @OPERATION='Select',@PAYITEM_ORGANISATION_ID='" + _obj_Smhr_Payitems.ORGANISATION_ID + "'";
                dt = ExecuteQuery(query);
            }
            else if (_obj_Smhr_Payitems.OPERATION == operation.Select1)
            {
                string query = "EXEC USP_SMHR_GETPAYITEMS @OPERATION='Select1',@ORGANISATION_ID='" + _obj_Smhr_Payitems.ORGANISATION_ID + "' ";
                dt = ExecuteQuery(query);
            }
            return dt;
        }

        #endregion

        #region SMHR_TRANSFER

        /// <summary>
        /// Handle all operations related to transfer 
        /// </summary>
        public static DataTable get_Employees(SMHR_LOGININFO _obj_SMHR_LoginInfo)
        {
            //LOADING EMPLOYEES
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT',@BUSINESSUNIT_ID=" + Convert.ToString(_obj_SMHR_LoginInfo.BUID) + ",@ORGANISATION_ID='" + _obj_SMHR_LoginInfo.ORGANISATION_ID + "'");
        }

        public static DataTable get_Employee(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            // TO VIEW THE EMPLOYEE TRANSFERED INFORMATION
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='VALIDATE',@EMP_ID=" + Convert.ToString(_obj_Emptransfer.EMP_EMPID) + ",@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        public static DataTable get_Transferedemp(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            //THIS WILL LOAD THE GIRD
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='EMPTY',@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        public static DataTable get_businessunitdetails(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            //LOADING POSITIONS
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='CHECK',@ORGID=" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID));
        }

        public static DataTable get_Reportingemployees(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            //LOADING REPORTING EMPLOYEES
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='CHECK1',@BUSINESSUNIT_ID=" + Convert.ToString(_obj_Emptransfer.BUID) + ",@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        public static bool set_Emptransfer(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            //INSERTING TRANSFERED INFORMATION
            return ExecuteNonQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='INSERT',@EMP_ID='" + Convert.ToString(_obj_Emptransfer.EMP_EMPID) + "',@NEW_BUSINESSUNIT='" + Convert.ToString(_obj_Emptransfer.BUID) +
                                   "',@DEPARTMENT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_DEPARTMENT_ID) + "',@DESIGNATION_ID='" + Convert.ToString(_obj_Emptransfer.EMP_DESIGNATION_ID) + "',@EMP_SHIFT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_SHIFT_ID) +
                                   "',@EMP_SALARYSTRUCT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_SALALRYSTRUCT_ID) + "',@EMP_LEAVESTRUCT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_LEAVESTRUCT_ID) + "',@REPORTING_EMP='" + Convert.ToString(_obj_Emptransfer.EMP_REPORTINGEMPLOYEE) +
                                   "',@EMP_REPORTING_DATE=" + (_obj_Emptransfer.STARTDATE == null ? "null" : "'" + Convert.ToDateTime(_obj_Emptransfer.STARTDATE).ToString("MM/dd/yyyy") + "'") +
                                   ",@EXECUTION_DATE='" + Convert.ToDateTime(_obj_Emptransfer.EMP_EXECUTIONDATE).ToString("MM/dd/yyyy") + "',@PREVIOUS_BUSINESSUNIT='" + Convert.ToString(_obj_Emptransfer.EMP_OLDBU) +
                                   "',@PREVIOUS_DEPARTMENT='" + Convert.ToString(_obj_Emptransfer.EMP_OLDDEPARTMENT) + "',@PREVIOUS_DESIGNATION='" + Convert.ToString(_obj_Emptransfer.EMP_OLDDESIGNATION) + "',@PREVIOUS_EMP_SHIFT='" + Convert.ToString(_obj_Emptransfer.EMP_OLDSHIFT) +
                                   "',@LEAVEBALANCE='" + Convert.ToString(_obj_Emptransfer.EMP_LEAVEBALANCE) + "',@PREVIOUS_SALALRYSTRUCT='" + Convert.ToString(_obj_Emptransfer.EMP_OLDSALSTRUCT) +
                                   "',@PREVIOUS_REPORTINGEMP='" + Convert.ToString(_obj_Emptransfer.EMP_OLDREPORTINGEMP) + "',@ORGID='" + _obj_Emptransfer.ORGANISATION_ID +
                                   "',@GROSS='" + Convert.ToDouble(_obj_Emptransfer.EMP_GROSSSAL) + "',@BASIC='" + Convert.ToDouble(_obj_Emptransfer.EMP_BASIC) + "',@PREVIOUS_EMP_LEAVESTRUCT='" + Convert.ToInt32(_obj_Emptransfer.EMP_LEAVESTRUCTS_ID) + "',@PREVIOUS_GROSS='" + Convert.ToDouble(_obj_Emptransfer.EMP_PREVIOUS_GROSS) +
                                   "',@CURRENCY='" + Convert.ToInt32(_obj_Emptransfer.EMP_CURR_ID) + "',@PREVIOUS_BASIC='" + Convert.ToDouble(_obj_Emptransfer.EMP_PREVIOUS_BASIC) + "',@PREVIOUS_CURRENCY='" + Convert.ToString(_obj_Emptransfer.EMP_PREVIOUS_CURRID) +
                                   "',@CREATEDBY='" + _obj_Emptransfer.CREATEDBY + "',@MODIFIEDBY='" + _obj_Emptransfer.LASTMDFBY + "',@EMPCODE_CHECKED='" + _obj_Emptransfer.EMPCODE_CHECKED + "',@EMP_EMPCODE='" + _obj_Emptransfer.EMP_EMPCODE + "',@PREV_EMP_EMPCODE='" + _obj_Emptransfer.PREV_EMP_EMPCODE +
                                   "',@EMP_ANNUALGROSS='" + _obj_Emptransfer.EMP_ANNUAL_GROSS + "',@EMP_ANNUALBASIC='" + _obj_Emptransfer.EMP_ANNUAL_BASIC +
                                   "',@EMP_SUPBUSINESSUNIT_ID='" + _obj_Emptransfer.EMP_SUPBUSINESSUNIT_ID +
                                   "', @EMP_CATEGORY_ID = '" + _obj_Emptransfer.EMP_CATEGORY_ID +
                                   "', @EMP_DIRECTORATE_ID = '" + _obj_Emptransfer.EMP_Directorate_ID +
                                   "', @EMP_GRADE = '" + _obj_Emptransfer.EMP_GRADE +
                                   "', @EMP_SLAB_ID = '" + _obj_Emptransfer.EMP_SLAB_ID +
                                   "',@PREVIOUS_PERIOD='" + _obj_Emptransfer.PREVIOUS_PERIOD +
                                   "', @PREVIOUS_EMP_GRADE = '" + _obj_Emptransfer.PREVIOUS_EMP_GRADE +
                                   "', @PREVIOUS_EMP_SLAB_ID = '" + _obj_Emptransfer.PREVIOUS_EMP_SLAB_ID +
                                   "', @PREV_EMP_DIRECTORATE_ID = '" + _obj_Emptransfer.PREV_EMP_Directorate_ID +
                                   "', @PREV_EMP_CATEGORY_ID = '" + _obj_Emptransfer.PREV_EMP_CATEGORY_ID +
                                   "', @EMP_period_id='" + _obj_Emptransfer.EMP_period_id + "'");
        }

        public static bool set_Emptransferjob(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            return ExecuteNonQuery("EXEC JOB_EMP_TRANSFER");
        }

        #region Loading leavestructure and all

        /// <summary>
        /// loading the relavent information about that businessunit
        /// </summary>
        /// <param name="_obj_Emptransfer"></param>
        /// <returns></returns>
        public static DataTable get_Departments(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            //LOADING DEPARTMENTS
            if (Convert.ToInt32(_obj_Emptransfer.EMP_DEPARTMENT_ID) >= 1)
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT1',@DEPARTMENT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_DEPARTMENT_ID) + "',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_Emptransfer.BUID) + "',@ORGID='" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID) + "'");
            else if (Convert.ToInt32(_obj_Emptransfer.EMP_LEAVESTRUCT_ID) >= 1)
                //LOADING LEAVE STRUCTURES
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT2',@EMP_LEAVESTRUCT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_LEAVESTRUCT_ID) + "',@ORGID='" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID) + "'");
            else if (Convert.ToInt32(_obj_Emptransfer.EMP_SALALRYSTRUCT_ID) >= 1)
                //LOADING SALARY STRUCTURES
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT3',@ORGID='" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID) + "'");
            else if (Convert.ToInt32(_obj_Emptransfer.EMP_SHIFT_ID) >= 1)
                //LOADING SHIFTS
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT4',@EMP_SHIFT_ID='" + Convert.ToString(_obj_Emptransfer.EMP_SHIFT_ID) + "',@ORGID='" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID) + "'");
            else if (Convert.ToString(_obj_Emptransfer.ORGANISATION_ID) != "")
                // LOADING CURRENCY
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT5',@ORGID='" + Convert.ToString(_obj_Emptransfer.EMP_ORG_ID) + "',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_Emptransfer.BUID) + "'");
            else
                return null;
        }

        #endregion

        public static DataTable get_Employeelist(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            // LOADING SELECTED EMPLOYEE CURRENT INFORMATION
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='SELECT',@EMP_ID=" + Convert.ToString(_obj_Emptransfer.EMP_EMPID) + ",@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        public static DataTable get_empleaves(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            // FOR CHEKING THE BALANCE OF THE SELECTED EMPLOYEE
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='VALIDATE1',@EMP_ID='" + Convert.ToString(_obj_Emptransfer.EMP_EMPID) + "',@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        //public static DataTable get_BusinessUnits(SMHR_LOGININFO _obj_SMHR_LoginInfo)
        //{
        //    return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='CHECK2',@ORGID='" + Convert.ToString(_obj_SMHR_LoginInfo.ORGANISATION_ID) + "',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_SMHR_LoginInfo.BUID) + "'");
        //}
        public static DataTable GET_LASTPAYROLL(SMHR_EMPTRANSFER _obj_smhr_Emptransfer)
        {
            // TO GET LAST PAYROLL DATE FOR THAT BUSINESSUNIT AS ORGID IS NULL IN PAYTRAN TABLE
            if (_obj_smhr_Emptransfer.MODE > 0)
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='EMPTY1',@BUSINESSUNIT_ID='" + _obj_smhr_Emptransfer.BUID + "',@PERIODDTLID='" + _obj_smhr_Emptransfer.MODE + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='EMPTY1',@ORGID='" + _obj_smhr_Emptransfer.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_smhr_Emptransfer.BUID + "'");
        }

        public static DataTable get_RollbackTransfer(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            // BEFORE ROLL BACK CHECKING THE PROCESS
            return ExecuteQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='Check2',@EMP_ID='" + Convert.ToInt32(_obj_Emptransfer.EMP_EMPID) + "',@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        public static bool get_Dorollback(SMHR_EMPTRANSFER _obj_Emptransfer)
        {
            // ROLL BACK THE TRANSFERED EMPLOYEE
            return ExecuteNonQuery("EXEC USP_SMHR_EMP_TRANSFER @OPERATION='DELETE',@EMP_ID='" + Convert.ToInt32(_obj_Emptransfer.EMP_EMPID) + "',@ORGID='" + _obj_Emptransfer.ORGANISATION_ID + "'");
        }

        #endregion

        #region SMHR_GRATUITY

        /// <summary>
        /// contatins method to serve any type of requests
        /// </summary>
        /// <param name="_obj_smhr_logininfo"></param>
        /// <returns></returns>
        public static DataTable get_PayItemdtls(SMHR_LOGININFO _obj_smhr_logininfo)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='VALIDATE1',@ORGID='" + Convert.ToString(_obj_smhr_logininfo.ORGANISATION_ID) + "'");
        }

        public static DataTable get_empgratuity(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='CHECK',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_smhr_gratuity.EMP_BUID) +
                                "',@PERIOD='" + Convert.ToDateTime(_obj_smhr_gratuity.SELECTED_PERIOD).ToString("MM/dd/yyyy") + "',@PAYITEM='" + Convert.ToString(_obj_smhr_gratuity.EMP_PAYITEM) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static DataTable get_Emp_CheckGratuity()
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='EMPTY'");
        }

        public static DataTable get_gratuityemp(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='CHECK1',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_smhr_gratuity.EMP_BUID) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static bool set_Gratutityemp(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            if (_obj_smhr_gratuity.OPERATION == operation.Insert)
            {
                //",@COMPLETION_DATE='" + Convert.ToString(_obj_smhr_gratuity.EMP_COMPLETION) + 
                return ExecuteNonQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='INSERT',@EMPLOYEE_ID=" + Convert.ToString(_obj_smhr_gratuity.EMP_ID) + ",@BUSINESSUNIT_ID=" + Convert.ToString(_obj_smhr_gratuity.EMP_BUSINESSUNIT_ID) +
                                       ",@PAY_AMOUNT=" + Convert.ToString(_obj_smhr_gratuity.Emp_payableamount) + ",@MAX=" + Convert.ToString(_obj_smhr_gratuity.Emp_max) +
                                       ",@EMP_NAME='" + Convert.ToString(_obj_smhr_gratuity.Emp_name) + "',@YEARSOFEXPERIENCE=" + Convert.ToString(_obj_smhr_gratuity.Emp_exp) + ",@CALCULATE=" + Convert.ToString(_obj_smhr_gratuity.Emp_amount) +
                                       ",@PERIOD='" + Convert.ToDateTime(_obj_smhr_gratuity.EMP_PERIOD) + "',@CURR_SYMBOL='" + Convert.ToString(_obj_smhr_gratuity.Emp_currency) +
                                       "',@NOMINEE='" + Convert.ToString(_obj_smhr_gratuity.Emp_nominee) + "',@EMP_DOJ='" + Convert.ToString(_obj_smhr_gratuity.EMP_DOJ) + "',@EMPRESG='" + Convert.ToString(_obj_smhr_gratuity.Emp_resgstatus) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID +
                                       "',@CREATEDBY='" + _obj_smhr_gratuity.CREATEDBY + "',@MODIFIEDBY='" + _obj_smhr_gratuity.LASTMDFBY + "'");
            }
            else if (_obj_smhr_gratuity.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='UPDATE',@EMPLOYEE_ID=" + Convert.ToString(_obj_smhr_gratuity.EMP_ID) + ",@SET_APPROVAL_STATUS=" + Convert.ToString(_obj_smhr_gratuity.Emp_status) + ",@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
            }
            else
            {
                return false;
            }
        }

        public static DataTable get_Employee(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='SELECT1',@BUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_gratuity.EMP_BUID) + "',@EMP_ID='" + Convert.ToString(_obj_smhr_gratuity.EMP_ID) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static DataTable get_emp(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='VALIDATE2',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_smhr_gratuity.EMP_BUID) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static DataTable get_Gratuityperiod(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='VALIDATE',@BUSINESSUNIT_ID='" + Convert.ToString(_obj_smhr_gratuity.EMP_BUID) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static DataTable get_emplist(SMHR_GRATUITY _obj_smhr_gratuity)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='SELECT',@PERIOD='" + Convert.ToString(_obj_smhr_gratuity.EMP_PERIOD) + "',@ORGID='" + _obj_smhr_gratuity.ORGANISATION_ID + "'");
        }

        public static DataTable get_emptype(SMHR_LOGININFO _obj_smhr_logininfo)
        {
            return ExecuteQuery("EXEC USP_PAYROLL_GRATUITY @OPERATION='SELECT',@EMPLOYEE_TYPE='" + Convert.ToInt32(_obj_smhr_logininfo.LOGIN_TYPE) + "',@ORGID='" + _obj_smhr_logininfo.ORGANISATION_ID + "'");
        }

        #endregion

        #region SMHR_ARREARS

        // UPDATE BY SRIDEVI //////////////

        public static bool set_Arrears(SMHR_ARREARS _obj_Arrears)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_ARREARS @SMHR_ARR_STATUS = " + _obj_Arrears.SMHR_ARR_STATUS + "" +
                                   ",@SMHR_ARR_ORG_ID = " + _obj_Arrears.SMHR_ARR_ORG_ID + "" +
                                   ",@SMHR_ARR_BUID = " + _obj_Arrears.SMHR_ARR_BUID + "" +
                                   ",@SMHR_ARR_PERIOD = " + _obj_Arrears.SMHR_ARR_PERIOD + "" +
                                   ",@SMHR_ARR_WEF= " + _obj_Arrears.SMHR_ARR_WEF + ",@MODE = '1'" +
                                   ",@SMHR_ARR_FROM_PERIODELEMENT = " + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "" +
                                   ",@SMHR_ARR_TO_PERIODELEMENT = " + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + "");
        }

        public static DataTable get_EmployeeArrears(SMHR_ARREARS _obj_Arrears)
        {
            if (_obj_Arrears.Mode == 4)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 4, @SMHR_ARR_BUID = '" + _obj_Arrears.SMHR_ARR_BUID + "'" +
                                    ",@SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "'");
            }
            if (_obj_Arrears.Mode == 6)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 6, @SMHR_ARR_ORG_ID = '" + _obj_Arrears.SMHR_ARR_ORG_ID + "'");
            }
            if (_obj_Arrears.Mode == 7)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 7, @SMHR_ARR_ID = '" + _obj_Arrears.SMHR_ARR_ID + "'");
            }
            if (_obj_Arrears.Mode == 8)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 7, @SMHR_ARR_ID = '" + _obj_Arrears.SMHR_ARR_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 4, @SMHR_ARR_BUID = '" + _obj_Arrears.SMHR_ARR_BUID + "'" +
                                    ",@SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "'");
            }
        }

        public static DataTable get_EmployeeArrears_Det(SMHR_ARREARS_DETAILS _obj_Arrears)
        {
            if (_obj_Arrears.Mode == 4)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS_DETAILS @MODE = 4, @SMHR_ARR_ARREARS_ID = '" + _obj_Arrears.SMHR_ARR_ID + "'");
            }
            if (_obj_Arrears.Mode == 5)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 5, @SMHR_ARR_TO_PERIODELEMENT = '" + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + "'");
            }
            if (_obj_Arrears.Mode == 6)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @MODE = 6, @PRDDTL_ENDDATE = '" + _obj_Arrears.SMHR_ARR_CREATEDDATE + "'" +
                                    ",@SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "'");
            }
            if (_obj_Arrears.Mode == 10)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS @SMHR_ARR_ORG_ID = " + _obj_Arrears.SMHR_ARR_ORG_ID + "" +
                                    ",@SMHR_ARR_BUID = " + _obj_Arrears.SMHR_ARR_BUID + "" +
                                    ",@SMHR_ARR_PERIOD = " + _obj_Arrears.SMHR_ARR_PERIOD + "" +
                                    ",@SMHR_ARR_FROM_PERIODELEMENT = " + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "" +
                                    ",@SMHR_ARR_TO_PERIODELEMENT = " + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + ",@MODE=10");
            }

            if (_obj_Arrears.Mode == 11)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS  @SMHR_ARR_BUID = " + _obj_Arrears.SMHR_ARR_BUID + "" +
                                    ",@SMHR_ARR_PERIOD = " + _obj_Arrears.SMHR_ARR_PERIOD + "" +
                                    ",@SMHR_ARR_FROM_PERIODELEMENT = " + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + ",@MODE=11");
            }
            else
            {
                return ExecuteQuery("EXEC USP_EMP_CALCULATE_ARREARS @GROSSSAL = '" + _obj_Arrears.SMHR_ARR_EMP_NEW_GS + "'" +
                                    ",@EMPID = '" + _obj_Arrears.SMHR_ARR_EMP_ID + "'" +
                                    ",@BUID = '" + _obj_Arrears.SMHR_ARR_BUID + "'" +
                                    ",@FROMPERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "'" +
                                    ",@TOPERIOD  = '" + _obj_Arrears.SMHR_ARR_WEF + "'" +
                                    ",@TYPE = '" + _obj_Arrears.SMHR_ARR_EMP_ARR_TYPE + "'");
            }
        }

        public static DataTable get_Arrears_tds(SMHR_ARREARS_DETAILS _obj_Arrears)
        {
            if (_obj_Arrears.Mode == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS_TDS @MODE = 1, @SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "',@SMHR_ARR_PERIODDTL='" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "'");
            }
            if (_obj_Arrears.Mode == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_ARREARS_TDS @MODE = 2, @SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "',@SMHR_ARR_PERIODDTL='" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "'");
            }
            else
            {
                // for MODE 3
                return ExecuteQuery("EXEC USP_SMHR_ARREARS_TDS @MODE = 3, @SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_PERIOD + "',@SMHR_ARR_PERIODDTL='" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "',@SMHR_ARR_EFPERIODDTL='" + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + "'");
            }
        }

        public static bool set_Arrears_Details(string str)
        {
            return ExecuteNonQuery(str);
        }

        public static bool set_Arrears_Details(SMHR_ARREARS_DETAILS _obj_Arrears)
        {
            if (_obj_Arrears.Mode == 1)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_PAYROLL_INDIA @EMPSALDTLS_EMPID = '" + _obj_Arrears.SMHR_ARR_EMP_ID + "'" +
                                       ",@EMPSALDTLS_PERIOD_ID = '" + _obj_Arrears.SMHR_ARR_PERIOD + "'" +
                                       ",@EMPSALDTLS_PRDDTL_ID = '" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "'" +
                                       ",@EMPSALDTLS_STRUCT = '" + _obj_Arrears.SMHR_ARR_SALSTRUCT + "'" +
                                       ",@EMPSALDTLS_ID = '" + _obj_Arrears.SMHR_ARR_CREATEDBY + "'" +
                                       ",@EMPSALDTLS_DATE  = '" + _obj_Arrears.SMHR_ARR_CREATEDDATE + "'" +
                                       ",@EMP_GROSSSAL  = '" + _obj_Arrears.SMHR_ARR_EMP_NEW_GS + "'" +
                                       ",@EMPSALDTLS_ARREARSID  = '" + _obj_Arrears.SMHR_ARR_ID + "'" +
                                       ",@BUS_ID = '" + _obj_Arrears.SMHR_ARR_BUID + "'" +
                                       ",@ORG_ID = '" + _obj_Arrears.SMHR_ARR_ORG_ID + "'");
            }
            else if (_obj_Arrears.Mode == 2)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_UPDATE_DETAILS @EMPSALDTLS_EMPID = '" + _obj_Arrears.SMHR_ARR_EMP_ID + "'" +
                                       ",@SMHR_ARR_FROM_PERIODELEMENT = '" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "'" +
                                       ",@SMHR_ARR_BUID  = '" + _obj_Arrears.SMHR_ARR_BUID + "'" +
                                       ",@EMPSALDTLS_ARREARSID  = '" + _obj_Arrears.SMHR_ARR_ID + "',@MODE=1");
            }
            else if (_obj_Arrears.Mode == 3)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_DETAILS @SMHR_ARR_EMP_ID = " + _obj_Arrears.SMHR_ARR_EMP_ID + "," +
                                       "@SMHR_ARR_ARREARS_ID = " + _obj_Arrears.SMHR_ARR_ID + "" +
                                       ",@SMHR_ARR_EMP_PRESENT_GS = " + _obj_Arrears.SMHR_ARR_EMP_PRESENT_GS + "" +
                                       ",@SMHR_ARR_EMP_ARR_TYPE = '" + _obj_Arrears.SMHR_ARR_EMP_ARR_TYPE + "', @SMHR_ARR_EMP_ARR_VALUE = " + _obj_Arrears.SMHR_ARR_EMP_ARR_VALUE + "" +
                                       ",@SMHR_ARR_EMP_NEW_GS = '" + _obj_Arrears.SMHR_ARR_EMP_NEW_GS + "'" +
                                       ",@SMHR_ARR_CREATEDBY = '" + _obj_Arrears.SMHR_ARR_CREATEDBY + "'" +
                                       ",@SMHR_ARR_CREATEDDATE = '" + _obj_Arrears.SMHR_ARR_CREATEDDATE + "'" +
                                       ",@SMHR_ARR_STATUS = " + _obj_Arrears.SMHR_ARR_STATUS + "" +
                                       ",@SMHR_ARR_ORG_ID = " + _obj_Arrears.SMHR_ARR_ORG_ID + "" +
                                       ",@SMHR_ARR_BUID = " + _obj_Arrears.SMHR_ARR_BUID + "" +
                                       ",@SMHR_ARR_PERIOD = '" + _obj_Arrears.SMHR_ARR_FROM_PERIODELEMENT + "'" +
                                       ",@SMHR_ARR_WEF = '" + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + "'" +
                                       ",@ACTUALGIVENPERIODS = '" + _obj_Arrears.ACTUALGIVENPERIODS + "'" +
                                       ",@MODE = '3'");
            }
            else if (_obj_Arrears.Mode == 4)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS @SMHR_ARR_ID = '" + _obj_Arrears.SMHR_ARR_ID + "',@MODE=8");
            }
            else if (_obj_Arrears.Mode == 5)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS @SMHR_ARR_ID = '" + _obj_Arrears.SMHR_ARR_ID + "',@MODE=9");
            }
            else if (_obj_Arrears.Mode == 6)
            {
                // WRITEN BY SRIDEVI TO UPDATE EMPLOYEE DETAILS WITH NEW GROSS AND BASIC @ FINALIZE ARREARS
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_UPDATE_DETAILS @EMPSALDTLS_ARREARSID = '" + _obj_Arrears.SMHR_ARR_ID + "',@MODE=2,@SMHR_ARR_ORG_ID='" + _obj_Arrears.SMHR_ARR_ORG_ID + "'");
            }
            else if (_obj_Arrears.Mode == 7)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_TDS_INDIA @PERIOD_ID = '" + _obj_Arrears.SMHR_ARR_PERIOD + "',@PRDDTL_ID='" + _obj_Arrears.SMHR_ARR_TO_PERIODELEMENT + "'" +
                                       ",@EMP_ID='" + _obj_Arrears.SMHR_ARR_EMP_ID + "', @ACTUALGIVENPERIODS='" + _obj_Arrears.ACTUALGIVENPERIODS + "'" +
                                       ",@ARREARSID='" + _obj_Arrears.SMHR_ARR_ID + "', @OLDGROSSAMOUNT='" + _obj_Arrears.SMHR_ARR_EMP_PRESENT_GS + "'" +
                                       ",@EXTRARREASAMOUNT='" + _obj_Arrears.SMHR_ARR_EMP_NEW_GS + "',  @ORG_ID='" + _obj_Arrears.SMHR_ARR_ORG_ID + "'" +
                                       ",@EMP_BUSINESSUNIT_ID='" + _obj_Arrears.SMHR_ARR_BUID + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_ARREARS_DETAILS @SMHR_ARR_STATUS = " + _obj_Arrears.SMHR_ARR_STATUS + "" +
                                       ",@SMHR_ARR_ORG_ID = " + _obj_Arrears.SMHR_ARR_ORG_ID + "" +
                                       ",@SMHR_ARR_BUID = " + _obj_Arrears.SMHR_ARR_BUID + "" +
                                       ",@SMHR_ARR_PERIOD = " + _obj_Arrears.SMHR_ARR_PERIOD + "" +
                                       ",@SMHR_ARR_WEF= " + _obj_Arrears.SMHR_ARR_WEF + ",@MODE = '2'");
            }
        }

        #endregion

        #region SMHR_DASHBOARD

        public static DataTable get_EMP_ID(SMHR_DAHSBOARD _obj_smhr_dashboard)
        {
            if (_obj_smhr_dashboard.OPERATION == operation.Select)
            {
                if (_obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID.ToString() == "0")
                {
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @operation='Select'"));
                }
                else
                {
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @operation='Select',@LOGIN_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "'"));
                }
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_Emp)
            {
                if (_obj_smhr_dashboard.SMHR_DASHBOARD_LOGIN_ID.ToString() == "0")
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Emp',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));

                else
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Emp',@LOGIN_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_LOGIN_ID + "',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_Pos)
            {
                if (_obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID.ToString() == "0")
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Pos',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));
                else
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Pos',@EMP_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCE @OPERATION='Select_New',@LT_EMP_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Check_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_YTDBALANCE @operation='Check_New',@PRDDTL_NAME='" + _obj_smhr_dashboard.SMHR_DASHBOARD_PERIODNAME + "',@PRDDTL_PERIOD_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_PERIODID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_YTDBALANCE @operation='Check1',@PRDDTL_NAME='',@YTD_PERIOD_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_PERIODID + "',@YTD_EMP_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_Hike)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPHIKE @operation='Select_Hike',@EMPPRO_EMPID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_Period)
            {
                return ExecuteQuery("EXEC USP_SMHR_LEAVEBALANCE @operation='Select_Period',@PERIOD_NAME='" + _obj_smhr_dashboard.SMHR_DASHBOARD_PERIODNAME + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Count)
            {
                return ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @Operation='Count',@ORGANISATION_ID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Select_Doj)
            {
                return ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @Operation='Select_Doj',@ORGANISATION_ID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_dashboard.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @Operation='Empty',@FIN_PRDDTL_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_PRDDTL_ID + "',@EMP_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "'");
            }
            else
            {
                if (_obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID.ToString() == "0")
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Dept',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));
                else
                    return (ExecuteQuery("EXEC USP_SMHR_DASHBOARD_NEW @OPERATION='Select_Dept',@EMP_ID='" + _obj_smhr_dashboard.SMHR_DASHBOARD_EMP_ID + "',@EMP_ORGANIZATIONID='" + _obj_smhr_dashboard.ORGANISATION_ID + "'"));
            }
        }

        #endregion

        //#region RECRUITMENT UPDATES

        //public static DataTable get_RecruitmentUpdates(SMHR_RECRUITMENTUPDATES _obj_recruitmentupdates)
        //{
        //    if (_obj_recruitmentupdates.OPERATION == operation.Select_New)
        //    {
        //        return (Dal.ExecuteQuery_New("EXEC USP_SMHR_RECRUITMENTUPDATE @operation='Select_New',@CURRENTDATE='" + _obj_recruitmentupdates.SMHR_CURRENTDATE.ToString("MM/dd/yyyy hh:mm:ss") + "'"));
        //    }
        //    else
        //    {
        //        return (Dal.ExecuteQuery_New("EXEC USP_SMHR_RECRUITMENTUPDATE @operation='Select_New',@CURRENTDATE='" + _obj_recruitmentupdates.SMHR_CURRENTDATE.ToString("MM/dd/yyyy hh:mm:ss") + "'"));
        //    }
        //}

        //#endregion

        #region SMHR_EMPLOGIN

        public static DataTable get_EMP(SMHR_EMPLOYEE obj_smhr_employee)
        {
            if (obj_smhr_employee.OPERATION == operation.Select)
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @operation='Select',@EMP_ORGANISATION_ID='" + obj_smhr_employee.ORGANISATION_ID + "'");
            else if (obj_smhr_employee.OPERATION == operation.FeedBack)
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @operation='FeedBack'");
            else
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @operation='Select',@EMP_ORGANISATION_ID='" + obj_smhr_employee.ORGANISATION_ID + "'");
        }

        #endregion SMHR_EMPLOGIN

        #region SMHR_LOANREQUEST

        public static DataTable get_Business(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Empty)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Empty', @ORGANISATIONID ='" + Convert.ToString(_obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID) + "'");
            }
            return dt;
        }

        public static DataTable get_LoanType(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.EMPTY1)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'EMPTY1'");
            }
            return dt;
        }

        public static DataTable get_Loanstatus(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Delete)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Delete',@EMPLOYEEID='" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID + "',@ORGANISATIONID='" + _obj_Smhr_Loanrequest.ORGANISATION_ID + "'");
            }
            return dt;
        }

        public static DataTable get_LoanDetails(SMHR_LOANTRANSDTL _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Approve)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = 'Approve'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Get)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = '" + _obj_Smhr_Loanrequest.OPERATION + "', @LOANTRADTL_LOANTRAN_ID = " + _obj_Smhr_Loanrequest.LOANTRADTL_LOANTRAN_ID);
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Select_New)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANTRANDTL @Operation = '" + _obj_Smhr_Loanrequest.OPERATION + "', @LOANTRADTL_LOANTRAN_ID = " + _obj_Smhr_Loanrequest.LOANTRADTL_LOANTRAN_ID);
            }
            return dt;
        }

        public static DataTable get_Loanstatus2(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Select2)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Select2',@LOANREQUESTID='" + _obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID + "'");
            }
            return dt;
        }

        public static DataTable get_EmployeeLoanFinalstatus(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Select3)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Select3',@ORGANISATIONID='" + _obj_Smhr_Loanrequest.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Select_Self)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Select_Self',@EMPLOYEEID='" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID + "'");
            }
            return dt;
        }

        public static DataTable get_Loanstatus1(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Check1)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Check1',@ORGANISATIONID='" + _obj_Smhr_Loanrequest.ORGANISATION_ID + "'");
            }
            return dt;
        }

        public static DataTable get_Employee(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Validate)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Validate',@BUSINESSUNITID='" + Convert.ToString(_obj_Smhr_Loanrequest.BUSINESSUNIT_ID) + "', @ORGANISATIONID ='" + Convert.ToString(_obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID) + "'");
            }
            else
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Validate1',@BUSINESSUNITID='" + Convert.ToString(_obj_Smhr_Loanrequest.BUSINESSUNIT_ID) + "', @ORGANISATIONID ='" + Convert.ToString(_obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID) + "'");
            }
            return dt;
        }

        public static DataTable get_EmployeeStatus(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.New)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'New',@ORGANISATIONID='" + _obj_Smhr_Loanrequest.ORGANISATION_ID + "'");
            }
            return dt;
        }

        public static DataTable get_EmployeeStatus1(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Get)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Get', @ORGANISATIONID= " + _obj_Smhr_Loanrequest.ORGANISATION_ID);
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Get_ID)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Get_ID',@ORGANISATIONID='" + _obj_Smhr_Loanrequest.ORGANISATION_ID + "',@Loan_Status='" + _obj_Smhr_Loanrequest.status_type + "'");
            }
            return dt;
        }

        public static DataTable get_Employeedetails(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_Loanrequest.OPERATION == operation.Approve)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Approve',@EMPLOYEEID ='" + Convert.ToString(_obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID) + "'");
            }
            return dt;
        }

        public static DataTable get_LoanRequest(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            if (_obj_Smhr_Loanrequest.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'select',@LOANREQUESTID = '" + _obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'select', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.LoanVoucher)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'LoanVoucher', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.USERLOANEMI)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'USERLOANEMI', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.USERLOANTRANEMI)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'USERLOANTRANEMI', @LOANTRANS_ID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Available)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = '" + _obj_Smhr_Loanrequest.OPERATION + "', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.Empty_Self)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation='Empty_Self',@LOANREQUEST_ORGANISATION_ID=" + _obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID + ",@lOANREQUEST_EMPLOYEEID=" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID + "");
            }
            else if (_obj_Smhr_Loanrequest.OPERATION == operation.loaneligibility)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation='loan eligibility',@LOANREQUEST_ORGANISATION_ID=" + _obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID +
                                                                                           ",@lOANREQUEST_EMPLOYEEID=" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID +
                                                                                           ",@AMOUNT=" + _obj_Smhr_Loanrequest.AMOUNT +
                                                                                           ",@NOOFINSTALLMENTS=" + _obj_Smhr_Loanrequest.NOOFINSTALLMENTS +
                                                                                           ",@APPLIEDDATE='" + _obj_Smhr_Loanrequest.APPLIEDDATE.ToString("MM/dd/yyyy") +
                                                                                           "',@BUSINESSUNITID=" + _obj_Smhr_Loanrequest.BUSINESSUNIT_ID +
                                                                                           ",@LOANTYPE=" + _obj_Smhr_Loanrequest.LOANTYPE + "");
            }
            else
            {
                if (_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Check', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Check', @LOANREQUESTID ='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) + "'");
            }
        }

        public static bool set_LoanRequest(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            bool status = false;
            //int result;
            //List<SqlParameter> lstSqlparams = new List<SqlParameter>();
            switch (_obj_Smhr_Loanrequest.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Insert',@ORGANISATIONID='" + Convert.ToString(_obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID)
                                      + "', @BUSINESSUNITID='" + _obj_Smhr_Loanrequest.BUSINESSUNIT_ID
                                      + "', @LOANTYPE='" + _obj_Smhr_Loanrequest.LOANTYPE
                                      + "', @EMPLOYEEID='" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID
                                      + "', @NOOFINSTALLMENTS='" + _obj_Smhr_Loanrequest.NOOFINSTALLMENTS
                                      + "', @APPLIEDDATE='" + _obj_Smhr_Loanrequest.APPLIEDDATE.ToString("MM/dd/yyyy")
                                      + "', @APPLIEDBY='" + _obj_Smhr_Loanrequest.APPLIEDBY
                                      + "', @LOANREQUESTSTATUS='" + _obj_Smhr_Loanrequest.STATUS
                                      + "', @APPROVEDATE ='" + _obj_Smhr_Loanrequest.APPROVEDDATE.ToString("MM/dd/yyyy")
                                      + "', @AMOUNT='" + _obj_Smhr_Loanrequest.AMOUNT
                                      + "', @APPROVEDBY='" + _obj_Smhr_Loanrequest.APPROVEDBY
                                      + "', @CREATEDBY=' " + Convert.ToString(_obj_Smhr_Loanrequest.CREATEDBY)
                                      + "', @LOAN_NAME='" + _obj_Smhr_Loanrequest.LOANNAME
                                       + "',@LOAN_PROCESS_TYPE='" + _obj_Smhr_Loanrequest.LOAN_PROCESS_TYPE
                                       + "',@LOAN_REQUEST_VALUATIONDOC='" + _obj_Smhr_Loanrequest.LOANREQUEST_VALUATIONDOC
                                      + "', @PARENT_LOANNO = '" + _obj_Smhr_Loanrequest.PARENT_LOANNO + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                //lstSqlparams = new List<SqlParameter>();
                //lstSqlparams.Add(new SqlParameter("@OPERATION", "Insert"));
                //lstSqlparams.Add(new SqlParameter("@ORGANISATIONID", _obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID));
                //lstSqlparams.Add(new SqlParameter("@BUSINESSUNITID", _obj_Smhr_Loanrequest.BUSINESSUNIT_ID));
                //lstSqlparams.Add(new SqlParameter("@LOANTYPE", _obj_Smhr_Loanrequest.LOANTYPE));
                //lstSqlparams.Add(new SqlParameter("@EMPLOYEEID", _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID));
                //lstSqlparams.Add(new SqlParameter("@NOOFINSTALLMENTS", _obj_Smhr_Loanrequest.NOOFINSTALLMENTS));
                //lstSqlparams.Add(new SqlParameter("@APPLIEDBY", _obj_Smhr_Loanrequest.APPLIEDBY));
                //lstSqlparams.Add(new SqlParameter("@LOAN_NAME", _obj_Smhr_Loanrequest.LOANNAME));
                //lstSqlparams.Add(new SqlParameter("@APPLIEDDATE", _obj_Smhr_Loanrequest.APPLIEDDATE));
                //lstSqlparams.Add(new SqlParameter("@LOANREQUESTSTATUS", _obj_Smhr_Loanrequest.STATUS));
                //lstSqlparams.Add(new SqlParameter("@AMOUNT", _obj_Smhr_Loanrequest.AMOUNT));
                //lstSqlparams.Add(new SqlParameter("@LOAN_REQUEST_VALUATIONDOC", _obj_Smhr_Loanrequest.LOANREQUEST_VALUATIONDOC));
                //lstSqlparams.Add(new SqlParameter("@CREATEDBY", _obj_Smhr_Loanrequest.CREATEDBY));
                //lstSqlparams.Add(new SqlParameter("@CREATEDDATE", _obj_Smhr_Loanrequest.CREATEDDATE));
                //lstSqlparams.Add(new SqlParameter("@LOAN_PROCESS_TYPE", _obj_Smhr_Loanrequest.LOAN_PROCESS_TYPE));
                //lstSqlparams.Add(new SqlParameter("@LOANVOUCHER", _obj_Smhr_Loanrequest.LOANVOUCHER));
                //lstSqlparams.Add(new SqlParameter("@APPROVEDATE", _obj_Smhr_Loanrequest.APPROVEDDATE));
                //lstSqlparams.Add(new SqlParameter("@PARENT_LOANNO", _obj_Smhr_Loanrequest.PARENT_LOANNO));
                //lstSqlparams.Add(new SqlParameter("@USERLOANEMI", _obj_Smhr_Loanrequest.USERLOANEMI));
                //result = ExecuteNonQuery("USP_SMHR_LOANREQUEST", lstSqlparams.ToArray());
                //if (result > 0)
                //status = true;

                case operation.Update:

                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Update', @LOANREQUESTID='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) +
                                        "', @APPROVEDATE='" + _obj_Smhr_Loanrequest.APPROVEDDATE.ToString("MM/dd/yyyy") +
                                        "', @APPROVEDBY='" + _obj_Smhr_Loanrequest.APPROVEDBY +
                                        "', @LOANREQUESTSTATUS='" + _obj_Smhr_Loanrequest.STATUS +
                                        "', @ApprovalLevel1='" + _obj_Smhr_Loanrequest.LEVEL1 +
                                        "', @LOAN_NAME='" + _obj_Smhr_Loanrequest.LOANNAME +
                                        "', @MODIFIEDBY ='" + Convert.ToString(_obj_Smhr_Loanrequest.LASTMDFBY) + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Update1:

                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Update1', @LOANREQUESTID='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) +
                                        "', @APPROVEDATE='" + _obj_Smhr_Loanrequest.APPROVEDDATE.ToString("MM/dd/yyyy") +
                                        "', @APPROVEDBY='" + _obj_Smhr_Loanrequest.APPROVEDBY +
                                        "', @LOANREQUESTSTATUS='" + _obj_Smhr_Loanrequest.STATUS +
                                        "', @ApprovalLevel2='" + _obj_Smhr_Loanrequest.LEVEL1 +
                                        "', @MODIFIEDBY ='" + Convert.ToString(_obj_Smhr_Loanrequest.LASTMDFBY) + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Update_New:

                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Update_New', @LOANREQUESTID='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID)
                                       + "', @NOOFINSTALLMENTS='" + _obj_Smhr_Loanrequest.NOOFINSTALLMENTS
                                       + "', @AMOUNT='" + _obj_Smhr_Loanrequest.AMOUNT
                                       + "', @APPLIEDBY='" + _obj_Smhr_Loanrequest.APPLIEDBY
                                       + "', @APPLIEDDATE='" + _obj_Smhr_Loanrequest.APPLIEDDATE.ToString("MM/dd/yyyy")
                                       + "', @LOAN_PROCESS_TYPE='" + _obj_Smhr_Loanrequest.LOAN_PROCESS_TYPE
                                       + "', @MODIFIEDBY ='" + Convert.ToString(_obj_Smhr_Loanrequest.LASTMDFBY)
                                       + "', @APPROVEDATE ='" + _obj_Smhr_Loanrequest.APPROVEDDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    //lstSqlparams = new List<SqlParameter>();
                    //lstSqlparams.Add(new SqlParameter("@OPERATION", "Update_New"));
                    //lstSqlparams.Add(new SqlParameter("@LOANREQUESTID", _obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID));
                    //lstSqlparams.Add(new SqlParameter("@NOOFINSTALLMENTS", _obj_Smhr_Loanrequest.NOOFINSTALLMENTS));
                    //lstSqlparams.Add(new SqlParameter("@APPLIEDBY", _obj_Smhr_Loanrequest.APPLIEDBY));
                    //lstSqlparams.Add(new SqlParameter("@LOAN_NAME", _obj_Smhr_Loanrequest.LOANNAME));
                    //lstSqlparams.Add(new SqlParameter("@APPLIEDDATE", _obj_Smhr_Loanrequest.APPLIEDDATE));
                    //lstSqlparams.Add(new SqlParameter("@AMOUNT", _obj_Smhr_Loanrequest.AMOUNT));
                    //lstSqlparams.Add(new SqlParameter("@LOAN_REQUEST_VALUATIONDOC", _obj_Smhr_Loanrequest.LOANREQUEST_VALUATIONDOC));
                    //lstSqlparams.Add(new SqlParameter("@MODIFIEDBY", _obj_Smhr_Loanrequest.LASTMDFBY));
                    //lstSqlparams.Add(new SqlParameter("@MODIFIEDDATE", _obj_Smhr_Loanrequest.LASTMDFDATE));
                    //lstSqlparams.Add(new SqlParameter("@LOAN_PROCESS_TYPE", _obj_Smhr_Loanrequest.LOAN_PROCESS_TYPE));
                    //lstSqlparams.Add(new SqlParameter("@LOANVOUCHER", _obj_Smhr_Loanrequest.LOANVOUCHER));
                    //lstSqlparams.Add(new SqlParameter("@APPROVEDATE", _obj_Smhr_Loanrequest.APPROVEDDATE));
                    //lstSqlparams.Add(new SqlParameter("@USERLOANEMI", _obj_Smhr_Loanrequest.USERLOANEMI));
                    //lstSqlparams.Add(new SqlParameter("@LOANTYPE", _obj_Smhr_Loanrequest.LOANTYPE));
                    //result = ExecuteNonQuery("USP_SMHR_LOANREQUEST", lstSqlparams.ToArray());
                    //if (result > 0)
                    //    status = true;
                    //else
                    //    status = false;

                    break;
            }
            return status;
        }

        public static bool set_HRLoanRequest(SMHR_LOANREQUEST _obj_Smhr_Loanrequest)
        {
            bool status = false;
            switch (_obj_Smhr_Loanrequest.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Insert',@ORGANISATIONID='" + Convert.ToString(_obj_Smhr_Loanrequest.LOANREQUEST_ORGANISATION_ID) +
                                        "', @BUSINESSUNITID='" + _obj_Smhr_Loanrequest.BUSINESSUNIT_ID +
                                        "', @LOANTYPE='" + _obj_Smhr_Loanrequest.LOANTYPE +
                                        "', @EMPLOYEEID='" + _obj_Smhr_Loanrequest.lOANREQUEST_EMPLOYEEID +
                                        "', @NOOFINSTALLMENTS='" + _obj_Smhr_Loanrequest.NOOFINSTALLMENTS +
                                        "', @APPLIEDBY='" + _obj_Smhr_Loanrequest.APPLIEDBY +
                                        "', @APPLIEDDATE='" + _obj_Smhr_Loanrequest.APPLIEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOANREQUESTSTATUS='" + _obj_Smhr_Loanrequest.STATUS +
                                        "' , @CREATEDBY= " + Convert.ToString(_obj_Smhr_Loanrequest.CREATEDBY) +
                                        " , @CREATEDDATE='" + _obj_Smhr_Loanrequest.CREATEDDATE.ToString("MM/dd/yyyy") + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update1:

                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANREQUEST @Operation = 'Update1', @LOANREQUESTID='" + Convert.ToString(_obj_Smhr_Loanrequest.SMHR_LOANREQUEST_ID) +
                                        "', @LOANREQUESTSTATUS='" + _obj_Smhr_Loanrequest.STATUS +
                                        "', @ApprovalLevel2='" + _obj_Smhr_Loanrequest.LEVEL2 +
                                        "', @LoanMode='" + _obj_Smhr_Loanrequest.LoanMode +
                                        "', @APPROVEDATE='" + _obj_Smhr_Loanrequest.APPROVEDDATE.ToString("MM/dd/yyyy") +
                                        "', @APPROVEDBY='" + _obj_Smhr_Loanrequest.APPROVEDBY +
                                        "', @MODIFIEDBY ='" + Convert.ToString(_obj_Smhr_Loanrequest.LASTMDFBY) +
                                        "', @MODIFIEDDATE ='" + _obj_Smhr_Loanrequest.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TDS

        public static DataTable get_Tds(SMHR_TDS _obj_smhr_Tds)
        {
            if (_obj_smhr_Tds.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS @Operation='Select',@TDS_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_Tds.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_Tds.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS @Operation='Validate',@TDS_ID='" + _obj_smhr_Tds.TDS_ID + "'");
            }
            else if (_obj_smhr_Tds.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS @Operation='Empty',@TDS_ID='" + _obj_smhr_Tds.TDS_ID + "',@TDS_ORGANISATION_ID='" + _obj_smhr_Tds.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_Tds.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS @Operation='Check1',@TDS_BUSINESSUNIT_ID='" + _obj_smhr_Tds.TDS_BUSINESSUNIT + "',@TDS_ORGANISATION_ID='" + _obj_smhr_Tds.ORGANISATION_ID + "',@TDS_LOCALISATION_ID='" + _obj_smhr_Tds.TDS_LOCALISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS @Operation='Check',@TDS_BUSINESSUNIT_ID='" + Convert.ToInt32(_obj_smhr_Tds.TDS_BUSINESSUNIT) + "',@TDS_ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_Tds.ORGANISATION_ID) + "'");
            }
        }

        public static bool set_Tds(SMHR_TDS _obj_smhr_Tds)
        {
            bool status = false;

            switch (_obj_smhr_Tds.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDS @Operation='Insert',@TDS_LOCALISATION_ID='" + Convert.ToString(_obj_smhr_Tds.TDS_LOCALISATION_ID) +
                                        "',@TDS_NAME='" + _obj_smhr_Tds.TDS_NAME +
                                        "',@TDS_DESC='" + _obj_smhr_Tds.TDS_DESC +
                                        "',@TDS_STATUS='" + _obj_smhr_Tds.TDS_STATUS +
                                        "',@TDS_CREATEDBY='" + _obj_smhr_Tds.TDS_CREATEDBY +
                                        "',@TDS_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_Tds.TDS_CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "',@TDS_BUSINESSUNIT_ID='" + _obj_smhr_Tds.TDS_BUSINESSUNIT +
                                        "',@TDS_ORGANISATION_ID='" + _obj_smhr_Tds.ORGANISATION_ID +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDS @Operation='Update',@TDS_LOCALISATION_ID='" + Convert.ToString(_obj_smhr_Tds.TDS_LOCALISATION_ID) +
                                        "',@TDS_NAME='" + _obj_smhr_Tds.TDS_NAME +
                                        "',@TDS_ID='" + _obj_smhr_Tds.TDS_ID +
                                        "',@TDS_DESC='" + _obj_smhr_Tds.TDS_DESC +
                                        "',@TDS_STATUS='" + _obj_smhr_Tds.TDS_STATUS +
                                        "',@TDS_MODIFIEDBY='" + _obj_smhr_Tds.TDS_MODIFIEDBY +
                                        "',@TDS_MODIFIEDDATE='" + Convert.ToDateTime(_obj_smhr_Tds.TDS_MODIFIEDDATE).ToString("MM/dd/yyyy") +
                                        "',@TDS_BUSINESSUNIT_ID='" + _obj_smhr_Tds.TDS_BUSINESSUNIT +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TDS_SLAB

        public static DataTable get_TdsSlab(SMHR_TDS_SLAB _obj_smhr_Tds_Slab)
        {
            if (_obj_smhr_Tds_Slab.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Select',@TDS_SLAB_ORGANISATION_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_Tds_Slab.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Validate',@TDS_SLAB_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_ID + "'");
            }
            else if (_obj_smhr_Tds_Slab.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Check1',@TDS_SLAB_LOCALISATION_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_LOCALISATION_ID + "',@TDS_SLAB_BUSINESSUNIT_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_BUSINESSUNIT_ID + "',@TDS_SLAB_ORGANISATION_ID='" + _obj_smhr_Tds_Slab.ORGANISATION_ID + "',@TDS_SLAB_TDS_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_TDS_ID + "'");
                //return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Check1',@TDS_SLAB_COUNTRY_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_COUNTRY_ID + "',@TDS_SLAB_ORGANISATION_ID='" + _obj_smhr_Tds_Slab.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_Tds_Slab.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Get',@TDS_SLAB_ORGANISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_Tds_Slab.OPERATION == operation.Empty1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Empty1',@TDS_SLAB_ORGANISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.ORGANISATION_ID) + "',@TDS_SLAB_NAME='" + _obj_smhr_Tds_Slab.TDS_SLAB_NAME + "',@TDS_SLAB_TDS_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_TDS_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSSLAB @Operation='Check',@TDS_SLAB_TDS_ID='" + Convert.ToInt32(_obj_smhr_Tds_Slab.TDS_SLAB_TDS_ID) + "',@TDS_SLAB_ORGANISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.ORGANISATION_ID) + "'");
            }
        }

        public static bool set_TdsSlab(SMHR_TDS_SLAB _obj_smhr_Tds_Slab)
        {
            bool status = false;
            switch (_obj_smhr_Tds_Slab.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSSLAB @Operation='Insert',@TDS_SLAB_TDS_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_TDS_ID) +
                                        "',@TDS_SLAB_NAME='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_NAME) +
                                        "',@TDS_SLAB_DESC='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_DESC) +
                                        "',@TDS_SLAB_LOCALISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_LOCALISATION_ID) +
                                        "',@TDS_SLAB_BUSINESSUNIT_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_BUSINESSUNIT_ID) +
                                        "',@TDS_SLAB_ORGANISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_ORGANISATION_ID) +
                                        "',@TDS_SLAB_HR_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_HR_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSSLAB @Operation='Update',@TDS_SLAB_NAME='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_NAME) +
                                        "',@TDS_SLAB_DESC='" + Convert.ToString(_obj_smhr_Tds_Slab.TDS_SLAB_DESC) +
                                        "',@TDS_SLAB_ID='" + _obj_smhr_Tds_Slab.TDS_SLAB_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_TDS_PARAMS

        public static DataTable get_TDS_PARAMS(SMHR_TDS_PARAMS _obj_smhr_Tds_Params)
        {
            if (_obj_smhr_Tds_Params.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Select',@ORGANISATION_ID='" + Convert.ToString(_obj_smhr_Tds_Params.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_Tds_Params.OPERATION == operation.Validate1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Validate1',@TDS_PARAMS_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_ID) + "'");
            }
            else if (_obj_smhr_Tds_Params.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='CHECK',@TDS_PARAMS_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_ID) + "'");
            }
            else if (_obj_smhr_Tds_Params.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Get',@TDS_PARAMS_TDS_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_TDS_ID) + "',@ORGANISATION_ID='" + Convert.ToInt32(_obj_smhr_Tds_Params.ORGANISATION_ID) + "'");
            }
            //else if (_obj_smhr_Tds_Params.OPERATION == operation.Validate)
            //{
            //    return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='VALIDATE',@TDS_PARAMS_CURRENTPERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_CURRENTPERIOD_ID + "',@TDS_PARAMS_PERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_PERIOD_ID + "'");
            //}
            else if (_obj_smhr_Tds_Params.OPERATION == operation.Check1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Check1',@TDS_PARAMS_SLAB_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_SLAB_ID) + "',@TDS_PARAMS_FROMVAL='" + _obj_smhr_Tds_Params.TDS_PARAMS_FROMVAL + "',@TDS_PARAMS_TOVAL='" + _obj_smhr_Tds_Params.TDS_PARAMS_TOVAL + "',@TDS_PARAMS_PERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_PERIOD_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Empty',@TDS_PARAMS_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_ID) + "'");
            }
        }

        public static bool set_TDS_PARAMS(SMHR_TDS_PARAMS _obj_smhr_Tds_Params)
        {
            bool status = false;
            switch (_obj_smhr_Tds_Params.OPERATION)
            {
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Update',@TDS_PARAMS_SLAB_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_SLAB_ID) + "'" +
                                        ",@TDS_PARAMS_FROMVAL='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_FROMVAL) + "'" +
                                        ",@TDS_PARAMS_TOVAL='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_TOVAL) + "'" +
                                        ",@TDS_PARAMS_VALUE='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_VALUE) + "'" +
                                        ",@TDS_PARAMS_PERCENT='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_PERCENT) + "'" +
                                        ",@TDS_PARAMS_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_ID) + "'" +
                                        ",@TDS_PARAMS_MODIFIEDBY='" + Convert.ToString(_obj_smhr_Tds_Params.LASTMDFBY) + "'" +
                                        ",@TDS_PARAMS_MODIFIEDDATE='" + Convert.ToDateTime(_obj_smhr_Tds_Params.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@TDS_PARAMS_PERIOD_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_PERIOD_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Insert',@TDS_PARAMS_SLAB_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_SLAB_ID) + "'" +
                                        ",@TDS_PARAMS_FROMVAL='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_FROMVAL) + "'" +
                                        ",@TDS_PARAMS_TOVAL='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_TOVAL) + "'" +
                                        ",@TDS_PARAMS_VALUE='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_VALUE) + "'" +
                                        ",@TDS_PARAMS_PERCENT='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_PERCENT) + "'" +
                                        ",@TDS_PARAMS_CREATEDBY='" + Convert.ToString(_obj_smhr_Tds_Params.CREATEDBY) + "'" +
                                        ",@TDS_PARAMS_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_Tds_Params.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@TDS_PARAMS_PERIOD_ID='" + Convert.ToString(_obj_smhr_Tds_Params.TDS_PARAMS_PERIOD_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Validate:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSPARAMS @Operation='VALIDATE',@TDS_PARAMS_CREATEDBY='" + Convert.ToString(_obj_smhr_Tds_Params.CREATEDBY) + "'" +
                                        ",@TDS_PARAMS_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_Tds_Params.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@TDS_PARAMS_CURRENTPERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_CURRENTPERIOD_ID + "'" +
                                        ",@TDS_PARAMS_TDS_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_TDS_ID + "'" +
                                        ",@TDS_PARAMS_PERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_PERIOD_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TDSPARAMS @Operation='Delete',@TDS_PARAMS_SLAB_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_SLAB_ID + "',@TDS_PARAMS_PERIOD_ID='" + _obj_smhr_Tds_Params.TDS_PARAMS_CURRENTPERIOD_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_VARIABLEAMOUNT

        //THIS WILL TAKE CARE OF ALL OPERATIONS FOR VARIABLE_MASTER SCREEN AND ALSO TRANSACTION FOR VARIABLE AMOUNT

        public static DataTable get_Employeevariableamt(SMHR_VARIABLEAMT _obj_vamt)
        {
            if (Convert.ToString(_obj_vamt.OPERATION) == "Select")
            {
                if (_obj_vamt.financial_period == 0)
                    return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='SELECT',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "'");//,@FIN_PERIOD='" + _obj_vamt.financial_period + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='GET',@FIN_PERIOD='" + _obj_vamt.financial_period + "'");
            }
            else if (Convert.ToString(_obj_vamt.OPERATION) == "Check")
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='CHECK',@USER_ID='" + _obj_vamt.user_id + "',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='EDIT',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "',@FIN_PERIOD='" + _obj_vamt.financial_period + "'");
        }

        public static bool set_Empvaraiablamtmaster(SMHR_VARIABLEAMT _obj_vamt)
        {
            //if(_obj_vamt.OPERATION==operation.Insert)
            return ExecuteNonQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='INSERT',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "',@PAYABLE_PERIODS='" + _obj_vamt.selected_period +
                                   "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@VARIABLE_AMOUNT='" + _obj_vamt.emp_va + "',@VARIABLE_COUNT='" + _obj_vamt.emp_countva + "',@EMP_ID='" + _obj_vamt.emp_id + "',@MODIFIEDBY='" + _obj_vamt.LASTMDFBY + "',@CREATEDBY='" + _obj_vamt.CREATEDBY + "'");
            //else
            //    return ExecuteNonQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='UPDATE',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "',@PAYABLE_PERIODS='" + _obj_vamt.emp_period +
            //    "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@VARIABLE_AMOUNT='" + _obj_vamt.emp_va + "',@VARIABLE_COUNT='" + _obj_vamt.emp_countva + "',@EMP_ID='" + _obj_vamt.emp_id + "'");
        }

        public static DataTable get_Organisation_Isvp(string ORGANISATION_ID, string BUSINESSUNIT_ID)
        {
            if (BUSINESSUNIT_ID == string.Empty)
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='EMPTY',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='EMPTY',@ORGANISATION_ID='" + ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + BUSINESSUNIT_ID + "'");
        }

        public static DataTable get_CheckedPeriods(SMHR_VARIABLEAMT _obj_vamt)
        {
            // FOR KNOWING THE PERIODS WHICH AN EMPLOYEE PREVIOUSLY SELECTED
            return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='CHECK',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@PAYABLE_PERIODS='" + _obj_vamt.selected_period + "'");
        }

        public static DataTable get_employee_varamt(SMHR_VARIABLEAMT _obj_vamt)
        {
            return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='VALIDATE',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID +
                                "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@PERIOD='" + _obj_vamt.EMPSALDTLS_PRDDTL_ID + "'");
        }

        public static bool set_empvariablepay(SMHR_VARIABLEAMT _obj_vamt)
        {
            //FOR DUMPING TRANSACTION DATA RELATED TO VARIABLE PAY
            return ExecuteNonQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='SET',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID +
                                   "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@PERIOD='" + _obj_vamt.emp_period + "',@VARIABLE_AMOUNT=" + _obj_vamt.emp_va + ",@PERCENTAGE_VARIABLEAMOUNT='" + _obj_vamt.percentage +
                                   "',@EMP_SELECTEDPERIOD=" + _obj_vamt.emp_checkedperiod + ",@CREATEDBY=" + _obj_vamt.EMP_CREATEDBY + ",@MODIFIEDBY=" + _obj_vamt.EMP_LASTMDFBY + ",@STATUS='" + _obj_vamt.EMP_STATUS +
                                   "',@ISFINALISED=" + _obj_vamt.emp_isfinalised + ",@EMP_ID='" + _obj_vamt.emp_id + "',@COMPONENT_ID='" + _obj_vamt.component_id + "'");
        }

        public static DataTable get_empdoj(SMHR_VARIABLEAMT _obj_vamt)
        {
            if (_obj_vamt.OPERATION == operation.Check_New)
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='Check_New',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@EMP_ID='" + _obj_vamt.emp_id + "',@PERIOD='" + _obj_vamt.emp_period + "',@FIN_PERIOD='" + _obj_vamt.financial_period + "'");
            else if (_obj_vamt.OPERATION == operation.Empty1)
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='Empty1',@PERIOD='" + _obj_vamt.emp_period + "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "'");
            else if (_obj_vamt.OPERATION == operation.Empty2)
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='Empty2',@PERIOD='" + _obj_vamt.emp_period + "',@FIN_PERIOD='" + _obj_vamt.financial_period + "',@BUSINESSUNIT_ID='" + _obj_vamt.BUID + "',@EMP_ID='" + _obj_vamt.emp_id + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_VARIABLEAMOUNT @OPERATION='VALIDATE1',@ORGANISATION_ID='" + _obj_vamt.ORGANISATION_ID + "',@EMP_ID='" + _obj_vamt.emp_id + "',@PERIOD='" + _obj_vamt.emp_period + "',@FIN_PERIOD='" + _obj_vamt.financial_period + "'");
        }

        #region SMHR_VARIABLEPAYMASTER

        /// <summary>
        /// THIS REGION CONSISTS OF ALL OPERATIONS RELATED VARIABLE COMPONENTS 
        /// </summary>
        /// <param name="_obj_Master"></param>
        /// <returns> INFORMATION ABOUT THE COMPONENTS</returns>
        public static DataTable Get_Components(SMHR_VARIABLEAMT _obj_vpc)
        {
            if (_obj_vpc.OPERATION == operation.Check)
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='CHECK',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "'");
            else if (_obj_vpc.OPERATION == operation.Validate)
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='VALIDATE',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vpc.BUID + "',@EMPFINPERIOD_ID='" + _obj_vpc.financial_period + "',@EMP_ID='" + _obj_vpc.EMP_ID + "'");
            else if (_obj_vpc.OPERATION == operation.Validate1)
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='VALIDATE1',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_vpc.BUID + "',@EMPFINPERIOD_ID='" + _obj_vpc.financial_period + "',@EMP_ID='" + _obj_vpc.EMP_ID + "'");
            else if (_obj_vpc.OPERATION == operation.Select2)
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='SELECT2',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "',@COMPONENT_NAME='" + _obj_vpc.component_name + "'");
            else if (_obj_vpc.component_id == 0)
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='SELECT',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='SELECT',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "',@VPCOMPONENT_ID='" + _obj_vpc.component_id + "'");
        }

        public static bool set_Component(SMHR_VARIABLEAMT _obj_vpc)
        {
            switch (_obj_vpc.OPERATION)
            {
                case operation.Insert:
                    return ExecuteNonQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='INSERT',@COMPONENT_NAME='" + _obj_vpc.component_name +
                                           "',@COMPONENT_DESC='" + _obj_vpc.component_desc +
                                           "',@COMPONENT_MIN='" + _obj_vpc.component_min +
                                           "',@COMPONENT_MAX='" + _obj_vpc.component_max +
                                           "',@STATUS='" + _obj_vpc.component_status +
                                           "',@CREATEDBY='" + _obj_vpc.CREATEDBY +
                                           "',@MODIFIEDBY='" + _obj_vpc.LASTMDFBY +
                                           "',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID + "'");

                    break;
                case operation.Update:
                    return ExecuteNonQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='UPDATE',@COMPONENT_NAME='" + _obj_vpc.component_name +
                                           "',@COMPONENT_DESC='" + _obj_vpc.component_desc +
                                           "',@COMPONENT_MIN='" + _obj_vpc.component_min +
                                           "',@COMPONENT_MAX='" + _obj_vpc.component_max +
                                           "',@STATUS='" + _obj_vpc.component_status +
                                           "',@MODIFIEDBY='" + _obj_vpc.LASTMDFBY +
                                           "',@VPCOMPONENT_ID='" + _obj_vpc.component_id + "'");
                    break;
                case operation.MODE1:
                    return ExecuteNonQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='INSERT',@EMP_ID='" + _obj_vpc.EMP_ID +
                                           "',@BUSINESSUNIT_ID='" + _obj_vpc.BUID +
                                           "',@ORGANISATION_ID='" + _obj_vpc.ORGANISATION_ID +
                                           "',@EMPFINPERIOD_ID='" + _obj_vpc.financial_period +
                                           "',@EMPCOMPONENT_PERCENTAGE='" + _obj_vpc.component_percentage +
                                           "',@CREATEDBY='" + _obj_vpc.CREATEDBY +
                                           "',@MODIFIEDBY='" + _obj_vpc.LASTMDFBY +
                                           "',@VPCOMPONENT_ID='" + _obj_vpc.component_id + "'");
                    break;
                case operation.Delete:
                    return ExecuteNonQuery("EXEC USP_SMHR_VPC_DEFINATION @OPERATION='DELETE',@EMP_ID='" + _obj_vpc.EMP_ID +
                                           "'");
                    break;
                default:
                    return false;
                    break;
            }
        }

        #endregion

        #endregion

        #region SMHR_JOBREQUISITION Methods

        /// <summary>
        ///  Method to Get Job Requisition Based on the JOBREQ_ID
        /// </summary>
        /// <param name="JOBREQ_ID"></param>
        /// <returns>Datatable with Job Requisition Information</returns>
        /// <remarks>
        ///  Author             : Deepika 
        ///  Created on         :  2010-07-06
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_JobRequisition(SMHR_JOBREQUISITION _obj_Smhr_JobRequisition)
        {
            if (_obj_Smhr_JobRequisition.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Mode = '" + _obj_Smhr_JobRequisition.MODE + "'");
            }
            else if (_obj_Smhr_JobRequisition.MODE == 12)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Mode = '" + _obj_Smhr_JobRequisition.MODE + "'");
            }
            else if (_obj_Smhr_JobRequisition.MODE == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Mode = '" + _obj_Smhr_JobRequisition.MODE + "'");
            }
            else if (_obj_Smhr_JobRequisition.MODE == 11)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Mode = '" + _obj_Smhr_JobRequisition.MODE + "' ,@INTERVIWERNAME = '" + _obj_Smhr_JobRequisition.INTERVIWERNAME + "' ");
            }
            else if (_obj_Smhr_JobRequisition.MODE == 5)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @MODE = '" + _obj_Smhr_JobRequisition.MODE + "', @JR_ID = '" + _obj_Smhr_JobRequisition.JOBREQ_ID + "' ");
            }
            else if (_obj_Smhr_JobRequisition.OPERATION == operation.Select)
            {
                if (_obj_Smhr_JobRequisition.JOBREQ_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Select',@JOBREQ_ORGANISATION_ID = " + _obj_Smhr_JobRequisition.JOBREQ_ORGANISATION_ID + ", @JOBREQ_RAISEDBY =" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_RAISEDBY));
                    // @JOBREQ_BUSINESSUNIT_ID = " + _obj_Smhr_JobRequisition.JOBREQ_BUSINESSUNIT_ID + ", 
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Select',@JOBREQ_ID = '" + _obj_Smhr_JobRequisition.JOBREQ_ID + "' ");
                }
            }
            else
            {
                if (_obj_Smhr_JobRequisition.JOBREQ_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Check', @JOBREQ_REQCODE ='" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_REQCODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Check', @JOBREQ_REQCODE ='" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_REQCODE) + "', @JOBREQ_ID =" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_ID));
            }
        }

        public static DataTable get_OfferLetterCheck(SMHR_JOBOFFERS _obj_Smhr_jobOffer)
        {
            DataTable DT = new DataTable();
            if (_obj_Smhr_jobOffer.MODE == 1)
            {
                DT = ExecuteQuery("EXEC USP_SMHR_JOBOFFERS @Mode =1,@joboffrs_reqcode='" + _obj_Smhr_jobOffer.JOBOFFRS_REQCODE + "'");
            }
            return DT;
        }

        public static DataTable get_JrCode(SMHR_JOBREQUISITION _obj_Smhr_JobRequisition)
        {
            return ExecuteQuery(" EXEC USP_SMHR_JOBREQUISITION @Operation = 'load',@ORGANISATION_ID = '" + _obj_Smhr_JobRequisition.ORGANISATION_ID + "'");
        }

        public static DataTable get_Applicant(SMHR_JOBOFFERS _obj_Smhr_jobOffer)
        {
            if (_obj_Smhr_jobOffer.OPERATION == operation.Check)
            {
                return ExecuteQuery(" EXEC USP_SMHR_JOBOFFERS @Operation = 'Check',@JOBOFFRS_APPLICANT_ID = '" + _obj_Smhr_jobOffer.JOBOFFRS_APPLICANT_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_JOBOFFERS @Operation = 'Check',@JOBOFFRS_APPLICANT_ID = '" + _obj_Smhr_jobOffer.JOBOFFRS_APPLICANT_ID + "', @JOBOFFRS_ID =" + Convert.ToString(_obj_Smhr_jobOffer.JOBOFFRS_ID));
            }
        }

        public static DataTable get_JobRequisition_jrid(SMHR_JOBREQUISITION _obj_Smhr_JobRequisition)
        {
            return ExecuteQuery("EXEC USP_SMHR_JR_SKILLS @Mode = '5'");
        }

        public static DataTable get_JobReqDetails(SMHR_JOBREQUISITION _obj_Smhr_JobReqDetails)
        {
            if (_obj_Smhr_JobReqDetails.OPERATION == operation.load)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBOFFERS @operation='load',@JOBREQ_ID='" + _obj_Smhr_JobReqDetails.JOBREQ_ID + "'");
            }
            else if (_obj_Smhr_JobReqDetails.OPERATION == operation.loadapplicant)
            {
                return ExecuteQuery("EXEC USP_SMHR_JOBOFFERS @operation='loadapplicant',@APPLICANT_ID='" + _obj_Smhr_JobReqDetails.APPLICANT + "'");
            }
            else if (_obj_Smhr_JobReqDetails.OPERATION == operation.Empty)
            {
                if (_obj_Smhr_JobReqDetails.JOBREQ_ID.ToString() == "0")
                {
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Empty'");
                }
                else
                {
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Empty',@JOBREQ_ID = '" + _obj_Smhr_JobReqDetails.JOBREQ_ID + "'");
                }
            }
            else
            {
                if (_obj_Smhr_JobReqDetails.JOBREQ_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Check', @JOBREQ_REQCODE ='" + Convert.ToString(_obj_Smhr_JobReqDetails.JOBREQ_REQCODE) + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Check', @JOBREQ_REQCODE ='" + Convert.ToString(_obj_Smhr_JobReqDetails.JOBREQ_REQCODE) + "', @JOBREQ_ID =" + Convert.ToString(_obj_Smhr_JobReqDetails.JOBREQ_ID));
            }
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_JOBREQUISITION table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_JobRequisition"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : Deepika 
        ///  Created on         : 2010-07-06
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_JobRequisition(SMHR_JOBREQUISITION _obj_Smhr_JobRequisition)
        {
            bool status = false;
            switch (_obj_Smhr_JobRequisition.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Insert', @JOBREQ_REQCODE='" + _obj_Smhr_JobRequisition.JOBREQ_REQCODE +
                                        "', @JOBREQ_REQNAME='" + _obj_Smhr_JobRequisition.JOBREQ_REQNAME +
                                        "', @JOBREQ_REQDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_REQDATE).ToString("MM/dd/yyyy") + "" +
                                        "', @JOBREQ_REQEXPIRY='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_REQEXPIRY).ToString("MM/dd/yyyy") + "" +
                                        "', @JOBREQ_RAISEDBY=" + _obj_Smhr_JobRequisition.JOBREQ_RAISEDBY +
                                        " , @JOBREQ_STATUS='" + _obj_Smhr_JobRequisition.JOBREQ_STATUS +
                                        "', @JOBREQ_BUSINESSUNIT_ID=" + _obj_Smhr_JobRequisition.JOBREQ_BUSINESSUNIT_ID +
                                        " , @JOBREQ_DEPARTMENT=" + _obj_Smhr_JobRequisition.JOBREQ_DEPARTMENT +
                                        " , @JOBREQ_DESIGNATION=" + _obj_Smhr_JobRequisition.JOBREQ_DESIGNATION +
                                        " , @JOBREQ_APPROVALSTATUS=" + _obj_Smhr_JobRequisition.JOBREQ_APPROVALSTATUS +
                                        " , @JOBREQ_POSITIONS=" + _obj_Smhr_JobRequisition.JOBREQ_OPENINGS +
                                        " , @JOBREQ_EXPYEARS=" + _obj_Smhr_JobRequisition.JOBREQ_EXPYEARS +
                                        " , @JOBREQ_ISYEARSREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISYEARSREQ +
                                        "', @JOBREQ_QUALIFICATION=" + _obj_Smhr_JobRequisition.JOBREQ_QUALIFICATION +
                                        ", @JOBREQ_AppCTC=" + _obj_Smhr_JobRequisition.JOBREQ_AppCTC +
                                        " , @JOBREQ_ISQUALREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISQUALREQ
                                        //+ "' , @JOBREQ_ISBUSINESSUNIT='" + _obj_Smhr_JobRequisition.JOBREQ_ISBUSINESSUNIT
                                        +
                                        "', @JOBREQ_PERCENTAGE='" + _obj_Smhr_JobRequisition.JOBREQ_PERCENTAGE
                                        //+ " , @JOBREQ_ISPERCENTAGEREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISPERCENTAGEREQ
                                        //+ "', @JOREQ_SKILL=" + _obj_Smhr_JobRequisition.JOREQ_SKILL
                                        //+ " ', @JOBREQ_ISSKILLREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISSKILLREQ
                                        +
                                        "', @JOBREQ_COMMENTS='" + _obj_Smhr_JobRequisition.JOBREQ_COMMENTS +
                                        "', @JOBREQ_BUDGETESTIMATION='" + _obj_Smhr_JobRequisition.JOBREQ_BUDGETESTIMATION +
                                        "', @JOBREQ_CREATEDBY= " + Convert.ToString(_obj_Smhr_JobRequisition.CREATEDBY) +
                                        " , @JOBREQ_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "', @JOBREQ_LASTMDFBY =" + Convert.ToString(_obj_Smhr_JobRequisition.LASTMDFBY) +
                                        " , @JOBREQ_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.LASTMDFDATE).ToString("MM/dd/yyyy") +
                                        "' , @JOBREQ_ACTUALCLOSEDDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_ACTUALCLOSEDDATE).ToString("MM/dd/yyyy") +
                                        "', @JOBREQ_ORGANISATION_ID=" + _obj_Smhr_JobRequisition.JOBREQ_ORGANISATION_ID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Update',@JOBREQ_ID=" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_ID) +
                                        " , @JOBREQ_REQCODE='" + _obj_Smhr_JobRequisition.JOBREQ_REQCODE +
                                        "', @JOBREQ_REQNAME='" + _obj_Smhr_JobRequisition.JOBREQ_REQNAME +
                                        "', @JOBREQ_REQDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_REQDATE).ToString("MM/dd/yyyy") + "" +
                                        "', @JOBREQ_REQEXPIRY='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_REQEXPIRY).ToString("MM/dd/yyyy") + "" +
                                        "', @JOBREQ_RAISEDBY=" + _obj_Smhr_JobRequisition.JOBREQ_RAISEDBY +
                                        " , @JOBREQ_STATUS='" + _obj_Smhr_JobRequisition.JOBREQ_STATUS +
                                        "', @JOBREQ_BUSINESSUNIT_ID=" + _obj_Smhr_JobRequisition.JOBREQ_BUSINESSUNIT_ID +
                                        " , @JOBREQ_DEPARTMENT=" + _obj_Smhr_JobRequisition.JOBREQ_DEPARTMENT +
                                        " , @JOBREQ_DESIGNATION=" + _obj_Smhr_JobRequisition.JOBREQ_DESIGNATION +
                                        " , @JOBREQ_APPROVALSTATUS=" + _obj_Smhr_JobRequisition.JOBREQ_APPROVALSTATUS +
                                        " , @JOBREQ_POSITIONS=" + _obj_Smhr_JobRequisition.JOBREQ_OPENINGS +
                                        " , @JOBREQ_EXPYEARS=" + _obj_Smhr_JobRequisition.JOBREQ_EXPYEARS +
                                        " , @JOBREQ_ISYEARSREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISYEARSREQ +
                                        "', @JOBREQ_QUALIFICATION='" + _obj_Smhr_JobRequisition.JOBREQ_QUALIFICATION +
                                        "',@JOBREQ_AppCTC=" + _obj_Smhr_JobRequisition.JOBREQ_AppCTC +
                                        " , @JOBREQ_ISQUALREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISQUALREQ
                                        //+ "', @JOBREQ_ISBUSINESSUNIT='" + _obj_Smhr_JobRequisition.JOBREQ_ISBUSINESSUNIT
                                        +
                                        "', @JOBREQ_PERCENTAGE='" + _obj_Smhr_JobRequisition.JOBREQ_PERCENTAGE
                                        //+ " , @JOBREQ_ISPERCENTAGEREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISPERCENTAGEREQ
                                        //+ ", @JOREQ_SKILL=" + _obj_Smhr_JobRequisition.JOREQ_SKILL
                                        //+ "', @JOBREQ_ISSKILLREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISSKILLREQ
                                        +
                                        "', @JOBREQ_COMMENTS='" + _obj_Smhr_JobRequisition.JOBREQ_COMMENTS +
                                        "', @JOBREQ_BUDGETESTIMATION='" + _obj_Smhr_JobRequisition.JOBREQ_BUDGETESTIMATION +
                                        "', @JOBREQ_LASTMDFBY =" + Convert.ToString(_obj_Smhr_JobRequisition.LASTMDFBY) +
                                        " , @JOBREQ_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.LASTMDFDATE).ToString("MM/dd/yyyy") +
                                        "' , @JOBREQ_ACTUALCLOSEDDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_ACTUALCLOSEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Check1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBREQUISITION @Operation = 'Check1', @JOBREQ_APPROVEDBY=" + Convert.ToInt32(_obj_Smhr_JobRequisition.JOBREQ_APPROVEDBY) +
                                        ", @JOBREQ_ID=" + Convert.ToString(_obj_Smhr_JobRequisition.JOBREQ_ID) +
                                        " , @JOBREQ_APPROVEDDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.JOBREQ_APPROVEDDATE).ToString("MM/dd/yyyy") +
                                        "', @JOBREQ_APPROVALSTATUS=" + _obj_Smhr_JobRequisition.JOBREQ_APPROVALSTATUS +
                                        " , @JOBREQ_LASTMDFBY =" + Convert.ToString(_obj_Smhr_JobRequisition.LASTMDFBY) +
                                        " , @JOBREQ_LASTMDFDATE='" + _obj_Smhr_JobRequisition.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region skillsJobReq

        public static DataTable get_SKILLSJOBREQ(SMHR_JOBREQSKILLS _obj_Smhr_jobreqskills)
        {
            DataTable Dt = new DataTable();
            if (_obj_Smhr_jobreqskills.MODE == 1)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_JR_SKILLS @MODE = 1,@JR_ID ='" + Convert.ToInt32(_obj_Smhr_jobreqskills.JR_ID) + "'");
            }
            if (_obj_Smhr_jobreqskills.MODE == 6)
            {
                if (_obj_Smhr_jobreqskills.JR_SKILLS_ID.ToString() == "0")
                    Dt = ExecuteQuery("EXEC USP_SMHR_JR_SKILLS @MODE=6, @SKILL_ID ='" + Convert.ToString(_obj_Smhr_jobreqskills.SKILL_ID) + "', @JR_ID =" + Convert.ToString(_obj_Smhr_jobreqskills.JR_ID));
            }
            else if (_obj_Smhr_jobreqskills.MODE == 7)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_JR_SKILLS @MODE ='" + _obj_Smhr_jobreqskills.MODE + "',@JR_ID ='" + _obj_Smhr_jobreqskills.JR_ID + "' ");
            }

            return Dt;
        }

        public static bool set_Jr_Skills(SMHR_JOBREQSKILLS _obj_Smhr_jobreqskills)
        {
            bool status = false;
            switch (_obj_Smhr_jobreqskills.MODE)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBREQUISITION @MODE='3', @JR_ID = '" + _obj_Smhr_jobreqskills.JR_ID + "'" +
                                        ",@SKILL_ID = '" + Convert.ToInt32(_obj_Smhr_jobreqskills.SKILL_ID) + "'" +
                                        ",@JOBREQ_ISSKILLREQ = '" + Convert.ToInt32(_obj_Smhr_jobreqskills.JOBREQ_ISSKILLREQ) + "'" +
                                        ",@CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_jobreqskills.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@CREATEDBY='" + Convert.ToInt32(_obj_Smhr_jobreqskills.CREATEDBY) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 4:
                    if (ExecuteNonQuery("EXEC USP_SMHR_JOBREQUISITION @MODE='4', @JR_ID = '" + _obj_Smhr_jobreqskills.JR_ID + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_SKILLSJOBREQ(SMHR_JOBREQSKILLS _obj_Smhr_JobRequisition)
        {
            try
            {
                bool status = false;
                switch (_obj_Smhr_JobRequisition.OPERATION)
                {
                    case operation.Insert:
                        if (ExecuteNonQuery("EXEC USP_SMHR_JR_SKILLS @MODE = 3, @JR_ID ='" + _obj_Smhr_JobRequisition.JR_ID +
                                            "',@SKILL_ID='" + _obj_Smhr_JobRequisition.SKILL_ID +
                                            "',@JOBREQ_ISSKILLREQ='" + _obj_Smhr_JobRequisition.JOBREQ_ISSKILLREQ +
                                            "',@CREATEDBY='" + _obj_Smhr_JobRequisition.CREATEDBY +
                                            "',@CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_JobRequisition.CREATEDDATE).ToString("MM/dd/yyyy") +
                                            "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static bool set_DELETESKILLS(SMHR_JOBREQSKILLS _obj_Smhr_JobRequisition)
        {
            try
            {
                bool status = false;
                switch (_obj_Smhr_JobRequisition.OPERATION)
                {
                    case operation.Delete:
                        if (ExecuteNonQuery("EXEC USP_SMHR_JR_SKILLS @MODE = 8,@JR_SKILLS_ID='" + _obj_Smhr_JobRequisition.JR_SKILLS_ID + "'"))
                            status = true;
                        else
                            status = false;
                        break;
                    default:
                        break;
                }
                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

        #region SMHR_SKILLSCATEGARY

        public static DataTable get_skillscategary(SMHR_SKILLSCATEGARY _obj_Smhr_skillscategary)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_skillscategary.MODE == 1)
            {
                dt = ExecuteQuery("EXEC [USP_SMHRSKILLCATEGORY]  @SKILLCAT_ID = " + _obj_Smhr_skillscategary.SKILLCAT_ID +
                                  " , @mode = '" + _obj_Smhr_skillscategary.MODE + "'");
            }
            else if (_obj_Smhr_skillscategary.MODE == 6)
            {
                dt = ExecuteQuery("EXEC [USP_SMHRSKILLCATEGORY]  @SKILLCAT_NAME = '" + _obj_Smhr_skillscategary.SKILLCAT_NAME + "'" +
                                  " , @MODE = '" + _obj_Smhr_skillscategary.MODE + "'");
            }
            else if (_obj_Smhr_skillscategary.MODE == 7)
            {
                dt = ExecuteQuery("EXEC [USP_SMHRSKILLCATEGORY]  @SKILLCAT_ORGANISATION_ID = '" + _obj_Smhr_skillscategary.ORGANISATION_ID + "'" +
                                  " , @MODE = '" + _obj_Smhr_skillscategary.MODE + "'");
            }
            else if (_obj_Smhr_skillscategary.MODE == 19)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF  @MODE = 19,@PHASE_ID='" + _obj_Smhr_skillscategary.PHASE_ID + "'");
            }
            else
            {
                dt = ExecuteQuery("EXEC[USP_SMHRSKILLCATEGORY] @MODE = '2',  @SKILLCAT_ID = " + _obj_Smhr_skillscategary.SKILLCAT_ID + "");
            }
            return dt;
        }

        public static bool set_skillscategary(SMHR_SKILLSCATEGARY _obj_Smhr_skillscategary)
        {
            if (_obj_Smhr_skillscategary.MODE == 3)
            {
                return ExecuteNonQuery(" EXEC [USP_SMHRSKILLCATEGORY] @SKILLCAT_SKILLID = '" + _obj_Smhr_skillscategary.SKILLCAT_SKILLID + "'" +
                                       ", @SKILLCAT_NAME = '" + Convert.ToString(_obj_Smhr_skillscategary.SKILLCAT_NAME) + "'" +
                                       ", @SKILLCAT_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_skillscategary.SKILLCAT_DESCRIPTION) + "'" +
                                       ", @SKILLCAT_CREATEDBY= " + Convert.ToString(_obj_Smhr_skillscategary.CREATEDBY) + "" +
                                       ", @SKILLCAT_ORGANISATION_ID= " + _obj_Smhr_skillscategary.ORGANISATION_ID +
                                       " , @SKILLCAT_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_skillscategary.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                       //", @SKILLCAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_skillscategary.LASTMDFBY) + "" +
                                       // " , @SKILLCAT_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_skillscategary.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @MODE = '" + _obj_Smhr_skillscategary.MODE + "'");
            }
            else if (_obj_Smhr_skillscategary.MODE == 4)
            {
                return ExecuteNonQuery("EXEC [USP_SMHRSKILLCATEGORY] @SKILLCAT_ID  = '" + _obj_Smhr_skillscategary.SKILLCAT_ID + "'" +
                                       ", @SKILLCAT_SKILLID = '" + _obj_Smhr_skillscategary.SKILLCAT_SKILLID + "'" +
                                       ", @SKILLCAT_NAME = '" + Convert.ToString(_obj_Smhr_skillscategary.SKILLCAT_NAME) + "'" +
                                       ", @SKILLCAT_DESCRIPTION = '" + Convert.ToString(_obj_Smhr_skillscategary.SKILLCAT_DESCRIPTION) + "'" +
                                       ", @SKILLCAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_skillscategary.LASTMDFBY) + "" +
                                       ", @SKILLCAT_ORGANISATION_ID= " + _obj_Smhr_skillscategary.ORGANISATION_ID +
                                       " , @SKILLCAT_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_skillscategary.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                       ", @MODE = '" + _obj_Smhr_skillscategary.MODE + "'");
            }
            else
            {
                return ExecuteNonQuery(" EXEC [USP_SMHRSKILLCATEGORY]  @MODE = '5',  @SKILLCAT_ID  = '" + _obj_Smhr_skillscategary.SKILLCAT_ID + "'" +
                                       " ");
            }
        }

        #endregion

        #region SMHR_RESUMESHORTLIST

        public static DataTable getApplicants(SMHR_RESUMESHORTLIST _obj_Smhr_ResumeShortList)
        {
            DataTable Dt = new DataTable();
            if (_obj_Smhr_ResumeShortList.Mode == 1)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 2)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 3)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 4)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 5)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 6)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 7)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @JOBREQ_REQCODE ='" + _obj_Smhr_ResumeShortList.JOBREQ_REQCODE + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 8)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "',  @RESSHT_APPLID = " + _obj_Smhr_ResumeShortList.RESSHT_APPLID + " ");
                //@RESSHT_JOBREQID =" + _obj_Smhr_ResumeShortList.RESSHT_JOBREQID + ",
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 9)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @RESSHT_JOBREQID ='" + _obj_Smhr_ResumeShortList.RESSHT_JOBREQID + "' ");
            }
            else if (_obj_Smhr_ResumeShortList.Mode == 10)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_RESUMESHORTLIST @MODE = '" + _obj_Smhr_ResumeShortList.Mode + "', @RESSHT_JOBREQID ='" + _obj_Smhr_ResumeShortList.RESSHT_JOBREQID + "' ");
            }

            return Dt;
        }

        public static bool set_ResumeShortList(SMHR_RESUMESHORTLIST _obj_Smhr_ResumeShortList)
        {
            bool status = false;
            switch (_obj_Smhr_ResumeShortList.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESUMESHORTLIST @Operation = 'Insert', @RESSHT_JOBREQID =" + _obj_Smhr_ResumeShortList.RESSHT_JOBREQID +
                                        ", @RESSHT_APPLID=" + _obj_Smhr_ResumeShortList.RESSHT_APPLID +
                                        ",@RESSHT_ISSHORTLIST = '" + Convert.ToBoolean(_obj_Smhr_ResumeShortList.RESSHT_ISSHORTLIST) +
                                        "', @RESSHT_CREATEDBY= " + Convert.ToString(_obj_Smhr_ResumeShortList.CREATEDBY) +
                                        " , @RESSHT_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_ResumeShortList.CREATEDDATE).ToString("MM/dd/yyyy") +
                                        "', @RESSHT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_ResumeShortList.LASTMDFBY) +
                                        " , @RESSHT_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_ResumeShortList.LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_RESUMESHORTLIST @Operation = 'Update',@RESSHT_ID=" + _obj_Smhr_ResumeShortList.RESSHT_ID +
                                        ",   @RESSHT_JOBREQID =" + _obj_Smhr_ResumeShortList.RESSHT_JOBREQID +
                                        ", @RESSHT_APPLID=" + _obj_Smhr_ResumeShortList.RESSHT_APPLID +
                                        ",@RESSHT_ISSHORTLIST = '" + Convert.ToBoolean(_obj_Smhr_ResumeShortList.RESSHT_ISSHORTLIST) +
                                        "', @RESSHT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_ResumeShortList.LASTMDFBY) +
                                        " , @RESSHT_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_ResumeShortList.LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_INTERVIEWASSESSMENTFORM

        public static DataTable GET_SMHR_INTERVIEWASSESSMENTFORM(SMHR_INTERVIEWASSESSMENTFORM _OBJ_SMHR_INTERVIEWASSESSMENTFORM)
        {
            DataTable Dt = new DataTable();
            if (_OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE == 12)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE + "', @IAF_JOBREID ='" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_JOBREID + "',@IAF_APPLID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + ",@IAF_PHASEDEFID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_PHASEDEFID + "");
            }
            else if (_OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE == 13)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE + "', @IAF_JOBREID ='" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_JOBREID + "',@IAF_APPLID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + ",@IAF_PHASEDEFID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_PHASEDEFID + ",@IAF_ORGANISATION_ID=" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_ORGANISATION_ID + "");
            }
            else if (_OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE == 14)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE + "', @IAF_JOBREID ='" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_JOBREID + "',@IAF_APPLID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + ",@IAF_PHASEDEFID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_PHASEDEFID + ",@IAF_ORGANISATION_ID=" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_ORGANISATION_ID + "");
            }
            else if (_OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE == 15)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.MODE + "', @IAF_JOBREID ='" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_JOBREID + "',@IAF_APPLID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + ",@IAF_PHASEDEFID =" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_PHASEDEFID + ",@IAF_ORGANISATION_ID=" + _OBJ_SMHR_INTERVIEWASSESSMENTFORM.IAF_ORGANISATION_ID + "");
            }

            return Dt;
        }

        #endregion

        #region SMHR_INTERVIEW_PHASE_DEF

        public static DataTable get_InterviewPhaseDefinition(SMHR_INTERVIEW_PHASE_DEF _obj_SMHR_INTERVIEW_PHASE_DEF)
        {
            DataTable Dt = new DataTable();
            if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 3)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 4)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_ID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_ID + "' ");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 5)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "',@PHASE_NAME ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Name + "' ");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 6)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 7)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "',@IAF_APPLID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Applicant + "',@PHASE_INTERVIEWERNAME ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_INTERVIEWERNAME + "' ");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 8)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 9)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @JOBREID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 10)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "',@PHASE_INTERVIEWERNAME ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_INTERVIEWERNAME + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 11)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 12)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 13)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Mode + "', @PHASE_JOBREQID ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID + "'");
            }
            else if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 15)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = 15");
            }
            if (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode == 17)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE =17,@PHASE_DEF_SKILLS_PHASEID='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_ID + "'");
            }
            return Dt;
        }

        public static bool set_interview_def_skills(SMHR_INTERVIEW_PHASE_DEF_SKILLS _obj_smhr_def_skills)
        {
            bool status = false;
            switch (_obj_smhr_def_skills.MODE)
            {
                case 14:
                    if (ExecuteNonQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE='14', @PHASE_DEF_SKILLS_SKILLID = '" + _obj_smhr_def_skills.PHASE_DEF_SKILLS_SKILLID + "'" +
                                        ",@PHASE_DEF_SKILLS_PHASEID = '" + Convert.ToInt32(_obj_smhr_def_skills.PHASE_DEF_SKILLS_PHASEID) + "'" +
                                        ",@PHASE_DEF_SKILLS_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_def_skills.PHASE_DEF_SKILLS_CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@PHASE_DEF_SKILLS_CREATEDBY='" + Convert.ToInt32(_obj_smhr_def_skills.PHASE_DEF_SKILLS_CREATEDBY) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 18:
                    if (ExecuteNonQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE='18', @PHASE_DEF_SKILLS_PHASEID = '" + _obj_smhr_def_skills.PHASE_DEF_SKILLS_PHASEID + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_InterviewPhaseDefinition(SMHR_INTERVIEW_PHASE_DEF _obj_SMHR_INTERVIEW_PHASE_DEF)
        {
            bool status = false;
            switch (_obj_SMHR_INTERVIEW_PHASE_DEF.Mode)
            {
                case 1:

                    if (ExecuteNonQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '1', @PHASE_NAME  ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Name +
                                        "', @PHASE_DESC ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Desc +
                                        "', @PHASE_JOBREQID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID +
                                        "', @PHASE_SKILL = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_SKILL +
                                        "', @PHASE_FINAL = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_FINAL +
                                        "', @PHASE_BUSINESSUNIT = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_BUSINESSUNIT +
                                        "', @PHASE_INTERVIEWERNAME = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_INTERVIEWERNAME +
                                        "', @PHASE_INTERVIEWDATE = '" + Convert.ToString(_obj_SMHR_INTERVIEW_PHASE_DEF.Phase_InterviewDate.ToString("MM/dd/yyyy HH:mm")) +
                                        "', @PHASE_PRIORITY = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_PRIORITY +
                                        "', @PHASE_GRADESET = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_GRADESET +
                                        "', @PHASE_ORGANISATION_ID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_ORGANISATION_ID +
                                        "', @PHASE_CREATEDBY = " + Convert.ToString(_obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Createdby) +
                                        " , @PHASE_CREATEDDATE ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_CreatedDate.ToString("MM/dd/yyyy") +
                                        "', @PHASE_LASTMDFBY =" + Convert.ToString(_obj_SMHR_INTERVIEW_PHASE_DEF.Phase_LastMdfBy) +
                                        " , @PHASE_LASTMDFDATE ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_LastMdfdate.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_INTERVIEW_PHASE_DEF @MODE = '2', @PHASE_NAME ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Name +
                                        "', @PHASE_ID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_ID +
                                        "', @PHASE_DESC ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_Desc +
                                        "', @PHASE_JOBREQID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_JobReqID +
                                        "', @PHASE_SKILL = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_SKILL +
                                        "', @PHASE_FINAL = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_FINAL +
                                        "', @PHASE_BUSINESSUNIT = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_BUSINESSUNIT +
                                        "', @PHASE_INTERVIEWERNAME = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_INTERVIEWERNAME +
                                        "', @PHASE_PRIORITY = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_PRIORITY +
                                        "', @PHASE_GRADESET = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_GRADESET +
                                        "', @PHASE_ORGANISATION_ID = '" + _obj_SMHR_INTERVIEW_PHASE_DEF.PHASE_ORGANISATION_ID +
                                        "', @PHASE_LASTMDFBY =" + Convert.ToString(_obj_SMHR_INTERVIEW_PHASE_DEF.Phase_LastMdfBy) +
                                        " , @PHASE_LASTMDFDATE ='" + _obj_SMHR_INTERVIEW_PHASE_DEF.Phase_LastMdfdate.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_INTERVIEW_PRIORITY

        public static DataTable get_InterviewPriority(SMHR_INTERVIEW_PRIORITY _obj_SMHR_INTERVIEW_PRIORITY)
        {
            DataTable Dt = new DataTable();

            if (_obj_SMHR_INTERVIEW_PRIORITY.MODE == 1)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEW_PRIORITY @MODE = '" + _obj_SMHR_INTERVIEW_PRIORITY.MODE + "',@PRIORITY_ORGANIZATIONID = '" + _obj_SMHR_INTERVIEW_PRIORITY.PRIORITY_ORGANIZATIONID + "'");
            }
            return Dt;
        }

        #endregion

        #region SMHR_APPLICANTGRADE

        public static DataTable get_ApplicantGrade(SMHR_APPLICANTGRADE _obj_SMHR_APPLICANTGRADE)
        {
            DataTable dt = new DataTable();

            if (_obj_SMHR_APPLICANTGRADE.MODE == 1)
            {
                dt = ExecuteQuery("Exec USP_SMHR_APPLICANTGRADE @MODE = '" + _obj_SMHR_APPLICANTGRADE.MODE + "',@APPGRADE_NAME ='" + _obj_SMHR_APPLICANTGRADE.APPGRADE_NAME + "'");
            }
            else if (_obj_SMHR_APPLICANTGRADE.MODE == 4)
            {
                dt = ExecuteQuery("Exec USP_SMHR_APPLICANTGRADE @MODE = '" + _obj_SMHR_APPLICANTGRADE.MODE + "',@APPGRADE_NAME ='" + _obj_SMHR_APPLICANTGRADE.APPGRADE_NAME + "',@APPGRADE_SETID ='" + _obj_SMHR_APPLICANTGRADE.APPGRADE_SETID + "'");
            }
            else if (_obj_SMHR_APPLICANTGRADE.MODE == 5)
            {
                dt = ExecuteQuery("Exec USP_SMHR_APPLICANTGRADE @MODE =  '" + _obj_SMHR_APPLICANTGRADE.MODE + "',@APPLGRADE_ORGANISATION_ID = '" + _obj_SMHR_APPLICANTGRADE.ORGANISATION_ID + "'");
            }
            else if (_obj_SMHR_APPLICANTGRADE.MODE == 6)
            {
                dt = ExecuteQuery("Exec USP_SMHR_APPLICANTGRADE @MODE = '" + _obj_SMHR_APPLICANTGRADE.MODE + "',@APPLGRADE_ID = '" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_ID + "'");
            }
            return dt;
        }

        public static bool set_ApplicantGrade(SMHR_APPLICANTGRADE _obj_SMHR_APPLICANTGRADE)
        {
            bool status = false;
            switch (_obj_SMHR_APPLICANTGRADE.MODE)
            {
                case 2:

                    if (ExecuteNonQuery("EXEC USP_SMHR_APPLICANTGRADE @MODE = '2', @APPGRADE_SETID = '" + _obj_SMHR_APPLICANTGRADE.APPGRADE_SETID +
                                        "', @APPGRADE_NAME = '" + _obj_SMHR_APPLICANTGRADE.APPGRADE_NAME +
                                        "', @APPLGRADE_DESCRIPTION = '" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_DESCRIPTION +
                                        "', @APPLGRADE_ORGANISATION_ID = '" + _obj_SMHR_APPLICANTGRADE.ORGANISATION_ID +
                                        "', @APPLGRADE_CREATEDBY = " + Convert.ToString(_obj_SMHR_APPLICANTGRADE.APPLGRADE_CREATEDBY) +
                                        " , @APPLGRADE_CREATEDDATE ='" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_CREADTEDATE.ToString("MM/dd/yyyy") +
                                        "', @APPLGRADE_LASTMDFBY =" + Convert.ToString(_obj_SMHR_APPLICANTGRADE.APPLGRADE_LASTMDFBY) +
                                        " , @APPLGRADE_LASTMDFDATE ='" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_APPLICANTGRADE @MODE = '3', @APPLGRADE_ID ='" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_ID +
                                        "', @APPGRADE_SETID = '" + _obj_SMHR_APPLICANTGRADE.APPGRADE_SETID +
                                        "', @APPGRADE_NAME = '" + _obj_SMHR_APPLICANTGRADE.APPGRADE_NAME +
                                        "', @APPLGRADE_DESCRIPTION = '" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_DESCRIPTION +
                                        "', @APPLGRADE_ORGANISATION_ID = '" + _obj_SMHR_APPLICANTGRADE.ORGANISATION_ID +
                                        "', @APPLGRADE_LASTMDFBY =" + Convert.ToString(_obj_SMHR_APPLICANTGRADE.APPLGRADE_LASTMDFBY) +
                                        " , @APPLGRADE_LASTMDFDATE ='" + _obj_SMHR_APPLICANTGRADE.APPLGRADE_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_INTERVIEWASSESSMENTFORM

        public static DataTable get_InterviewAssessment(SMHR_INTERVIEWASSESSMENTFORM _obj_SMHR_INTERVIEWASSESSMENTFORM)
        {
            DataTable Dt = new DataTable();

            if (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE == 3)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.MODE + "'");
            }
            else if (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE == 4)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.MODE + "', @IAF_APPLID = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + "'");
            }
            else if (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE == 5)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.MODE + "'");
            }
            else if (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE == 6)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.MODE + "',@IAF_APPLID = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + "'");
            }
            else if (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE == 7)
            {
                Dt = ExecuteQuery("EXEC USP_SMHR_INTERVIEWASSESSMENTFORM @MODE = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.MODE + "',@IAF_APPLID = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.IAF_APPLID + "',@IAF_JOBREID = '" + _obj_SMHR_INTERVIEWASSESSMENTFORM.IAF_JOBREID + "'");
            }
            return Dt;
        }

        public static bool set_InterviewAssessment(SMHR_INTERVIEWASSESSMENTFORM _obj_SMHR_INTERVIEWASSESSMENTFORM, string Str)
        {
            bool status = false;
            switch (_obj_SMHR_INTERVIEWASSESSMENTFORM.MODE)
            {
                case 1:

                    if (ExecuteNonQuery(Str))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery(Str))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_INTERVIEWPHASEREMARKS

        public static bool set_InterviewPhaseRemarks(SMHR_INTERVIEW_PHASE_REMARKS _obj_SMHR_INTERVIEWPHASEREMARKS)
        {
            bool status = false;

            switch (_obj_SMHR_INTERVIEWPHASEREMARKS.MODE)
            {
                case 1:

                    if (ExecuteNonQuery("EXEC USP_SMHR_INTERVIEW_PHASE_REMARKS @MODE = '1', @INTREM_JOBREQID = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_JOBREQID +
                                        "', @INTREM_PHASEID = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_PHASEID +
                                        "', @INTREM_APPLICANTID = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_APPLICANTID +
                                        "', @INTREM_OFFEREDSALARY  ='" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_OFFEREDSALARY +
                                        "' , @INTREM_OVERALLASSESSMENT = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_OVERALLASSESSMENT +
                                        "', @INTREM_JOININGDATE= '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_JOININGDATE +
                                        "', @INTREM_LEVEL =" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_LEVEL +
                                        ", @INTREM_DESIGNATIONOFFERED = " + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_DESIGNATIONOFFERED +
                                        ", @INTREM_DEPARTMENT = " + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_DEPARTMENT +
                                        ", @INTREM_DIVISION = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_DIVISION +
                                        "', @INTREM_ORGANISATION_ID = '" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_ORGANISATION_ID +
                                        "', @INTREM_BUSINESSUNIT_ID = " + _obj_SMHR_INTERVIEWPHASEREMARKS.BUID +
                                        ", @INTREM_CREATEDBY = " + Convert.ToString(_obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_CREATEDBY) +
                                        " , @INTREM_CREATEDDATE ='" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @INTREM_LASTMDFBY =" + Convert.ToString(_obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_LASTMDFBY) +
                                        " , @INTREM_LASTMDFDATE ='" + _obj_SMHR_INTERVIEWPHASEREMARKS.INTREM_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_JOBOFFERS

        public static DataTable get_joboffers(SMHR_JOBOFFERS _obj_Smhr_joboffers)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_joboffers.JOBOFFRS_ID.ToString() == "0")
            {
                dt = ExecuteQuery("EXEC [USP_SMHR_JOBOFFERS]  @operation = 'select'");
            }
            //else if (_obj_Smhr_skillscategary.MODE == 6)
            //{
            //    dt = ExecuteQuery("EXEC [USP_SMHRSKILLCATEGORY]  @SKILLCAT_SKILLID = " + _obj_Smhr_skillscategary.SKILLCAT_SKILLID +
            //                            " , @MODE = '" + _obj_Smhr_skillscategary.MODE + "'");
            //}
            else
            {
                dt = ExecuteQuery("EXEC USP_SMHR_JOBOFFERS @operation = 'Select', @JOBOFFRS_ID = " + _obj_Smhr_joboffers.JOBOFFRS_ID + "");
            }
            return dt;
        }

        public static DataTable GetApplicantDetails(SMHR_JOBOFFERS _obj_Smhr_joboffers)
        {
            DataTable dt = new DataTable();

            if (_obj_Smhr_joboffers.JOBOFFRS_ID.ToString() == "0")
            {
                dt = ExecuteQuery("EXEC USP_SMHR_GetApplicantDetails @operation = 'Select', @APPLICANT_ID = " + _obj_Smhr_joboffers.APPLICANT_ID + "");
            }
            return dt;
        }

        public static bool set_joboffers(SMHR_JOBOFFERS _obj_Smhr_joboffers)
        {
            bool status = false;
            switch (_obj_Smhr_joboffers.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC [USP_SMHR_JOBOFFERS] @operation='insert', @JOBOFFRS_REQCODE = '" + _obj_Smhr_joboffers.JOBOFFRS_REQCODE + "'" +
                                        ", @JOBOFFRS_APPLICANT_ID = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_APPLICANT_ID) + "'" +
                                        ", @JOBOFFRS_SALSTRUCT = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_SALSTRUCT) + "'" +
                                        ", @JOBOFFRS_OFFERSAL = '" + Convert.ToDecimal(_obj_Smhr_joboffers.JOBOFFRS_OFFERSAL) + "'" +
                                        ", @JOBOFFRS_LEAVESTRUCT= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LEAVESTRUCT) + "" +
                                        " , @JOBOFFRS_OFFERDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_OFFERDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @JOBOFFRS_JOINDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_JOINDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @JOBOFFRS_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_CREATEDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @JOBOFFRS_CREATEDBY= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_CREATEDBY) + "" +
                                        " , @JOBOFFRS_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @JOBOFFRS_LASTMDFBY= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFBY) + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC [USP_SMHR_JOBOFFERS] @operation='update', @JOBOFFRS_ID  = '" + _obj_Smhr_joboffers.JOBOFFRS_ID + "'" +
                                        ",@JOBOFFRS_REQCODE = '" + _obj_Smhr_joboffers.JOBOFFRS_REQCODE + "'" +
                                        ", @JOBOFFRS_APPLICANT_ID = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_APPLICANT_ID) + "'" +
                                        ", @JOBOFFRS_SALSTRUCT = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_SALSTRUCT) + "'" +
                                        ", @JOBOFFRS_OFFERSAL = '" + Convert.ToDecimal(_obj_Smhr_joboffers.JOBOFFRS_OFFERSAL) + "'" +
                                        ", @JOBOFFRS_LEAVESTRUCT= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LEAVESTRUCT) + "" +
                                        " , @JOBOFFRS_OFFERDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_OFFERDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @JOBOFFRS_JOINDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_JOINDATE).ToString("MM/dd/yyyy") + "'" +
                                        " , @JOBOFFRS_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ", @JOBOFFRS_LASTMDFBY= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFBY) + ""))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        //public static bool set_joboffers(SMHR_JOBOFFERS _obj_Smhr_joboffers)
        //{
        //    if (_obj_Smhr_joboffers.OPERATION == operation.Insert)
        //    {
        //        return ExecuteNonQuery(" EXEC [USP_SMHR_JOBOFFERS] @operation='insert', @JOBOFFRS_REQCODE = '" + _obj_Smhr_joboffers.JOBOFFRS_REQCODE + "'" +
        //                                ", @JOBOFFRS_APPLICANT_ID = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_APPLICANT_ID) + "'" +
        //                                ", @JOBOFFRS_SALSTRUCT = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_SALSTRUCT) + "'" +
        //                                 ", @JOBOFFRS_OFFERSAL = '" + Convert.ToDecimal(_obj_Smhr_joboffers.JOBOFFRS_OFFERSAL) + "'" +
        //                               ", @JOBOFFRS_LEAVESTRUCT= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LEAVESTRUCT) + "" +
        //                               " , @JOBOFFRS_OFFERDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_OFFERDATE).ToString("MM/dd/yyyy") + "'" +
        //                                " , @JOBOFFRS_JOINDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_JOINDATE).ToString("MM/dd/yyyy") + "'" +
        //                                 " , @JOBOFFRS_CREATEDDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_CREATEDATE).ToString("MM/dd/yyyy") + "'" +
        //                                 ", @JOBOFFRS_CREATEDBY= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_CREATEDBY) + "");
        //        //", @SKILLCAT_LASTMDFBY =" + Convert.ToString(_obj_Smhr_skillscategary.LASTMDFBY) + "" +
        //        // " , @SKILLCAT_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_skillscategary.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +

        //    }
        //    else
        //    {
        //        return ExecuteNonQuery("EXEC [USP_SMHR_JOBOFFERS] @operation='update', @JOBOFFRS_ID  = '" + _obj_Smhr_joboffers.JOBOFFRS_ID + "'" +
        //                                 ",@JOBOFFRS_REQCODE = '" + _obj_Smhr_joboffers.JOBOFFRS_REQCODE + "'" +
        //                                ", @JOBOFFRS_APPLICANT_ID = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_APPLICANT_ID) + "'" +
        //                                ", @JOBOFFRS_SALSTRUCT = '" + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_SALSTRUCT) + "'" +
        //                                 ", @JOBOFFRS_OFFERSAL = '" + Convert.ToDecimal(_obj_Smhr_joboffers.JOBOFFRS_OFFERSAL) + "'" +
        //                               ", @JOBOFFRS_LEAVESTRUCT= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LEAVESTRUCT) + "" +
        //                               " , @JOBOFFRS_OFFERDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_OFFERDATE).ToString("MM/dd/yyyy") + "'" +
        //                                " , @JOBOFFRS_JOINDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_JOINDATE).ToString("MM/dd/yyyy") + "'" +
        //                                 " , @JOBOFFRS_LASTMDFDATE='" + Convert.ToDateTime(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
        //                                 ", @JOBOFFRS_LASTMDFBY= " + Convert.ToInt32(_obj_Smhr_joboffers.JOBOFFRS_LASTMDFBY) + "");
        //    }
        //    //else
        //    //{
        //    //    return ExecuteNonQuery(" EXEC [USP_SMHRSKILLCATEGORY]  @MODE = '5',  @SKILLCAT_ID  = '" + _obj_Smhr_skillscategary.SKILLCAT_ID + "'" +
        //    //                            " ");
        //    //}(_obj_Smhr_joboffers.OPERATION ==operation.Update)
        //}

        #endregion

        #region SMHR_APPROVALPROCESS Methods

        public static DataTable get_EmpSetup(SMHR_APPROVALPROCESS _obj_smhr_ApprovalProcess)
        {
            DataTable dt = new DataTable();
            switch (_obj_smhr_ApprovalProcess.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_APPROVALPROCESS @MODE = 1");
                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_APPROVALPROCESS @MODE = 2,@APPRO_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_ID) +
                                      " ");
                    break;
                case 5:
                    dt = ExecuteQuery("EXEC USP_SMHR_APPROVALPROCESS @MODE = 5 ,@APPRO_BU_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_BU_ID) +
                                      " ,@APPRO_EMP_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_EMP_ID) + " ");
                    // ,@APPRO_APPROVER1_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER1_ID) +
                    //" ,@APPRO_APPROVER2_ID = " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER2_ID) + " ,@APPRO_ISAPPROVER2= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_ISAPPROVER2) + " ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        public static DataTable get_JRApp(SMHR_APPROVALPROCESS _obj_smhr_ApprovalProcess)
        {
            return ExecuteQuery("EXEC USP_SMHR_APPROVALPROCESS @Operation = 'check', @APPRO_APPROVER1_ID = '" + _obj_smhr_ApprovalProcess.APPRO_APPROVER1_ID + "'");
        }

        public static bool set_EmpSetup(SMHR_APPROVALPROCESS _obj_smhr_ApprovalProcess)
        {
            bool status = false;
            switch (_obj_smhr_ApprovalProcess.Mode)
            {
                case 3:
                    if (ExecuteNonQuery("EXEC USP_SMHR_APPROVALPROCESS @MODE = 3 , @APPRO_BU_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_BU_ID) +
                                        " ,@APPRO_EMP_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_EMP_ID) +
                                        " , @APPRO_APPROVER1_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER1_ID) +
                                        " ,@APPRO_APPROVER2_ID = '" + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER2_ID) + "'" +
                                        " , @APPRO_ISAPPROVER2='" + _obj_smhr_ApprovalProcess.APPRO_ISAPPROVER2 + "'" +
                                        " ,  @APPRO_CREATEDBY = " + Convert.ToInt32(_obj_smhr_ApprovalProcess.APPRO_CREATEDBY) +
                                        " , @APPRO_ORGANISATION_ID = " + Convert.ToInt32(_obj_smhr_ApprovalProcess.ORGANISATION_ID) +
                                        ", @APPRO_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_ApprovalProcess.APPRO_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 20:
                    if (ExecuteNonQuery("EXEC USP_SMHR_APPROVALPROCESS @MODE = 20 ,@APPRO_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_ID) +
                                        ", @APPRO_BU_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_BU_ID) +
                                        " ,@APPRO_EMP_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_EMP_ID) +
                                        " , @APPRO_APPROVER1_ID= " + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER1_ID) +
                                        " ,@APPRO_APPROVER2_ID = '" + Convert.ToString(_obj_smhr_ApprovalProcess.APPRO_APPROVER2_ID) + "'" +
                                        " , @APPRO_ISAPPROVER2='" + _obj_smhr_ApprovalProcess.APPRO_ISAPPROVER2 + "'" +
                                        " ,  @APPRO_LASTMDFBY = " + Convert.ToInt32(_obj_smhr_ApprovalProcess.@APPRO_LASTMDFBY) +
                                        ", @APPRO_LASTMDFDATE = '" + Convert.ToDateTime(_obj_smhr_ApprovalProcess.APPRO_LASTMDFDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_GETEMPLOYEE Methods

        public static DataTable get_Employee(SMHR_GETEMPLOYEE _obj_smhr_GetEmployee)
        {
            DataTable dt = new DataTable();
            switch (_obj_smhr_GetEmployee.Mode)
            {
                case 1:
                    dt = ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEE @MODE = 1 ,@APPRO_BU_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_BU_ID) +
                                      "   ");

                    break;
                case 3:
                    dt = ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEE @MODE = 3 ,@APPRO_BU_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_BU_ID) +
                                      " ,@APPRO_EMP_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_EMP_ID) + " ,@APPRO_APPROVER1_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_APPROVER1_ID) +
                                      "  ");

                    break;
                case 2:
                    dt = ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEE @MODE = 2 ,@APPRO_BU_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_BU_ID) +
                                      " ,@APPRO_EMP_ID= " + Convert.ToString(_obj_smhr_GetEmployee.APPRO_EMP_ID) + "   ");

                    break;
                default:
                    break;
            }
            return dt;
        }

        #endregion

        #region COURSE MASTER

        public static bool set_Coursemaster(SMHR_COURSEMASTER _obj_trainee)
        {
            try
            {
                bool status = false;

                if (BLL.ExecuteNonQuery("EXEC USP_Smhr_Trainee @Operation = 'INSERT',@ORGANISATION_ID=" + _obj_trainee.ORGANISATION_ID +
                                        ",@HR_MASTER_ISDELETED='" + _obj_trainee.HR_MASTER_ISDELETED + "',@HR_MASTER_TYPE='" + _obj_trainee.COURSE + "',@HR_MASTER_CODE='" + _obj_trainee.CODE +
                                        "',@HR_CODE_DESC='" + _obj_trainee.CODE +
                                        "',@TRAINEE_CREATEDBY= '" + _obj_trainee.CREATEDBY +
                                        "',@TRAINEE_LASTMDFBY='" + _obj_trainee.LASTMDFBY + "'"))
                    status = true;
                else
                    status = false;

                return status;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable get_coursemaster(SMHR_COURSEMASTER _obj_trainee)
        {
            if (_obj_trainee.OPERATION == operation.Check)
                return ExecuteQuery("EXEC USP_Smhr_Trainee @Operation = 'CHECK',@ORGANISATION_ID='" + _obj_trainee.ORGANISATION_ID + "',@HR_MASTER_CODE='" + _obj_trainee.CODE + "',@HR_MASTER_TYPE='" + _obj_trainee.COURSE + "'");
            else
                return ExecuteQuery("EXEC USP_Smhr_Trainee @Operation = 'SELECT',@ORGANISATION_ID='" + _obj_trainee.ORGANISATION_ID + "'");
        }

        #endregion

        #region SMHR_EMP_TDS

        public static DataTable get_EMP_TDS(SMHR_EMP_TDS _obj_smhr_EMP_TDS)
        {
            if (_obj_smhr_EMP_TDS.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_TDS @Operation='Select',@EMP_TDS_ORGID='" + _obj_smhr_EMP_TDS.TDS_ORGID + "'");
            }
            else if (_obj_smhr_EMP_TDS.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_TDS @Operation='Validate',@EMP_TDS_ID='" + Convert.ToString(_obj_smhr_EMP_TDS.EMP_TDS_ID) + "'");
            }
            else if (_obj_smhr_EMP_TDS.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_TDS @Operation='Check',@EMP_TDS_BUID='" + Convert.ToInt32(_obj_smhr_EMP_TDS.TDS_BUID) +
                                    "',@EMP_TDS_EMPID='" + _obj_smhr_EMP_TDS.TDS_EMPID +
                                    "',@EMP_TDS_PERIOD_ID='" + _obj_smhr_EMP_TDS.TDS_PERIOD + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_TDS @Operation='Select'");
            }
        }

        public static DataTable get_EMP_TDS_DETAILS(SMHR_EMP_TDS _obj_smhr_EMP_TDS)
        {
            if (_obj_smhr_EMP_TDS.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS_WISE_EMPLOYEE @MODE = '" + _obj_smhr_EMP_TDS.MODE + "', " +
                                    " @BUID = '" + _obj_smhr_EMP_TDS.TDS_BUID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_TDS_WISE_EMPLOYEE @MODE = '" + _obj_smhr_EMP_TDS.MODE + "', " +
                                    " @EMP_TDS_BUID = '" + _obj_smhr_EMP_TDS.TDS_BUID + "'," +
                                    " @EMP_TDS_PERIOD_ID = '" + _obj_smhr_EMP_TDS.TDS_PERIOD + "'");
            }
        }

        public static bool set_EMP_TDS1(SMHR_EMP_TDS _obj_smhr_EMP_TDS)
        {
            if (_obj_smhr_EMP_TDS.MODE == 3)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_TDS_WISE_EMPLOYEE @Mode='" + _obj_smhr_EMP_TDS.MODE + "',@EMP_TDS_BUID='" + _obj_smhr_EMP_TDS.TDS_BUID +
                                       "',@EMP_TDS_EMPID='" + _obj_smhr_EMP_TDS.TDS_EMPID +
                                       "',@EMP_TDS_PREV_GROSS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_GROSS_AMOUNT +
                                       "',@EMP_TDS_PREV_TDS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_TDS_AMOUNT +
                                       "',@EMP_TDS_ORGID='" + _obj_smhr_EMP_TDS.TDS_ORGID +
                                       "',@EMP_TDS_PERIOD_ID='" + _obj_smhr_EMP_TDS.TDS_PERIOD +
                                       "',@EMP_TDS_CHECKED='" + _obj_smhr_EMP_TDS.TDS_CHECKED + "'");
            }
            else
            {
                return ExecuteNonQuery("EXEC USP_SMHR_TDS_WISE_EMPLOYEE @Mode='" + _obj_smhr_EMP_TDS.MODE + "',@EMP_TDS_BUID='" + _obj_smhr_EMP_TDS.TDS_BUID + "',@EMP_TDS_PERIOD_ID='" + _obj_smhr_EMP_TDS.TDS_PERIOD + "'");
            }
        }

        public static bool set_EMP_TDS(SMHR_EMP_TDS _obj_smhr_EMP_TDS)
        {
            bool status = false;
            switch (_obj_smhr_EMP_TDS.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_TDS @Operation='Insert',@EMP_TDS_BUID='" + _obj_smhr_EMP_TDS.TDS_BUID +
                                        "',@EMP_TDS_EMPID='" + _obj_smhr_EMP_TDS.TDS_EMPID +
                                        "',@EMP_TDS_PREV_GROSS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_GROSS_AMOUNT +
                                        "',@EMP_TDS_PREV_TDS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_TDS_AMOUNT +
                                        "',@EMP_TDS_ORGID='" + _obj_smhr_EMP_TDS.TDS_ORGID +
                                        "',@EMP_TDS_PERIOD_ID='" + _obj_smhr_EMP_TDS.TDS_PERIOD + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_TDS @Operation='Update',@EMP_TDS_BUID='" + _obj_smhr_EMP_TDS.TDS_BUID +
                                        "',@EMP_TDS_EMPID='" + _obj_smhr_EMP_TDS.TDS_EMPID +
                                        "',@EMP_TDS_PREV_GROSS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_GROSS_AMOUNT +
                                        "',@EMP_TDS_PREV_TDS_AMOUNT='" + _obj_smhr_EMP_TDS.PREV_TDS_AMOUNT +
                                        "',@EMP_TDS_ORGID='" + _obj_smhr_EMP_TDS.TDS_ORGID +
                                        "',@EMP_TDS_PERIOD_ID='" + _obj_smhr_EMP_TDS.TDS_PERIOD +
                                        "',@EMP_TDS_ID='" + _obj_smhr_EMP_TDS.EMP_TDS_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Import Applicant Validation

        public static DataTable get_Applicant_Validate(SMHR_MASTERS _Obj_smhr_Masters)
        {
            if (_Obj_smhr_Masters.OPERATION == operation.Check)
            {
                return ExecuteQuery(" EXEC USP_SMHR_IMPORT_APPLICANT @Operation = 'check',@HR_MASTER_CODE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_CODE) +
                                    "', @HR_MASTER_TYPE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_TYPE) +
                                    "', @HR_MASTER_ORGANISATION_ID = '" + _Obj_smhr_Masters.ORGANISATION_ID + "'");
            }
            else if (_Obj_smhr_Masters.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_IMPORT_APPLICANT @Operation = 'Select',@HR_MASTER_CODE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_CODE) +
                                    "', @HR_MASTER_TYPE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_TYPE) +
                                    "', @HR_MASTER_ORGANISATION_ID = '" + _Obj_smhr_Masters.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery(" EXEC USP_SMHR_IMPORT_APPLICANT @Operation = 'check', @HR_MASTER_CODE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_CODE) +
                                    "', @HR_MASTER_TYPE = '" + Convert.ToString(_Obj_smhr_Masters.MASTER_TYPE) +
                                    "', @HR_MASTER_ORGANISATION_ID = '" + _Obj_smhr_Masters.ORGANISATION_ID + "'");
            }
        }

        public static bool set_ApplSkills(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTSKILLS @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPSKL_APPLICANT_ID = '" + _obj_smhr_applicant.APPSKL_APPLICANT_ID + "'" +
                                        ",@APPSKL_SKILL_ID = '" + _obj_smhr_applicant.APPSKL_SKILL_ID + "'" +
                                        ",@APPSKL_LASTUSED = '" + _obj_smhr_applicant.APPSKL_LASTUSED + "'" +
                                        ",@APPSKL_EXPERT = '" + _obj_smhr_applicant.APPSKL_EXPERT + "'" +
                                        ",@APPSKL_CREATEDBY = '" + _obj_smhr_applicant.APPSKL_CREATEDBY + "'" +
                                        ",@APPSKL_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPSKL_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_ApplLanguage(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTLANGUAGE @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPLAN_APPLICANT_ID = '" + _obj_smhr_applicant.APPLAN_APPLICANT_ID + "'" +
                                        ",@APPLAN_LANGUAGE_ID = '" + _obj_smhr_applicant.APPLAN_LANGUAGE_ID + "'" +
                                        ",@APPLAN_READ = '" + _obj_smhr_applicant.APPLAN_READ + "'" +
                                        ",@APPLAN_WRITE = '" + _obj_smhr_applicant.APPLAN_WRITE + "'" +
                                        ",@APPLAN_SPEAK = '" + _obj_smhr_applicant.APPLAN_SPEAK + "'" +
                                        ",@APPLAN_UNDERSTAND = '" + _obj_smhr_applicant.APPLAN_UNDERSTAND + "'" +
                                        ",@APPLAN_CREATEDBY = '" + _obj_smhr_applicant.APPLAN_CREATEDBY + "'" +
                                        ",@APPLAN_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPLAN_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_ApplContact(SMHR_APPLICANT _obj_smhr_applicant)
        {
            bool status = false;
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery(" EXEC USP_SMHR_APPLICANTCONTACT @Operation = '" + _obj_smhr_applicant.OPERATION + "'" +
                                        ",@APPCONT_SERIAL = '" + _obj_smhr_applicant.APPCONT_SERIAL + "'" +
                                        ",@APPCONT_APPLICANT_ID = '" + _obj_smhr_applicant.APPCONT_APPLICANT_ID + "'" +
                                        ",@APPCONT_COMPANY = '" + _obj_smhr_applicant.APPCONT_COMPANY + "'" +
                                        ",@APPCONT_CONTACT = '" + _obj_smhr_applicant.APPCONT_CONTACT + "'" +
                                        ",@APPCONT_PHONE = '" + _obj_smhr_applicant.APPCONT_PHONE + "'" +
                                        ",@APPCONT_ADDRESS = '" + _obj_smhr_applicant.APPCONT_ADDRESS + "'" +
                                        ",@APPCONT_CREATEDBY = '" + _obj_smhr_applicant.APPCONT_CREATEDBY + "'" +
                                        ",@APPCONT_CREATEDDATE = '" + Convert.ToDateTime(_obj_smhr_applicant.APPCONT_CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable CONVERTTODATE(SMHR_APPLICANT _obj_smhr_applicant)//TO CONVERT STRING TO DATE FORMAT ..RAJASEKHAR
        {
            DataTable dt = new DataTable();
            switch (_obj_smhr_applicant.OPERATION)
            {
                case operation.Check_New:
                    dt = ExecuteQuery("EXEC USP_SMHR_APPLICANT @Operation ='Check_New' , @APPLI_DOB = '" + _obj_smhr_applicant.APPLI_DOB + "'" +
                                      "  ");
                    break;
                default:
                    break;
            }
            return dt;
        }

        public static bool CheckDateFormat(string strin)
        {
            try
            {
                if (strin.Length > 10)
                {
                    return false;
                }
                char[] c = null;
                string strFinal = string.Empty;
                bool date = strin.Contains(".");
                Array ar;
                if (date)
                {
                    ar = strin.Split(new char[] { '.' });
                }
                else
                {
                    ar = strin.Split(new char[] { '/' });
                }
                string yeararray = Convert.ToString(ar.GetValue(2));
                if (yeararray.Length > 4)
                {
                    return false;
                }
                for (int i = 0; i < ar.Length; i++)
                {
                    if (ar.GetValue(i).ToString().Length == 1)
                    {
                        strFinal = strFinal + "0" + ar.GetValue(i) + "/";
                    }
                    else if (ar.GetValue(i).ToString().Length == 2)
                    {
                        strFinal = strFinal + ar.GetValue(i) + "/";
                    }
                    else
                    {
                        if (strFinal.Length == 6)
                            strFinal = strFinal + ar.GetValue(i).ToString();
                        else
                            strFinal = strFinal + "/" + ar.GetValue(i).ToString();
                    }
                }
                c = strFinal.ToCharArray();
                if ((c[2] != '/') || c[5] != '/')
                {
                    return false;
                }

                if (Convert.ToInt32(strFinal.Substring(0, 2).Trim()) > 31)
                {
                    return false;
                }
                if (Convert.ToInt32(strFinal.Substring(3, 2).Trim()) > 12)
                {
                    return false;
                }

                if (Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 2)
                {
                    if (Convert.ToInt32(strFinal.Substring(6, 4).Trim()) / 4 == 0)
                    { // check leap year
                        if (Convert.ToInt32(strFinal.Substring(0, 2).Trim()) > 29)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if (Convert.ToInt32(strFinal.Substring(0, 2).Trim()) > 28)
                        {
                            return false;
                        }
                    }
                }
                if (Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 1 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 3 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 5 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 7 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 8 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 10 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 12)
                {
                    if (Convert.ToInt32(strFinal.Substring(0, 2).Trim()) > 31)
                    {
                        return false;
                    }
                }
                if (Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 4 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 6 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 9 || Convert.ToInt32(strFinal.Substring(3, 2).Trim()) == 11)
                {
                    if (Convert.ToInt32(strFinal.Substring(0, 2).Trim()) > 30)
                    {
                        return false;
                    }
                }

                return true;
            }
            catch (Exception Ex)
            {
                throw Ex;
            }
        }

        #endregion

        #region SMHR_KENYA_PAYITEM

        public static DataTable get_Kenya_PayItem(SMHR_KENYA_PAYITEM _obj_smhr_Kenya_PayItem)
        {
            if (_obj_smhr_Kenya_PayItem.OPERATION == operation.Select)
            {
                return (ExecuteQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='SELECT',@KENYA_PAYITEM_ORGANISATION_ID='" + _obj_smhr_Kenya_PayItem.ORGANISATION_ID + "'"));
            }
            else if (_obj_smhr_Kenya_PayItem.OPERATION == operation.Check)
            {
                return (ExecuteQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='CHECK',@KENYA_PAYITEM_ORGANISATION_ID='" + _obj_smhr_Kenya_PayItem.ORGANISATION_ID + "'"));
            }
            else if (_obj_smhr_Kenya_PayItem.OPERATION == operation.Check1)
            {
                return (ExecuteQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='CHECK1',@KENYA_PAYITEM_ORGANISATION_ID='" + _obj_smhr_Kenya_PayItem.ORGANISATION_ID + "'"));
            }
            else if (_obj_smhr_Kenya_PayItem.OPERATION == operation.Validate1)
            {
                return (ExecuteQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='VALIDATE1',@KENYA_PAYITEM_BUSINESSUNIT_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_BUSINESSUNIT_ID + "',@KENYA_PAYITEM_PAYITEM_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PAYITEM_ID + "',@KENYA_PAYITEM_PERIOD_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PERIOD_ID + "'"));
            }
            else
            {
                return (ExecuteQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='VALIDATE',@KENYA_PAYITEM_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_ID + "'"));
            }
        }

        public static bool set_Kenya_PayItem(SMHR_KENYA_PAYITEM _obj_smhr_Kenya_PayItem)
        {
            bool status = false;
            switch (_obj_smhr_Kenya_PayItem.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='INSERT',@KENYA_PAYITEM_PAYITEM_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PAYITEM_ID + "'" +
                                        ",@KENYA_PAYITEM_ORGANISATION_ID='" + _obj_smhr_Kenya_PayItem.ORGANISATION_ID + "'" +
                                        ",@KENYA_PAYITEM_BUSINESSUNIT_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_BUSINESSUNIT_ID + "'" +
                                        ",@KENYA_PAYITEM_STATUS='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_STATUS + "'" +
                                        ",@KENYA_PAYITEM_PERIOD_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PERIOD_ID + "'" +
                                        ",@KENYA_PAYITEM_CREATEDBY='" + _obj_smhr_Kenya_PayItem.CREATEDBY + "'" +
                                        ",@KENYA_PAYITEM_CREATEDDATE='" + Convert.ToDateTime(_obj_smhr_Kenya_PayItem.CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_KENYAPAYITEM @OPERATION='UPDATE',@KENYA_PAYITEM_ORGANISATION_ID='" + _obj_smhr_Kenya_PayItem.ORGANISATION_ID + "'" +
                                        ",@KENYA_PAYITEM_BUSINESSUNIT_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_BUSINESSUNIT_ID + "'" +
                                        ",@KENYA_PAYITEM_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_ID + "'" +
                                        ",@KENYA_PAYITEM_STATUS='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_STATUS + "'" +
                                        ",@KENYA_PAYITEM_PERIOD_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PERIOD_ID + "'" +
                                        ",@KENYA_PAYITEM_MODIFIEDBY='" + _obj_smhr_Kenya_PayItem.LASTMDFBY + "'" +
                                        ",@KENYA_PAYITEM_MODIFIEDDATE='" + Convert.ToDateTime(_obj_smhr_Kenya_PayItem.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@KENYA_PAYITEM_PAYITEM_ID='" + _obj_smhr_Kenya_PayItem.KENYA_PAYITEM_PAYITEM_ID + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        #region HR Creation

        /// <summary>
        /// This Region will handle all the operation related to hr creation in pms
        /// </summary>
        /// <param name="_obj_hrcreation"></param>
        /// <returns></returns>
        public static DataTable get_Hrinformation(PMS_HRCREATION _obj_hrcreation)
        {
            DataTable dt = new DataTable();
            if (_obj_hrcreation.OPERATION == operation.Check)
            {
                dt = ExecuteQuery("EXEC USP_PMS_HRCREATION @OPERATION='CHECK',@HR_MAIL_ID='" + _obj_hrcreation.HR_EMAIL_ID + "'");
            }
            else if ((_obj_hrcreation.OPERATION.ToString()).ToUpper() == "SELECT")
                return ExecuteQuery("EXEC USP_PMS_HRCREATION @OPERATION='SELECT',@ORGANISATION_ID='" + _obj_hrcreation.ORGANISATION_ID + "'");
            else
                return ExecuteQuery("EXEC USP_PMS_HRCREATION @OPERATION='CHECK1',@HRCREATION_ID='" + _obj_hrcreation.HR_CREATION_ID + "'");
            return dt;
        }


        public static bool set_Hrcreation(PMS_HRCREATION _obj_hrcreation)
        {
            if (_obj_hrcreation.OPERATION == operation.Insert)
                return ExecuteNonQuery("EXEC USP_PMS_HRCREATION @OPERATION='INSERT',@ORGANISATION_ID='" + _obj_hrcreation.ORGANISATION_ID + "',@BUSINESSUNIT_ID='" + _obj_hrcreation.BUSINESSUNIT_ID + "',@HR_MAIL_ID='" + _obj_hrcreation.HR_EMAIL_ID +
                    "',@PMS_HRCREATION_CREATEDBY=" + _obj_hrcreation.HR_CREATION_CREATEDBY + ",@PMS_HRCREATION_CREATEDDATE='" + _obj_hrcreation.HR_CREATION_CREATEDDATE +
                    "',@PMS_HRCREATION_LSTMDFBY=" + _obj_hrcreation.HR_CREATION_LSTMDFBY + ",@PMS_HRCREATION_LSTMDFDATE='" + _obj_hrcreation.HR_CREATION_LSTMDFDATE + "'");
            else
                return ExecuteNonQuery("EXEC USP_PMS_HRCREATION @OPERATION='UPDATE',@BUSINESSUNIT_ID='" + _obj_hrcreation.BUSINESSUNIT_ID + "',@HR_MAIL_ID='" + _obj_hrcreation.HR_EMAIL_ID + "',@HRCREATION_ID='" + _obj_hrcreation.HR_CREATION_ID +
                     "',@PMS_HRCREATION_CREATEDBY=" + _obj_hrcreation.HR_CREATION_CREATEDBY + ",@PMS_HRCREATION_CREATEDDATE='" + _obj_hrcreation.HR_CREATION_CREATEDDATE +
                    "',@PMS_HRCREATION_LSTMDFBY=" + _obj_hrcreation.HR_CREATION_LSTMDFBY + ",@PMS_HRCREATION_LSTMDFDATE='" + _obj_hrcreation.HR_CREATION_LSTMDFDATE + "'");

        }



        #endregion

        #region SMHR_DIVISION

        /// <summary>
        ///  Method to Get Country Based on the COUNTRY_ID
        /// </summary>
        /// <param name="COUNTRY_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_Division(SMHR_DIVISION _obj_Smhr_Division)
        {
            if (_obj_Smhr_Division.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Division.DIVISION_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DIVISION @Operation = 'select',@SMHR_DIV_ORG_ID = '" + _obj_Smhr_Division.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DIVISION @Operation = 'select', @SMHR_DIV_ID =" + Convert.ToString(_obj_Smhr_Division.DIVISION_ID) + ",@SMHR_DIV_ORG_ID = '" + _obj_Smhr_Division.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Division.DIVISION_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DIVISION @Operation = 'Check',@SMHR_DIV_BU_ID='" + Convert.ToInt32(_obj_Smhr_Division.BUID) + "', @SMHR_DIV_CODE ='" + Convert.ToString(_obj_Smhr_Division.DIVISION_CODE) + "',@SMHR_DIV_ORG_ID = '" + _obj_Smhr_Division.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DIVISION @Operation = 'Check',@SMHR_DIV_BU_ID='" + Convert.ToInt32(_obj_Smhr_Division.BUID) + "', @SMHR_DIV_CODE ='" + Convert.ToString(_obj_Smhr_Division.DIVISION_CODE) + "', @SMHR_DIV_ID =" + Convert.ToString(_obj_Smhr_Division.DIVISION_ID) + ",@SMHR_DIV_ORG_ID = '" + _obj_Smhr_Division.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_DivisionMapping()
        {
            DataTable dt = new DataTable();
            dt = ExecuteQuery("EXEC USP_SMHR_DIVISION @Operation = 'D'");
            return dt;
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_COUNTRY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Country"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_Division(SMHR_DIVISION _obj_Smhr_Division)
        {
            bool status = false;
            switch (_obj_Smhr_Division.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIVISION @Operation = 'Insert', @SMHR_DIV_CODE='" + _obj_Smhr_Division.DIVISION_CODE +
                                        "', @SMHR_DIV_DESC='" + _obj_Smhr_Division.DIVISION_DESCRIPTION +
                                        "', @SMHR_DIV_BU_ID = '" + _obj_Smhr_Division.BUID +
                                        "', @SMHR_Department_ID = '" + _obj_Smhr_Division.DEPARTMENT_ID +
                                        "', @SMHR_DIV_ORG_ID='" + _obj_Smhr_Division.ORGANISATION_ID +
                                        "', @SMHR_DIVISION_CREATEDBY= " + Convert.ToString(_obj_Smhr_Division.CREATEDBY) +
                                        " , @SMHR_DIVISION_CREATEDDATE='" + _obj_Smhr_Division.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @SMHR_DIVISION_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Division.LASTMDFBY) +
                                        " , @SMHR_DIVISION_LASTMDFDATE='" + _obj_Smhr_Division.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIVISION @Operation = 'Update',@SMHR_DIV_ID=" + Convert.ToString(_obj_Smhr_Division.DIVISION_ID) +
                                        " , @SMHR_DIV_CODE='" + _obj_Smhr_Division.DIVISION_CODE +
                                        "', @SMHR_DIV_DESC='" + _obj_Smhr_Division.DIVISION_DESCRIPTION +
                                        "', @SMHR_DIV_BU_ID = '" + _obj_Smhr_Division.BUID +
                                        "', @SMHR_Department_ID = '" + _obj_Smhr_Division.DEPARTMENT_ID +
                                        "', @SMHR_DIV_ORG_ID='" + _obj_Smhr_Division.ORGANISATION_ID +
                                        "', @SMHR_DIVISION_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Division.LASTMDFBY) +
                                        " , @SMHR_DIVISION_LASTMDFDATE='" + _obj_Smhr_Division.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIVISION @Operation = 'Delete', @SMHR_DIV_ID=" + Convert.ToString(_obj_Smhr_Division.DIVISION_ID) +
                                        " , @SMHR_DIVISION_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Division.LASTMDFBY) +
                                        " , @SMHR_DIVISION_LASTMDFDATE='" + _obj_Smhr_Division.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_DivisionMapping(SMHR_DEPARTMENT_DIVISION_MAPPING _obj_Smhr_Division)
        {
            bool status = false;
            switch (_obj_Smhr_Division.OPERATION)
            {
                case operation.Approve:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DIVISION @Operation = 'Approve', @SMHR_ERPDIV_DEPMAPPING_DIV_ID='" + _obj_Smhr_Division.DIVISION_ID +
                                        "', @SMHR_ERPDIV_DEPMAPPING_ERPCODE='" + _obj_Smhr_Division.ERP_CODE +
                                        "', @SMHR_ERPDIV_DEPMAPPING_TYPE='" + _obj_Smhr_Division.Type +
                                        "', @SMHR_ERPDIV_DEPMAPPING_CREATEDBY= " + Convert.ToString(_obj_Smhr_Division.CREATEDBY) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_CREATEDDATE='" + _obj_Smhr_Division.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @SMHR_ERPDIV_DEPMAPPING_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Division.LASTMDFBY) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_LASTMDFDATE='" + _obj_Smhr_Division.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        #endregion

        public static DataTable GetLoanSetupData(SMHR_LOANSETUP _obj_SMHR_LOANSETUP)
        {
            return ExecuteQuery("EXEC USP_SMHR_LOANSETUP @OPERATION = 'GETDETAILS', @LOANSETUP_ORG_ID = " + _obj_SMHR_LOANSETUP.ORGANISATION_ID + ", @LOANSETUP_LOANTYPE_ID = "
                        + _obj_SMHR_LOANSETUP.LOANSETUP_LOANTYPE_ID + ", @LOANSETUP_LOANPROCESSTYPE = '" + _obj_SMHR_LOANSETUP.LOANSETUP_LOANPROCESSTYPE + "'");
        }

        public static DataTable get_TDSPAYMENTVOUCHER(SMHR_FORMSIXTN _obj_smhr_formsixtn)
        {
            if (_obj_smhr_formsixtn.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_FORMSXTN @Operation = 'select', @SMHR_ORGANISATION ='" + Convert.ToString(_obj_smhr_formsixtn.ORGANISATION_ID) + "'");
            }
            else if (_obj_smhr_formsixtn.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_FORMSXTN @OPERATION='selectnew',@SMHR_ID ='" + Convert.ToInt32(_obj_smhr_formsixtn.Id) + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_FORMSXTN @Operation = 'select', @SMHR_ORGANISATION ='" + Convert.ToString(_obj_smhr_formsixtn.ORGANISATION_ID) + "'");
            }
        }

        public static bool set_TDSPAYMENTVOUCHER(SMHR_FORMSIXTN _obj_smhr_formsixtn)
        {
            bool status = false;
            switch (_obj_smhr_formsixtn.OPERATION)
            {
                case operation.Insert:

                    if ((ExecuteNonQuery("EXEC USP_SMHR_FORMSXTN @Operation='Insert',@BUSINESSUNIT=" + Convert.ToInt32(_obj_smhr_formsixtn.BUID) +
                                         " , @SMHR_EMPLOYEE =" + Convert.ToInt32(_obj_smhr_formsixtn.EMPLOYEE) +
                                         " , @SMHR_PERIOD =" + Convert.ToInt32(_obj_smhr_formsixtn.PERIOD) +
                                         " , @SMHR_AMOUNT =" + Convert.ToString(_obj_smhr_formsixtn.AMOUNT) +
                                         ", @SMHR_PAYMENTDATE = '" + Convert.ToDateTime(_obj_smhr_formsixtn.PAYMENT_DATE).ToString("MM/dd/yyyy") + "'" +
                                         " , @SMHR_CHALLANNUMBER =" + Convert.ToString(_obj_smhr_formsixtn.CHALLAN_NUMBER) +
                                         " , @SMHR_BANK =" + Convert.ToInt32(_obj_smhr_formsixtn.BANK) +
                                         " , @SMHR_CREATED_BY  =" + Convert.ToInt32(_obj_smhr_formsixtn.CREATEDBY) +
                                         " , @SMHR_CREATED_DATE ='" + Convert.ToDateTime(_obj_smhr_formsixtn.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                         " , @SMHR_MODIFIED_BY =" + Convert.ToInt32(_obj_smhr_formsixtn.LASTMDFBY) +
                                         " , @SMHR_MODIFIED_DATE ='" + Convert.ToDateTime(_obj_smhr_formsixtn.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                         " , @SMHR_STATUS =" + Convert.ToInt16(_obj_smhr_formsixtn.STATUS) +
                                         " , @SMHR_ORGANISATION =" + Convert.ToInt32(_obj_smhr_formsixtn.ORGANISATION_ID) + "")))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if ((ExecuteNonQuery("EXEC USP_SMHR_FORMSXTN @Operation='update',@BUSINESSUNIT=" + Convert.ToInt32(_obj_smhr_formsixtn.BUID) +
                                         " , @SMHR_EMPLOYEE =" + Convert.ToInt32(_obj_smhr_formsixtn.EMPLOYEE) +
                                         " , @SMHR_PERIOD =" + Convert.ToInt32(_obj_smhr_formsixtn.PERIOD) +
                                         " , @SMHR_AMOUNT =" + Convert.ToString(_obj_smhr_formsixtn.AMOUNT) +
                                         ", @SMHR_PAYMENTDATE = '" + Convert.ToDateTime(_obj_smhr_formsixtn.PAYMENT_DATE).ToString("MM/dd/yyyy") + "'" +
                                         " , @SMHR_CHALLANNUMBER =" + Convert.ToString(_obj_smhr_formsixtn.CHALLAN_NUMBER) +
                                         " , @SMHR_BANK =" + Convert.ToInt32(_obj_smhr_formsixtn.BANK) +
                                         " , @SMHR_ID =" + Convert.ToInt32(_obj_smhr_formsixtn.Id) +
                                         " , @SMHR_STATUS =" + Convert.ToInt32(_obj_smhr_formsixtn.STATUS) +
                                         " , @SMHR_ORGANISATION =" + Convert.ToInt32(_obj_smhr_formsixtn.ORGANISATION_ID) + "")))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable get_Insert(SMHR_FORMSIXTN _obj_smhr_formsixtn)
        {
            return ExecuteQuery("EXEC USP_SMHR_FORMSXTN @OPERATION='selectnew',@SMHR_ID ='" + Convert.ToInt32(_obj_smhr_formsixtn.Id) + "'");
        }

        public static bool set_Update(SMHR_FORMSIXTN _obj_smhr_formsixtn)
        {
            return (ExecuteNonQuery("EXEC USP_SMHR_FORMSXTN @Operation='update',@BUSINESSUNIT=" + Convert.ToInt32(_obj_smhr_formsixtn.BUID) +
                                    " , @SMHR_EMPLOYEE =" + Convert.ToInt32(_obj_smhr_formsixtn.EMPLOYEE) +
                                    " , @SMHR_PERIOD =" + Convert.ToInt32(_obj_smhr_formsixtn.PERIOD) +
                                    " , @SMHR_AMOUNT =" + Convert.ToString(_obj_smhr_formsixtn.AMOUNT) +
                                    ", @SMHR_PAYMENTDATE = '" + Convert.ToDateTime(_obj_smhr_formsixtn.PAYMENT_DATE).ToString("MM/dd/yyyy") + "'" +
                                    " , @SMHR_CHALLANNUMBER =" + Convert.ToString(_obj_smhr_formsixtn.CHALLAN_NUMBER) +
                                    " , @SMHR_BANK =" + Convert.ToInt32(_obj_smhr_formsixtn.BANK) +
                                    " , @SMHR_ID =" + Convert.ToInt32(_obj_smhr_formsixtn.Id) +
                                    " , @SMHR_STATUS =" + Convert.ToInt32(_obj_smhr_formsixtn.STATUS) +
                                    " , @SMHR_ORGANISATION =" + Convert.ToInt32(_obj_smhr_formsixtn.ORGANISATION_ID) + ""));
        }

        public static DataTable set_Selectnew(SMHR_FORMSIXTN _obj_smhr_formsixtn)
        {
            return ExecuteQuery("EXEC USP_SMHR_FORMSXTN @Operation='selectnew2',@SMHR_EMPLOYEE =" + Convert.ToInt32(_obj_smhr_formsixtn.EMPLOYEE) +
                                " , @SMHR_PERIOD =" + Convert.ToInt32(_obj_smhr_formsixtn.PERIOD) +
                                " , @SMHR_ORGANISATION =" + Convert.ToInt32(_obj_smhr_formsixtn.ORGANISATION_ID) + ",@SMHR_CHALLANNUMBER=" + _obj_smhr_formsixtn.CHALLAN_NUMBER + "");
        }

        #region SMHR_DEPARTMENT_DIVISION_MAPPING

        /// <summary>
        ///  Method to Get Country Based on the COUNTRY_ID
        /// </summary>
        /// <param name="COUNTRY_ID"></param>
        /// <returns>Datatable with Countries Information</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19 
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static DataTable get_DeptMapping(SMHR_DEPARTMENT_DIVISION_MAPPING _obj_Smhr_DDM)
        {
            if (_obj_Smhr_DDM.OPERATION == operation.Select)
            {
                if (_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'select',@ORGANISATION_ID='" + _obj_Smhr_DDM.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'select', @SMHR_ERPDIV_DEPMAPPING_ID ='" + Convert.ToString(_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID) + "'");
            }
            else
            {
                if (_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Check',@SMHR_ERPDIV_DEPMAPPING_BUID='" + _obj_Smhr_DDM.BUID + "',@SMHR_ERPDIV_DEPMAPPING_DIV_ID='" + _obj_Smhr_DDM.DIVISION_ID + "',@ORGANISATION_ID='" + _obj_Smhr_DDM.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Check',@SMHR_ERPDIV_DEPMAPPING_BUID='" + _obj_Smhr_DDM.BUID + "',@SMHR_ERPDIV_DEPMAPPING_DIV_ID='" + _obj_Smhr_DDM.DIVISION_ID + "',@ORGANISATION_ID='" + _obj_Smhr_DDM.ORGANISATION_ID + "'");
            }
        }

        public static DataTable get_DeptMapping1(SMHR_DEPARTMENT_DIVISION_MAPPING _obj_Smhr_DDM)
        {
            if (_obj_Smhr_DDM.OPERATION == operation.Select)
            {
                if (_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'select'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'select', @SMHR_ERPDIV_DEPMAPPING_ID ='" + Convert.ToString(_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID) + "'");
            }
            else
            {
                if (_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Check1',@SMHR_ERPDIV_DEPMAPPING_BUID='" + _obj_Smhr_DDM.BUID + "',@SMHR_ERPDIV_DEPMAPPING_DEP_ID='" + _obj_Smhr_DDM.DEPARTMENT_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Check1',@SMHR_ERPDIV_DEPMAPPING_BUID='" + _obj_Smhr_DDM.BUID + "',@SMHR_ERPDIV_DEPMAPPING_DEP_ID='" + _obj_Smhr_DDM.DEPARTMENT_ID + "'");
            }
        }

        public static DataTable get_DivisionMapping(SMHR_DIVISION _obj_Smhr_Division)
        {
            DataTable dt = ExecuteQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Approve',@ORGANISATION_ID='" + _obj_Smhr_Division.ORGANISATION_ID +
                                        "',@SMHR_ERPDIV_DEPMAPPING_BUID = '" + _obj_Smhr_Division.BUID + "'");
            return dt;
        }

        /// <summary>
        /// Method to Insert or update into the SMHR_COUNTRY table Using Information Passed using the Object. 
        /// </summary>
        /// <param name="_obj_Smhr_Country"></param>
        /// <returns>Boolean stating the Success or failure</returns>
        /// <remarks>
        ///  Author             : BK 
        ///  Created on         : 2009-08-19
        ///  Last Modified on   : N/A
        ///  Last Modfied by    : N/A
        /// </remarks>
        public static bool set_SMHR_DEPARTMENT_DIVISION_MAPPING(SMHR_DEPARTMENT_DIVISION_MAPPING _obj_Smhr_DDM)
        {
            bool status = false;
            switch (_obj_Smhr_DDM.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Insert',@SMHR_ERPDEP_DEPMAPPING_ERPCODE='" + Convert.ToString(_obj_Smhr_DDM.ERP_DEP_CODE) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_DEP_ID = " + (_obj_Smhr_DDM.DEPARTMENT_ID == null ? "null" : "" + Convert.ToInt32(_obj_Smhr_DDM.DEPARTMENT_ID)) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_DIV_ID = " + (_obj_Smhr_DDM.DIVISION_ID == null ? "null" : "" + Convert.ToInt32(_obj_Smhr_DDM.DIVISION_ID)) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_ERPCODE='" + Convert.ToString(_obj_Smhr_DDM.ERP_CODE) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_TYPE='" + Convert.ToString(_obj_Smhr_DDM.Type) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_BUID= " + Convert.ToInt32(_obj_Smhr_DDM.BUID) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_CREATEDBY= " + Convert.ToString(_obj_Smhr_DDM.CREATEDBY) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_CREATEDDATE='" + _obj_Smhr_DDM.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @SMHR_ERPDIV_DEPMAPPING_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DDM.LASTMDFBY) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_LASTMDFDATE='" + _obj_Smhr_DDM.LASTMDFDATE.ToString("MM/dd/yyyy") + "'" +
                                        ",@ORGANISATION_ID='" + _obj_Smhr_DDM.ORGANISATION_ID +
                                        "',@SMHR_ERPDIV_DEPMAPPING_STATUS = '" + _obj_Smhr_DDM.STATUS + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Update',@SMHR_ERPDIV_DEPMAPPING_ID=" + Convert.ToString(_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID) +
                                        " ,@SMHR_ERPDEP_DEPMAPPING_ERPCODE='" + Convert.ToString(_obj_Smhr_DDM.ERP_DEP_CODE) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_DEP_ID = " + (_obj_Smhr_DDM.DEPARTMENT_ID == null ? "null" : "" + Convert.ToInt32(_obj_Smhr_DDM.DEPARTMENT_ID)) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_DIV_ID = " + (_obj_Smhr_DDM.DIVISION_ID == null ? "null" : "" + Convert.ToInt32(_obj_Smhr_DDM.DIVISION_ID)) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_ERPCODE = '" + Convert.ToString(_obj_Smhr_DDM.ERP_CODE) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_TYPE='" + Convert.ToString(_obj_Smhr_DDM.Type) +
                                        "', @SMHR_ERPDIV_DEPMAPPING_BUID= " + Convert.ToInt32(_obj_Smhr_DDM.BUID) +
                                        ", @SMHR_ERPDIV_DEPMAPPING_LASTMDFBY ='" + Convert.ToString(_obj_Smhr_DDM.LASTMDFBY) +
                                        "' ,@SMHR_ERPDIV_DEPMAPPING_LASTMDFDATE='" + _obj_Smhr_DDM.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "',@SMHR_ERPDIV_DEPMAPPING_STATUS = '" + _obj_Smhr_DDM.STATUS + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENT_DIVISION_MAPPING @Operation = 'Delete', @SMHR_DEPARTMENT_DIVISION_MAPPING_ID=" + Convert.ToString(_obj_Smhr_DDM.SMHR_DEPARTMENT_DIVISION_MAPPING_ID) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DDM.LASTMDFBY) +
                                        " , @SMHR_ERPDIV_DEPMAPPING_LASTMDFDATE='" + _obj_Smhr_DDM.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_ANNOUNCEMENT

        public static DataTable get_Announcement(SMHR_ANNOUNCEMENT obj_smhr_announcement)
        {
            if (obj_smhr_announcement.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_ANNOUNCEMENT @OPERATION='SELECT',@ANNCE_ORG_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ORG_ID) + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_ANNOUNCEMENT @OPERATION='EDIT',@ANNCE_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ID) +
                                    "',@ANNCE_ORG_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ORG_ID) + "'");
            }
        }

        public static bool set_Announcement(SMHR_ANNOUNCEMENT obj_smhr_announcement)
        {
            bool status = false;
            switch (obj_smhr_announcement.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ANNOUNCEMENT @OPERATION='INSERT',@ANNCE_TITLE='" + Convert.ToString(obj_smhr_announcement.ANNCE_TITLE) +
                                        "',@ANNCE_MESSAGE='" + Convert.ToString(obj_smhr_announcement.ANNCE_MESSAGE) +
                                        "',@ANNCE_EXP_DATE='" + Convert.ToDateTime(obj_smhr_announcement.ANNCE_EXP_DATE).ToString("MM/dd/yyyy") +
                                        "',@ANNCE_ORG_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ORG_ID) +
                                        "',@ANNCE_CREATEDBY='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_CREATEDBY) +
                                        "',@ANNCE_CREATEDDATE='" + Convert.ToDateTime(obj_smhr_announcement.ANNCE_CREATEDDATE) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ANNOUNCEMENT @OPERATION='UPDATE',@ANNCE_TITLE='" + Convert.ToString(obj_smhr_announcement.ANNCE_TITLE) +
                                        "',@ANNCE_MESSAGE='" + Convert.ToString(obj_smhr_announcement.ANNCE_MESSAGE) +
                                        "',@ANNCE_EXP_DATE='" + Convert.ToDateTime(obj_smhr_announcement.ANNCE_EXP_DATE).ToString("MM/dd/yyyy") +
                                        "',@ANNCE_ORG_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ORG_ID) +
                                        "',@ANNCE_LASTMDFBY='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_LASTMDFBY) +
                                        "',@ANNCE_LASTMDFDATE='" + Convert.ToDateTime(obj_smhr_announcement.ANNCE_LASTMDFDATE) +
                                        "',@ANNCE_ID='" + Convert.ToInt32(obj_smhr_announcement.ANNCE_ID) + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_USERLOG

        public static DataTable GET_USER_LOG_CHECK(SMHR_USERLOG _obj_SMHR_USERLOG)
        {
            return ExecuteQuery("EXEC USP_SMHR_USERLOG @OPERATION = 'GRID' ");
        }

        public static bool GET_USER_LOG_INSERT(SMHR_USERLOG _obj_SMHR_USERLOG)
        {
            //return ExecuteQuery("EXEC USP_SMHR_USERLOG @OPERATION = 'INSERT', @USERLOG_USER_ID = '" + _obj_SMHR_USERLOG.USERLOG_USER_ID + "',@USERLOG_IP ='" + _obj_SMHR_USERLOG.USERLOG_IP + "',@USERLOG_DOMAIN ='" + _obj_SMHR_USERLOG.USERLOG_DOMAIN + "',@USERLOG_LOGSTART ='" + _obj_SMHR_USERLOG.USERLOG_LOGSTART + "',@USERLOG_CREATEDBY ='" + _obj_SMHR_USERLOG.USERLOG_CREATEDBY + "',@USERLOG_CREATEDDATE ='" + _obj_SMHR_USERLOG.USERLOG_CREATEDDATE + "'");
            return ExecuteNonQuery("EXEC USP_SMHR_USERLOG @OPERATION = 'INSERT', @USERLOG_USER_ID = '" + _obj_SMHR_USERLOG.USERLOG_USER_ID +
                                   "',@USERLOG_IP ='" + _obj_SMHR_USERLOG.USERLOG_IP +
                                   "',@USERLOG_DOMAIN ='" + _obj_SMHR_USERLOG.USERLOG_DOMAIN +
                                   "',@USERLOG_LOGSTART ='" + _obj_SMHR_USERLOG.USERLOG_LOGSTART +
                                   "',@USERLOG_CREATEDBY ='" + _obj_SMHR_USERLOG.USERLOG_CREATEDBY +
                                   "',@USERLOG_CREATEDDATE ='" + _obj_SMHR_USERLOG.USERLOG_CREATEDDATE + "'");
        }

        public static bool GET_USER_LOG_UPDATE(SMHR_USERLOG _obj_SMHR_USERLOG)
        {
            return ExecuteNonQuery("EXEC USP_SMHR_USERLOG @OPERATION = 'UPDATE', @USERLOG_ID = '" + _obj_SMHR_USERLOG.USERLOG_ID +
                                   "',@USERLOG_LOGEND ='" + _obj_SMHR_USERLOG.USERLOG_LOGEND + "'");
        }

        public static DataTable GET_LATEST_USER_LOG_ID(SMHR_USERLOG _obj_SMHR_USERLOG)
        {
            return ExecuteQuery("EXEC USP_SMHR_USERLOG @OPERATION = 'GET_MAX_USERLOG_ID' ");
        }

        #endregion

        #region SMHR_EMPLOYEETRANSACTION

        public static DataTable get_EmpTrans(SMHR_EMPLOYEETRANSACTION obj_smhr_emp)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPTRANS @OPERATION='Select',@EMPBNKTRN_BU_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_BU_ID) + "',@EMPBNKTRN_PRDDTL_ID='" + obj_smhr_emp.EMPBNKTRN_PRDDTL_ID + "',@EMPBNKTRN_PERIOD_ID='" + obj_smhr_emp.EMPBNKTRN_PERIOD_ID + "',@EMPBNKTRN_ORG_ID='" + obj_smhr_emp.EMPBNKTRN_ORG_ID + "'");
        }

        public static DataTable check_EmpTrans(SMHR_EMPLOYEETRANSACTION obj_smhr_emp)
        {
            DataTable dt = new DataTable();
            //return ExecuteQuery("EXEC USP_SMHR_EMPTRANS @OPERATION='Select',@EMPBNKTRN_BU_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_BU_ID) + "','" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_PERIOD_ID) + "','" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_PRDDTL_ID) + "'");
            dt = ExecuteQuery("EXEC USP_SMHR_EMPTRANS @OPERATION='CHECK',@EMPBNKTRN_EMP_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_EMP_ID) + "',@EMPBNKTRN_PRDDTL_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_PRDDTL_ID) + "',@EMPBNKTRN_BANK_DTLS_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_BANK_DTLS_ID) + "'");
            return dt;
        }

        public static bool set_EmpTrans(SMHR_EMPLOYEETRANSACTION obj_smhr_emp)
        {
            bool status = false;
            switch (obj_smhr_emp.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPTRANS @OPERATION='INSERT',@EMPBNKTRN_EMP_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_EMP_ID) +
                                        "',@EMPBNKTRN_BANK_DTLS_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_BANK_DTLS_ID) +
                                        "',@EMPBNKTRN_PERIOD_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_PERIOD_ID) +
                                        "',@EMPBNKTRN_PRDDTL_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_PRDDTL_ID) +
                                        "',@EMPBNKTRN_AMOUNT='" + Convert.ToDouble(obj_smhr_emp.EMPBNKTRN_AMOUNT) +
                                        "',@EMPBNKTRN_BU_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_BU_ID) +
                                        "',@EMPBNKTRN_ORG_ID='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_ORG_ID) +
                                        "',@EMPBNKTRN_TRAN_STATUS='" + Convert.ToInt32(obj_smhr_emp.EMPBNKTRN_TRAN_STATUS) +
                                        "',@EMPBNKTRN_CREATEDBY='" + Convert.ToInt32(obj_smhr_emp.CREATEDBY) +
                                        "',@EMPBNKTRN_CREATEDDATE='" + Convert.ToDateTime(obj_smhr_emp.CREATEDDATE).ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_FOODALLOWANCE

        public static bool setFoodAllowance(SMHR_FOODALLOWANCE _obj_FoodAllowance)
        {
            bool status = false;
            switch (_obj_FoodAllowance.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_FOODALLOWANCE @OPERATION='INSERT',@FOODALWNC_EMP_ID='" + _obj_FoodAllowance.FOODALLOWANCE_EMP_ID + "'" +
                                        ",@FOODALWNC_BU_ID='" + _obj_FoodAllowance.FOODALLOWANCE_BU_ID + "'" +
                                        ",@FOODALWNC_ORG_ID='" + _obj_FoodAllowance.FOODALLOWANCE_ORG_ID + "'" +
                                        ",@FOODALWNC_AMOUNT='" + (_obj_FoodAllowance.FOODALLOWANCE_AMOUNT) + "'" +
                                        ",@FOODALWNC_CREATEDDATE='" + Convert.ToDateTime(_obj_FoodAllowance.CREATEDDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@FOODALWNC_CREATEDBY='" + _obj_FoodAllowance.CREATEDBY + "'" +
                                        ",@FOODALWNC_MODIFIEDDATE='" + Convert.ToDateTime(_obj_FoodAllowance.LASTMDFDATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@FOODALWNC_MODIFIEDBY='" + _obj_FoodAllowance.LASTMDFBY + "'"))
                        status = true;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_FOODALLOWANCE @OPERATION='DELETE',@FOODALWNC_EMP_ID='" + _obj_FoodAllowance.FOODALLOWANCE_EMP_ID + "'" +
                                        ",@FOODALWNC_BU_ID='" + _obj_FoodAllowance.FOODALLOWANCE_BU_ID + "'"))
                        status = true;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable getFoodAllowance(SMHR_FOODALLOWANCE _obj_FoodAllowance)
        {
            if (_obj_FoodAllowance.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_FOODALLOWANCE @OPERATION='SELECT',@FOODALWNC_BU_ID ='" + _obj_FoodAllowance.FOODALLOWANCE_BU_ID + "',@FOODALWNC_ORG_ID='" + _obj_FoodAllowance.FOODALLOWANCE_ORG_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_FOODALLOWANCE @OPERATION='SELECT',@FOODALWNC_BU_ID ='" + _obj_FoodAllowance.FOODALLOWANCE_BU_ID + "',@FOODALWNC_ORG_ID='" + _obj_FoodAllowance.FOODALLOWANCE_ORG_ID + "'");
            }
            //return ExecuteQuery("EXEC USP_SMHR_FOODALLOWANCE @OPERATION='SELECT',@FOODALWNC_BU_ID ='" + _obj_FoodAllowance.FOODALLOWANCE_BU_ID + "'"+
            //    ",@FOODALWNC_ORG_ID='" + _obj_FoodAllowance.FOODALLOWANCE_ORG_ID + "'");
        }

        #endregion

        public static DataTable getEmployee(SMHR_EMPLOYEE _obj_SMHR_EMPLOYEE)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION='Select_New',@EMP_EMPCODE='" + _obj_SMHR_EMPLOYEE.EMP_EMPCODE + "',@EMP_BUSINESSUNIT_ID='" + _obj_SMHR_EMPLOYEE.EMP_BUSINESSUNIT_ID + "',@EMP_ORGANISATION_ID='" + _obj_SMHR_EMPLOYEE.ORGANISATION_ID + "'");
        }

        public static DataTable getBU(SMHR_BUSINESSUNIT _obj_SMHR_BUSINESSUNIT)
        {
            return ExecuteQuery("EXEC USP_SMHR_BUSINESSUNIT @Operation='GetBU',@ORGANISATION_ID = '" + _obj_SMHR_BUSINESSUNIT.ORGANISATION_ID + "'" +
                                ",@USER_ID = '" + _obj_SMHR_BUSINESSUNIT.BU_LOGIN_ID + "'");
        }

        #region SMHR_EMPLOYEE_INHOLD

        public static DataTable get_Employee_Inhold(SMHR_EMPLOYEE_INHOLD _obj_Smhr_Employee_Inhold)
        {
            if (_obj_Smhr_Employee_Inhold.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Check',@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "',@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "',@INH_ORG_ID='" + _obj_Smhr_Employee_Inhold.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Employee_Inhold.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Select',@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "',@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "',@INH_ORG_ID='" + _obj_Smhr_Employee_Inhold.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Select',@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "',@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "',@INH_ORG_ID='" + _obj_Smhr_Employee_Inhold.ORGANISATION_ID + "'");
            }
        }

        public static bool set_Employee_Inhold(SMHR_EMPLOYEE_INHOLD _obj_Smhr_Employee_Inhold)
        {
            bool status = false;
            switch (_obj_Smhr_Employee_Inhold.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Insert',@INH_EMP_ID='" + _obj_Smhr_Employee_Inhold.INH_EMP_ID + "'" +
                                        ",@INH_HOLD_STATUS='" + _obj_Smhr_Employee_Inhold.INH_HOLD_STATUS + "'" +
                                        ",@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "'" +
                                        ",@INH_ORG_ID='" + (_obj_Smhr_Employee_Inhold.ORGANISATION_ID) + "'" +
                                        ",@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "'" +
                                        ",@INH_CREATED_DATE='" + Convert.ToDateTime(_obj_Smhr_Employee_Inhold.INH_CREATED_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@INH_CREATED_BY='" + _obj_Smhr_Employee_Inhold.INH_CREATED_BY + "'" +
                                        ",@INH_MODIFIED_DATE='" + Convert.ToDateTime(_obj_Smhr_Employee_Inhold.INH_MODIFIED_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@INH_MODIFIED_BY='" + _obj_Smhr_Employee_Inhold.INH_MODIFIED_BY + "'"))
                        status = true;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Update',@INH_EMP_ID='" + _obj_Smhr_Employee_Inhold.INH_EMP_ID + "'" +
                                        ",@INH_HOLD_STATUS='" + _obj_Smhr_Employee_Inhold.INH_HOLD_STATUS + "'" +
                                        ",@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "'" +
                                        ",@INH_ORG_ID='" + (_obj_Smhr_Employee_Inhold.ORGANISATION_ID) + "'" +
                                        ",@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "'" +
                                        ",@INH_CREATED_DATE='" + Convert.ToDateTime(_obj_Smhr_Employee_Inhold.INH_CREATED_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@INH_CREATED_BY='" + _obj_Smhr_Employee_Inhold.INH_CREATED_BY + "'" +
                                        ",@INH_MODIFIED_DATE='" + Convert.ToDateTime(_obj_Smhr_Employee_Inhold.INH_MODIFIED_DATE).ToString("MM/dd/yyyy") + "'" +
                                        ",@INH_MODIFIED_BY='" + _obj_Smhr_Employee_Inhold.INH_MODIFIED_BY + "'"))
                        status = true;
                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEE_INHOLD @OPERATION='Delete',@INH_BU_ID='" + _obj_Smhr_Employee_Inhold.INH_BU_ID + "'" +
                                        ",@INH_ORG_ID='" + (_obj_Smhr_Employee_Inhold.ORGANISATION_ID) + "'" +
                                        ",@INH_FIN_PRDDTL_ID='" + _obj_Smhr_Employee_Inhold.INH_FIN_PRDDTL_ID + "'"))
                        status = true;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region SMHR_EMPDETAILS

        public static DataTable getEmpDetails(SMHR_EMPLOYEE _obj_smhr_Employee)
        {
            if (_obj_smhr_Employee.OPERATION == operation.EMPDETAILS)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @OPERATION='EMPDETAILS',@EMP_BUSINESSUNIT_ID='" + _obj_smhr_Employee.EMP_BUSINESSUNIT_ID + "',@ORGANISATION_ID='" + _obj_smhr_Employee.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE_New @OPERATION='EMPALL',@ORGANISATION_ID='" + _obj_smhr_Employee.ORGANISATION_ID + "'");
            }
        }

        #endregion

        #region SMHR_ATTENDANCEPERIOD

        public static bool set_AttendancePeriod(SMHR_ATTENDANCEPERIOD _obj_smhr_AttendancePeriod)
        {
            bool status = false;
            switch (_obj_smhr_AttendancePeriod.MODE)
            {
                case 1:
                    if ((ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCEPERIOD @MODE=1, @ATTENDANCEPERIOD_BU='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_BU +
                                         "', @ATTENDANCEPERIOD_PERIOD ='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_PERIOD +
                                         "', @ATTENDANCEPERIOD_PERIODDETAILS ='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_PERIODDETAILS +
                                         "', @ATTENDANCEPERIOD_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_STARTDATE).ToString("MM/dd/yyyy") +
                                         "', @ATTENDANCEPERIOD_ENDDATE = '" + Convert.ToDateTime(_obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_ENDDATE).ToString("MM/dd/yyyy") +
                                         "', @ATTENDANCEPERIOD_ORG = '" + _obj_smhr_AttendancePeriod.ORGANISATION_ID +
                                         "', @ATTENDANCEPERIOD_CREATEDBY = '" + _obj_smhr_AttendancePeriod.CREATEDBY + "'")))
                        status = true;
                    else
                        status = false;
                    break;
                case 5:
                    if ((ExecuteNonQuery("EXEC USP_SMHR_ATTENDANCEPERIOD @MODE=5, @ATTENDANCEPERIOD_ID='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_ID +
                                         "', @ATTENDANCEPERIOD_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_STARTDATE).ToString("MM/dd/yyyy") +
                                         "', @ATTENDANCEPERIOD_ENDDATE = '" + Convert.ToDateTime(_obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_ENDDATE).ToString("MM/dd/yyyy") +
                                         "', @ATTENDANCEPERIOD_ORG = '" + _obj_smhr_AttendancePeriod.ORGANISATION_ID +
                                         "', @ATTENDANCEPERIOD_MODIFIEDBY = '" + _obj_smhr_AttendancePeriod.LASTMDFBY + "'")))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable get_AttendancePeriod(SMHR_ATTENDANCEPERIOD _obj_smhr_AttendancePeriod)
        {
            if (_obj_smhr_AttendancePeriod.MODE == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_ATTENDANCEPERIOD @MODE=2, @ATTENDANCEPERIOD_BU='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_BU +
                                    "',@ATTENDANCEPERIOD_PERIODDETAILS ='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_PERIODDETAILS +
                                    "',@ATTENDANCEPERIOD_ORG = '" + _obj_smhr_AttendancePeriod.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_AttendancePeriod.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_ATTENDANCEPERIOD @MODE=3, @EMP_LOGIN_ID ='" + _obj_smhr_AttendancePeriod.LOGIN_ID +
                                    "',@ATTENDANCEPERIOD_ORG = '" + _obj_smhr_AttendancePeriod.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_ATTENDANCEPERIOD @MODE=4, @ATTENDANCEPERIOD_ID ='" + _obj_smhr_AttendancePeriod.ATTENDANCEPERIOD_ID +
                                    "',@ATTENDANCEPERIOD_ORG = '" + _obj_smhr_AttendancePeriod.ORGANISATION_ID + "'");
            }
        }

        #endregion

        #region SMHR_PAYROLLPERIOD

        public static bool set_PayrollPeriod(SMHR_PAYROLLPERIOD _obj_smhr_PayrollPeriod)
        {
            bool status = false;
            switch (_obj_smhr_PayrollPeriod.MODE)
            {
                case 1:
                    if ((ExecuteNonQuery("EXEC USP_SMHR_PAYROLLPERIOD @MODE=1, @PAYROLLPERIOD_BU='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_BU +
                                         "', @PAYROLLPERIOD_PERIOD ='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_PERIOD +
                                         "', @PAYROLLPERIOD_PERIODDETAILS ='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_PERIODDETAILS +
                                         "', @PAYROLLPERIOD_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_PayrollPeriod.PAYROLLPERIOD_STARTDATE).ToString("MM/dd/yyyy") +
                                         "', @PAYROLLPERIOD_ENDDATE = '" + Convert.ToDateTime(_obj_smhr_PayrollPeriod.PAYROLLPERIOD_ENDDATE).ToString("MM/dd/yyyy") +
                                         "', @PAYROLLPERIOD_ORG = '" + _obj_smhr_PayrollPeriod.ORGANISATION_ID +
                                         "', @PAYROLLPERIOD_CREATEDBY = '" + _obj_smhr_PayrollPeriod.CREATEDBY + "'")))
                        status = true;
                    else
                        status = false;
                    break;
                case 5:
                    if ((ExecuteNonQuery("EXEC USP_SMHR_PAYROLLPERIOD @MODE=5, @PAYROLLPERIOD_ID='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_ID +
                                         "', @PAYROLLPERIOD_STARTDATE = '" + Convert.ToDateTime(_obj_smhr_PayrollPeriod.PAYROLLPERIOD_STARTDATE).ToString("MM/dd/yyyy") +
                                         "', @PAYROLLPERIOD_ENDDATE = '" + Convert.ToDateTime(_obj_smhr_PayrollPeriod.PAYROLLPERIOD_ENDDATE).ToString("MM/dd/yyyy") +
                                         "', @PAYROLLPERIOD_ORG = '" + _obj_smhr_PayrollPeriod.ORGANISATION_ID +
                                         "', @PAYROLLPERIOD_MODIFIEDBY = '" + _obj_smhr_PayrollPeriod.LASTMDFBY + "'")))
                        status = true;
                    else
                        status = false;
                    break;
            }
            return status;
        }

        public static DataTable get_PayrollPeriod(SMHR_PAYROLLPERIOD _obj_smhr_PayrollPeriod)
        {
            if (_obj_smhr_PayrollPeriod.MODE == 2)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLPERIOD @MODE=2, @PAYROLLPERIOD_BU='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_BU +
                                    "',@PAYROLLPERIOD_PERIODDETAILS ='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_PERIODDETAILS +
                                    "',@PAYROLLPERIOD_ORG = '" + _obj_smhr_PayrollPeriod.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_PayrollPeriod.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLPERIOD @MODE=3, @EMP_LOGIN_ID ='" + _obj_smhr_PayrollPeriod.LOGIN_ID +
                                    "',@PAYROLLPERIOD_ORG = '" + _obj_smhr_PayrollPeriod.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_PAYROLLPERIOD @MODE=4, @PAYROLLPERIOD_ID ='" + _obj_smhr_PayrollPeriod.PAYROLLPERIOD_ID +
                                    "',@PAYROLLPERIOD_ORG = '" + _obj_smhr_PayrollPeriod.ORGANISATION_ID + "'");
            }
        }

        #endregion

        #region SMHR_SUBDIVISION

        public static bool set_SubDivision(SMHR_SUBDIVISION _obj_smhr_SubDivision)
        {
            bool status = false;
            switch (_obj_smhr_SubDivision.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SUBDIVISION @MODE=1,@SUBDIVISION_NAME='" + _obj_smhr_SubDivision.SUBDIVISION_NAME +
                                        "', @SUBDIVISION_DESC = '" + _obj_smhr_SubDivision.SUBDIVISION_DESC +
                                        "', @SUBDIVISION_DIVISION_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_DIVISION_ID +
                                        "', @SUBDIVISION_DEPARTMENT_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_DEPARTMENT_ID +
                                        "', @SUBDIVISION_BU_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_BU_ID +
                                        "', @SUBDIVISION_STATUS = '" + _obj_smhr_SubDivision.SUBDIVISION_STATUS +
                                        "', @SUBDIVISION_ORG_ID = '" + _obj_smhr_SubDivision.ORGANISATION_ID +
                                        "', @SUBDIVISION_CREATEDBY = '" + _obj_smhr_SubDivision.CREATEDBY + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SUBDIVISION @MODE=2,@SUBDIVISION_ID='" + _obj_smhr_SubDivision.SUBDIVISION_ID +
                                        "', @SUBDIVISION_DESC = '" + _obj_smhr_SubDivision.SUBDIVISION_DESC +
                                        "', @SUBDIVISION_STATUS = '" + _obj_smhr_SubDivision.SUBDIVISION_STATUS +
                                        "', @SUBDIVISION_ORG_ID = '" + _obj_smhr_SubDivision.ORGANISATION_ID +
                                        "', @SUBDIVISION_LASTMDFBY = '" + _obj_smhr_SubDivision.LASTMDFBY + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_SubDivision(SMHR_SUBDIVISION _obj_smhr_SubDivision)
        {
            if (_obj_smhr_SubDivision.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_SUBDIVISION @MODE=3, @SUBDIVISION_ORG_ID='" + _obj_smhr_SubDivision.ORGANISATION_ID +
                                    "',@EMP_LOGIN_ID ='" + _obj_smhr_SubDivision.LOGIN_ID + "'");
            }
            else if (_obj_smhr_SubDivision.MODE == 4)
            {
                return ExecuteQuery("EXEC USP_SMHR_SUBDIVISION @MODE=4, @SUBDIVISION_ID ='" + _obj_smhr_SubDivision.SUBDIVISION_ID +
                                    "',@SUBDIVISION_ORG_ID = '" + _obj_smhr_SubDivision.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_SubDivision.MODE == 6)
            {
                return ExecuteQuery("EXEC USP_SMHR_SUBDIVISION @MODE=6, @SUBDIVISION_DIVISION_ID ='" + _obj_smhr_SubDivision.SUBDIVISION_DIVISION_ID +
                                    "',@SUBDIVISION_BU_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_BU_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_SUBDIVISION @MODE=5, @SUBDIVISION_NAME ='" + _obj_smhr_SubDivision.SUBDIVISION_NAME +
                                    "', @SUBDIVISION_DIVISION_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_DIVISION_ID +
                                    "',@SUBDIVISION_BU_ID = '" + _obj_smhr_SubDivision.SUBDIVISION_BU_ID + "'");
            }
        }

        #endregion

        #region SMHR_CURRENCY_CONVERSION

        public static bool set_Currency_Conversion(SMHR_CURRENCY_CONVERSION _obj_Curr_Conv)
        {
            bool status = false;
            switch (_obj_Curr_Conv.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=1,@CURRENCY_CONVERSION_BU='" + _obj_Curr_Conv.CURRENCY_CONVERSION_BU +
                                        "', @CURRENCY_CONVERSION_FROMCURR = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_FROMCURR +
                                        "', @CURRENCY_CONVERSION_TOCURR = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_TOCURR +
                                        "', @CURRENCY_CONVERSION_RATE = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_RATE +
                                        "', @CURRENCY_CONVERSION_CREATEDBY= '" + _obj_Curr_Conv.CREATEDBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=2,@CURRENCY_CONVERSION_ID='" + _obj_Curr_Conv.CURRENCY_CONVERSION_ID +
                                        "', @CURRENCY_CONVERSION_RATE = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_RATE +
                                        "', @CURRENCY_CONVERSION_LASTMDFBY = '" + _obj_Curr_Conv.LASTMDFBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_Currency_Conversion(SMHR_CURRENCY_CONVERSION _obj_Curr_Conv)
        {
            if (_obj_Curr_Conv.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=3, @ORGANISATION_ID='" + _obj_Curr_Conv.ORGANISATION_ID +
                                    "',@EMP_LOGIN_ID ='" + _obj_Curr_Conv.LOGIN_ID + "'");
            }
            else if (_obj_Curr_Conv.MODE == 5)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=5, @CURRENCY_CONVERSION_ID='" + _obj_Curr_Conv.CURRENCY_CONVERSION_ID + "'");
            }
            else if (_obj_Curr_Conv.MODE == 6)
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=6, @ORGANISATION_ID='" + _obj_Curr_Conv.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_CURRENCY_CONVERSION @MODE=4, @CURRENCY_CONVERSION_BU ='" + _obj_Curr_Conv.CURRENCY_CONVERSION_BU +
                                    "', @CURRENCY_CONVERSION_FROMCURR = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_FROMCURR +
                                    "',@CURRENCY_CONVERSION_TOCURR = '" + _obj_Curr_Conv.CURRENCY_CONVERSION_TOCURR + "'");
            }
        }

        #endregion

        #region SMHR_EMP_ONSITEDETAILS

        public static bool set_OnsiteDetails(SMHR_EMP_ONSITEDETAILS _obj_OnsiteDetails)
        {
            bool status = false;
            switch (_obj_OnsiteDetails.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_ONSITEDETAILS @MODE=1,@ONSITEDETAILS_EMP_ID='" + _obj_OnsiteDetails.ONSITEDETAILS_EMP_ID +
                                        "', @ONSITEDETAILS_FROMDATE = '" + Convert.ToDateTime(_obj_OnsiteDetails.ONSITEDETAILS_FROMDATE).ToString("MM/dd/yyyy") +
                                        "', @ONSITEDETAILS_TODATE = '" + Convert.ToDateTime(_obj_OnsiteDetails.ONSITEDETAILS_TODATE).ToString("MM/dd/yyyy") +
                                        "', @ONSITEDETAILS_LOCATION = '" + _obj_OnsiteDetails.ONSITEDETAILS_LOCATION +
                                        "', @ONSITEDETAILS_CREATEDBY= '" + _obj_OnsiteDetails.CREATEDBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_ONSITEDETAILS @MODE=2,@ONSITEDETAILS_ID='" + _obj_OnsiteDetails.ONSITEDETAILS_ID +
                                        "', @ONSITEDETAILS_FROMDATE = '" + Convert.ToDateTime(_obj_OnsiteDetails.ONSITEDETAILS_FROMDATE).ToString("MM/dd/yyyy") +
                                        "', @ONSITEDETAILS_TODATE = '" + Convert.ToDateTime(_obj_OnsiteDetails.ONSITEDETAILS_TODATE).ToString("MM/dd/yyyy") +
                                        "', @ONSITEDETAILS_LOCATION = '" + _obj_OnsiteDetails.ONSITEDETAILS_LOCATION +
                                        "', @ONSITEDETAILS_LASTMDFBY= '" + _obj_OnsiteDetails.LASTMDFBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_OnsiteDetails(SMHR_EMP_ONSITEDETAILS _obj_OnsiteDetails)
        {
            if (_obj_OnsiteDetails.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_ONSITEDETAILS @MODE=3, @ONSITEDETAILS_EMP_ID='" + _obj_OnsiteDetails.ONSITEDETAILS_EMP_ID +
                                    "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_ONSITEDETAILS @MODE=4, @ONSITEDETAILS_ID='" + _obj_OnsiteDetails.ONSITEDETAILS_ID +
                                    "'");
            }
        }

        #endregion

        #region SMHR_EMP_SHIFTDETAILS

        public static bool set_ShiftDetails(SMHR_EMP_SHIFTDETAILS _obj_ShiftDetails)
        {
            bool status = false;
            switch (_obj_ShiftDetails.MODE)
            {
                case 1:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_SHIFTDETAILS @MODE=1,@SHIFTDETAILS_EMP_ID='" + _obj_ShiftDetails.SHIFTDETAILS_EMP_ID +
                                        "', @SHIFTDETAILS_FROMDATE = '" + Convert.ToDateTime(_obj_ShiftDetails.SHIFTDETAILS_FROMDATE).ToString("MM/dd/yyyy") +
                                        "', @SHIFTDETAILS_TODATE = '" + Convert.ToDateTime(_obj_ShiftDetails.SHIFTDETAILS_TODATE).ToString("MM/dd/yyyy") +
                                        "', @SHIFTDETAILS_SHIFT_ID = '" + _obj_ShiftDetails.SHIFTDETAILS_SHIFT_ID +
                                        "', @SHIFTDETAILS_CREATEDBY= '" + _obj_ShiftDetails.CREATEDBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case 2:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMP_SHIFTDETAILS @MODE=2,@SHIFTDETAILS_ID='" + _obj_ShiftDetails.SHIFTDETAILS_ID +
                                        "', @SHIFTDETAILS_FROMDATE = '" + Convert.ToDateTime(_obj_ShiftDetails.SHIFTDETAILS_FROMDATE).ToString("MM/dd/yyyy") +
                                        "', @SHIFTDETAILS_TODATE = '" + Convert.ToDateTime(_obj_ShiftDetails.SHIFTDETAILS_TODATE).ToString("MM/dd/yyyy") +
                                        "', @SHIFTDETAILS_SHIFT_ID = '" + _obj_ShiftDetails.SHIFTDETAILS_SHIFT_ID +
                                        "', @SHIFTDETAILS_LASTMDFBY= '" + _obj_ShiftDetails.LASTMDFBY +
                                        "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_ShiftDetails(SMHR_EMP_SHIFTDETAILS _obj_ShiftDetails)
        {
            if (_obj_ShiftDetails.MODE == 3)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_SHIFTDETAILS @MODE=3, @SHIFTDETAILS_EMP_ID='" + _obj_ShiftDetails.SHIFTDETAILS_EMP_ID +
                                    "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMP_SHIFTDETAILS @MODE=4, @SHIFTDETAILS_ID='" + _obj_ShiftDetails.SHIFTDETAILS_ID +
                                    "'");
            }
        }

        #endregion

        #region SMHR_REPORTING_MANAGER

        public static DataTable GET_REPORTING_MANAGER(SMHR_EMPLOYEE _obj_Employee)
        {
            return Dal.ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @OPERATION = 'MANAGER',@EMP_ORGANISATION_ID = '" + _obj_Employee.EMP_ORGANISATION_ID +
                                    "',@EMP_BUSINESSUNIT_ID = '" + _obj_Employee.EMP_BUSINESSUNIT_ID + "'");
        }

        #endregion

        #region SMHR_COMMITTEE

        public static DataTable get_EmployeeBySearchString(int OrganizationID, string EMPSearchString)
        {
            return ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEES @ORGANISATION_ID=" + OrganizationID +
                                ",@SEARCH_STRING='" + EMPSearchString + "'");
        }

        public static DataSet get_Committee(SMHR_COMMITTEE _obj_Smhr_Committee)
        {
            if (_obj_Smhr_Committee.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Committee.COMMITTEE_ID.ToString() == "0")
                    //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'select',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'select',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                else
                {
                    //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'select', @COMMITTEE_ID =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) + ",@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'select', @COMMITTEE_ID =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) + ",@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                }
            }
            else if (_obj_Smhr_Committee.OPERATION == operation.Get)
            {
                //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Get', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'Get', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Committee.COMMITTEE_ID.ToString() == "0")
                    //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Check', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'Check', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                else
                    //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Check', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "', @COMMITTEE_ID =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) + ",@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'Check', @COMMITTEE_CODE ='" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CODE) + "', @COMMITTEE_ID =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) + ",@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
            }
        }

        public static bool set_Committee(SMHR_COMMITTEE _obj_Smhr_Committee)
        {
            bool status = false;
            switch (_obj_Smhr_Committee.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Insert', @COMMITTEE_EMP_ID='" + _obj_Smhr_Committee.COMMITTEE_EMP_ID +
                                        "', @COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID +
                                        "', @COMMITTEE_CODE='" + _obj_Smhr_Committee.COMMITTEE_CODE +
                                        "', @COMMITTEE_DESC='" + _obj_Smhr_Committee.COMMITTEE_DESC +
                                        "', @COMMITTEE_REVIEW='" + _obj_Smhr_Committee.COMMITTEE_REVIEW +
                                        "', @COMMITTEE_REASON='" + _obj_Smhr_Committee.COMMITTEE_REASON +
                                        "', @COMMITTEE_OUTCOME='" + _obj_Smhr_Committee.COMMITTEE_OUTCOME +
                                        "', @COMMITTEE_STATUS='" + _obj_Smhr_Committee.COMMITTEE_STATUS +
                                        "', @COMMITTEE_STARTDATE='" + _obj_Smhr_Committee.COMMITTEE_STARTDATE +
                                        "', @COMMITTEE_ENDDATE='" + _obj_Smhr_Committee.COMMITTEE_ENDDATE +
                                        "', @COMMITTEE_CREATEDBY= " + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CREATEDBY) +
                                        " , @COMMITTEE_CREATEDDATE='" + _obj_Smhr_Committee.COMMITTEE_CREATEDDATE +
                                        "', @COMMITTEE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_LASTMDFBY) +
                                        " , @COMMITTEE_LASTMDFDATE='" + _obj_Smhr_Committee.COMMITTEE_LASTMDFDATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Update',@COMMITTEE_ID=" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) +
                                        " ,@COMMITTEE_EMP_ID='" + _obj_Smhr_Committee.COMMITTEE_EMP_ID +
                                        "', @COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID +
                                        "', @COMMITTEE_CODE='" + _obj_Smhr_Committee.COMMITTEE_CODE +
                                        "', @COMMITTEE_DESC='" + _obj_Smhr_Committee.COMMITTEE_DESC +
                                        "', @COMMITTEE_REVIEW='" + _obj_Smhr_Committee.COMMITTEE_REVIEW +
                                        "', @COMMITTEE_REASON='" + _obj_Smhr_Committee.COMMITTEE_REASON +
                                        "', @COMMITTEE_OUTCOME='" + _obj_Smhr_Committee.COMMITTEE_OUTCOME +
                                        "', @COMMITTEE_STATUS='" + _obj_Smhr_Committee.COMMITTEE_STATUS +
                                        "', @COMMITTEE_STARTDATE='" + _obj_Smhr_Committee.COMMITTEE_STARTDATE +
                                        "', @COMMITTEE_ENDDATE='" + _obj_Smhr_Committee.COMMITTEE_ENDDATE +
                                        "', @COMMITTEE_CREATEDBY= " + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_CREATEDBY) +
                                        " , @COMMITTEE_CREATEDDATE='" + _obj_Smhr_Committee.COMMITTEE_CREATEDDATE +
                                        "', @COMMITTEE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_LASTMDFBY) +
                                        " , @COMMITTEE_LASTMDFDATE='" + _obj_Smhr_Committee.COMMITTEE_LASTMDFDATE + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'Delete', @COMMITTEE_ID=" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_ID) +
                                        " , @COMMITTEE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Committee.COMMITTEE_LASTMDFBY) +
                                        " , @COMMITTEE_LASTMDFDATE='" + _obj_Smhr_Committee.COMMITTEE_LASTMDFDATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Service Provider

        public static DataTable get_ServiceProvider(SMHR_SERVICEPROVIDER _obj_Smhr_ServiceProvider)
        {
            if (_obj_Smhr_ServiceProvider.OPERATION == operation.Select)
            {
                if (_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'select',@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'select', @SERVICEPROVIDER_ID =" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) + ",@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_ServiceProvider.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Get', @SERVICEPROVIDER_ID ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) + "',@ServiceProvider_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_ServiceProvider.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Select2', @SERVICEPROVIDER_TYPE ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_TYPE) + "',@ServiceProvider_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_ServiceProvider.OPERATION == operation.Check1)
            {
                if (_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check1', @SERVICEPROVIDER_IFMISNUMBER ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_IFMISNUMBER) + "',@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check1', @SERVICEPROVIDER_IFMISNUMBER ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_IFMISNUMBER) + "', @SERVICEPROVIDER_ID =" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) + ",@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_ServiceProvider.OPERATION == operation.Check2)
            {
                if (_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check2', @SERVICEPROVIDER_PINNUMBER ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_PINNUMBER) + "',@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check2', @SERVICEPROVIDER_PINNUMBER ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_PINNUMBER) + "', @SERVICEPROVIDER_ID =" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) + ",@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check', @SERVICEPROVIDER_NAME ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_NAME) + "',@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Check', @SERVICEPROVIDER_NAME ='" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_NAME) + "', @SERVICEPROVIDER_ID =" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) + ",@SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID + "'");
            }
        }

        public static bool set_ServiceProvider(SMHR_SERVICEPROVIDER _obj_Smhr_ServiceProvider)
        {
            bool status = false;
            switch (_obj_Smhr_ServiceProvider.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Insert', @SERVICEPROVIDER_ADDRESS='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ADDRESS +
                                        "', @SERVICEPROVIDER_NAME='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_NAME +
                                        "', @SERVICEPROVIDER_EmailID='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDEREMAILID +
                                        "', @SERVICEPROVIDER_KeyContactPersonName='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_KEYCONTACTPERSONNAME +
                                        "', @SERVICEPROVIDER_CONTACTNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_CONTACTNUMBER +
                                        "', @SERVICEPROVIDER_ALTERNATECONTACTNUMBER1='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ALTERNATECONTACTNUMBER1 +
                                        "', @SERVICEPROVIDER_AlternateContactNumber2='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ALTERNATECONTACTNUMBER2 +
                                        "', @SERVICEPROVIDER_TYPE='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_TYPE +
                                        "', @SERVICEPROVIDER_IFMISNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_IFMISNUMBER +
                                        "', @SERVICEPROVIDER_PINNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_PINNUMBER +
                                        "', @SERVICEPROVIDER_ExpenditureNames='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_EXPENDITURENAMES +
                                        "', @SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID +
                                        "', @SERVICEPROVIDER_CREATEDBY= " + Convert.ToString(_obj_Smhr_ServiceProvider.CREATEDBY) +
                                        " , @SERVICEPROVIDER_CREATEDDATE='" + _obj_Smhr_ServiceProvider.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @SERVICEPROVIDER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_ServiceProvider.LASTMDFBY) +
                                        " , @SERVICEPROVIDER_LASTMDFDATE='" + _obj_Smhr_ServiceProvider.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Update',@SERVICEPROVIDER_ID=" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) +
                                        " , @SERVICEPROVIDER_ADDRESS='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ADDRESS +
                                        "', @SERVICEPROVIDER_NAME='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_NAME +
                                        "', @SERVICEPROVIDER_EmailID='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDEREMAILID +
                                        "', @SERVICEPROVIDER_KeyContactPersonName='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_KEYCONTACTPERSONNAME +
                                        "', @SERVICEPROVIDER_CONTACTNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_CONTACTNUMBER +
                                        "', @SERVICEPROVIDER_ALTERNATECONTACTNUMBER1='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ALTERNATECONTACTNUMBER1 +
                                        "', @SERVICEPROVIDER_AlternateContactNumber2='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_ALTERNATECONTACTNUMBER2 +
                                        "', @SERVICEPROVIDER_TYPE='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_TYPE +
                                        "', @SERVICEPROVIDER_IFMISNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_IFMISNUMBER +
                                        "', @SERVICEPROVIDER_PINNUMBER='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_PINNUMBER +
                                        "', @SERVICEPROVIDER_ExpenditureNames='" + _obj_Smhr_ServiceProvider.SERVICEPROVIDER_EXPENDITURENAMES +
                                        "', @SERVICEPROVIDER_ORGANISATION_ID = '" + _obj_Smhr_ServiceProvider.ORGANISATION_ID +
                                        "', @SERVICEPROVIDER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_ServiceProvider.LASTMDFBY) +
                                        " , @SERVICEPROVIDER_LASTMDFDATE='" + _obj_Smhr_ServiceProvider.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_SERVICEPROVIDER @Operation = 'Delete', @SERVICEPROVIDER_ID=" + Convert.ToString(_obj_Smhr_ServiceProvider.SERVICEPROVIDER_ID) +
                                        " , @SERVICEPROVIDER_LASTMDFBY =" + Convert.ToString(_obj_Smhr_ServiceProvider.LASTMDFBY) +
                                        " , @SERVICEPROVIDER_LASTMDFDATE='" + _obj_Smhr_ServiceProvider.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Employee Assets Transfer

        public static DataTable get_AssetEmpDetails(SMHR_EMPASSETTRANSFER obj_smhr_EmpAssetTransfer)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMP_PAYITEMS @Operation = 'Empty', @SMHR_BUSUNIT = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_BUSINESSUNIT_ID + "',@ORGANISATION_ID='" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "',@EMP_ID='" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_FROMEMP_ID + "'");
        }

        public static DataTable get_EmployeeAssetsTransfer(SMHR_EMPASSETTRANSFER obj_smhr_EmpAssetTransfer)
        {
            //if (obj_smhr_EmpAssetTransfer.OPERATION == operation.Select)
            //{
            //    if (obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ID.ToString() == "0")
            //        return ExecuteQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'select',@EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "'");
            //    else
            return ExecuteQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'select', @EMPASSETDOC_ID =" + Convert.ToString(obj_smhr_EmpAssetTransfer.EMPASSETDOC_ID) + ",@EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "',@EMPASSETTRANSFER_BUSINESSUNIT_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_BUSINESSUNIT_ID + "',@EMPASSETTRANSFER_FROMEMP_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_FROMEMP_ID + "'");
            //}
            //else if (obj_smhr_EmpAssetTransfer.OPERATION == operation.Get)
            //{
            //    return ExecuteQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'Get', @EMPASSETTRANSFER_CODE ='" + Convert.ToString(obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_CODE) + "',@EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "'");
            //}
            //else
            //{
            //    if (obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ID.ToString() == "0")
            //        return ExecuteQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'Check', @EMPASSETTRANSFER_CODE ='" + Convert.ToString(obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_CODE) + "',@EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "'");
            //    else
            //        return ExecuteQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'Check', @EMPASSETTRANSFER_CODE ='" + Convert.ToString(obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_CODE) + "', @EMPASSETTRANSFER_ID =" + Convert.ToString(obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ID) + ",@EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID + "'");
            //}
        }

        public static bool set_EmployeeAssetsTransfer(SMHR_EMPASSETTRANSFER obj_smhr_EmpAssetTransfer)
        {
            bool status = false;
            if (obj_smhr_EmpAssetTransfer.OPERATION == operation.Insert)
            {
                status = ExecuteNonQuery("EXEC USP_SMHR_EMPASSETTRANSFER @Operation = 'Insert', @EMPASSETTRANSFER_BUSINESSUNIT_ID='" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_BUSINESSUNIT_ID +
                                         "', @Asset_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETDOC_ID +
                                         "', @EMPASSETTRANSFER_ORGANISATION_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ORGANISATION_ID +
                                         "', @EMPASSETTRANSFER_FROMEMP_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_FROMEMP_ID +
                                         "', @EMPASSETTRANSFER_TOEMP_ID = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_TOEMP_ID +
                                         "', @AssetDeptID = '" + obj_smhr_EmpAssetTransfer.DEPARTMENT_ID +
                                         "', @EMPASSETTRANSFER_ISSUEDDATE = '" + obj_smhr_EmpAssetTransfer.EMPASSETTRANSFER_ISSUEDDATE +
                                         "', @EMPASSETTRANSFER_CREATEDBY= " + Convert.ToString(obj_smhr_EmpAssetTransfer.CREATEDBY) +
                                         " , @EMPASSETTRANSFER_CREATEDDATE='" + obj_smhr_EmpAssetTransfer.CREATEDDATE.ToString("MM/dd/yyyy") + "'");
                //+ "', @EMPASSETTRANSFER_LASTMDFBY =" + Convert.ToString(obj_smhr_EmpAssetTransfer.LASTMDFBY)
                //+ " , @EMPASSETTRANSFER_LASTMDFDATE='" + obj_smhr_EmpAssetTransfer.LASTMDFDATE.ToString("MM/dd/yyyy") 
            }
            return status;
        }

        #endregion

        #region Master Employee Type

        public static DataTable get_EmployeeType(SMHR_EMPLOYEETYPE _obj_Smhr_EMPLOYEETYPE)
        {
            if (_obj_Smhr_EMPLOYEETYPE.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEETYPE @Operation = 'Get',@EMPLOYEETYPE_ORGANISATION_ID = '" + _obj_Smhr_EMPLOYEETYPE.ORGANISATION_ID + "'" +
                                    ",@EMPLOYEETYPE_CODE='" + _obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_CODE + "'");
            }
            else if (_obj_Smhr_EMPLOYEETYPE.OPERATION == operation.load)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEETYPE @Operation = 'LOAD', @EMPLOYEETYPE_ORGANISATION_ID = '" + _obj_Smhr_EMPLOYEETYPE.ORGANISATION_ID + "'");
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEETYPE @Operation = 'select',@EMPLOYEETYPE_ORGANISATION_ID = '" + _obj_Smhr_EMPLOYEETYPE.ORGANISATION_ID + "'" +
                                    ",@EMPLOYEETYPE_ID=" + _obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_ID + "");
            }
        }

        public static bool set_EmployeeType(SMHR_EMPLOYEETYPE _obj_Smhr_EMPLOYEETYPE)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEETYPE @Operation = 'Update',@EMPLOYEETYPE_ID=" + Convert.ToString(_obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_ID) +
                                " , @EMPLOYEETYPE_PREFIX='" + _obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_PREFIX +
                                "', @EMPLOYEETYPE_DESC='" + _obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_DESC +
                                "', @EMPLOYEETYPE_ORGANISATION_ID = '" + _obj_Smhr_EMPLOYEETYPE.EMPLOYEETYPE_ORGANISATION_ID +
                                "', @EMPLOYEETYPE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EMPLOYEETYPE.LASTMDFBY) +
                                " , @EMPLOYEETYPE_LASTMDFDATE='" + _obj_Smhr_EMPLOYEETYPE.LASTMDFDATE.ToString("MM/dd/yyyy") +
                                "', @EmployeeTypeAge ='" + _obj_Smhr_EMPLOYEETYPE.EmployeeTypeAge + "'"))
                status = true;
            else
                status = false;
            return status;
        }

        #endregion

        #region Department Heads Mapping

        //  Added By Ragha Sudha on 5th sep 2013

        public static DataTable get_DepartmentHeads(SMHR_DEPARTMENTHEADS _obj_Smhr_DEPARTMENTHEADS)
        {
            return ExecuteQuery("EXEC USP_SMHR_DEPARTMENTHEADS @Operation = 'select',@DEPTHEAD_BU_ID=" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_BU_ID);
        }

        public static bool set_DepartmentHeads(SMHR_DEPARTMENTHEADS _obj_Smhr_DEPARTMENTHEADS)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_SMHR_DEPARTMENTHEADS @Operation = 'Insert',@DEPTHEAD_BU_ID=" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_BU_ID +
                                ", @DEPTHEAD_DEPT_ID=" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_DEPT_ID +
                                ", @DEPTHEAD_EMP_ID=" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_EMP_ID +
                                ", @DEPTHEAD_SUBHEAD_ID=" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_SUBHEAD_ID +
                                ", @DEPTHEAD_CREATEDBY = " + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_CREATEDBY +
                                ", @DEPTHEAD_CREATEDDATE='" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_CREATEDDATE.ToString("MM/dd/yyyy") +
                                "',@DEPTHEAD_LASTMDFBY =" + Convert.ToString(_obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_LASTMDFBY) +
                                ", @DEPTHEAD_LASTMDFDATE='" + _obj_Smhr_DEPARTMENTHEADS.DEPTHEAD_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                status = true;
            else
                status = false;
            return status;
        }

        //   public static DataTable get_GETRESIGNEDEMPLOYEE(int Dept_id)
        public static DataTable get_GETRESIGNEDEMPLOYEE(SMHR_LOGININFO _obj_smhr_logininfo)
        {
            //return ExecuteQuery("EXEC USP_GETRESIGNEDEMPLOYEE @DEPT_ID = " + Dept_id);
            return ExecuteQuery("EXEC USP_GETRESIGNEDEMPLOYEE @LOGIN_EMP_ID=" + _obj_smhr_logininfo.LOGIN_EMP_ID + ",@EMP_ORGANISATION_ID=" + _obj_smhr_logininfo.LOGIN_ORGANISATION_ID + ",@EMP_BUSINESSUNIT_ID=" + _obj_smhr_logininfo.BUID);
        }

        public static DataTable get_AssetMasterDetails(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_ASSETS_ASSETDOC',@ASSET_DEPARTMENT_ID=" + _obj_smhr_AssetMaster.ASSET_DEPARTMENT_ID);
        }

        //public static DataTable get_EmpAssets(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        //{
        //    return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_EMPASSETS',@ASSET_DEPARTMENT_ID=" + _obj_smhr_AssetMaster.ASSET_DEPARTMENT_ID);
        //}
        public static DataTable get_EmpAssets(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_UNASSIGNEDASSETS',@ASSET_DEPARTMENT_ID=" + _obj_smhr_AssetMaster.ASSET_DEPARTMENT_ID + ",@DEPARTMENT_ORG_ID=" + _obj_smhr_AssetMaster.ORGANISATION_ID);
        }

        public static DataTable check_AssetExists(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'ASSETEXISTS', @ASSET_NAME= '" + _obj_smhr_AssetMaster.ASSET_NAME +
                                "',@ASSET_DEPARTMENT_ID=" + _obj_smhr_AssetMaster.ASSET_DEPARTMENT_ID + ",@ASSET_DESCRIPTION='" + _obj_smhr_AssetMaster.ASSET_DESCRIPTION + "'");
        }

        public static DataTable check_AssetCodeExists(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'ASSETCODEEXISTS', @ASSET_NAME= '" + _obj_smhr_AssetMaster.ASSET_NAME + "',@DEPARTMENT_ORG_ID=" + _obj_smhr_AssetMaster.ORGANISATION_ID);
        }

        public static DataTable check_AssetAllocationToEmployees(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            //    return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_EMPASSETS', @ASSET_DEPARTMENT_ID= '" + _obj_smhr_AssetMaster.ASSET_DEPARTMENT_ID + "'");
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_EMPASSETS',@ASSET_ID= '" + _obj_smhr_AssetMaster.ASSET_ID + "'");
        }

        public static DataTable get_AssetMaster_Details(SMHR_ASSET_MASTER _obj_SMHR_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'ASSET_MASTER_FORM',@DEPARTMENT_ORG_ID=" + _obj_SMHR_AssetMaster.ORGANISATION_ID + ",@EMP_LOGIN_ID=" + _obj_SMHR_AssetMaster.LOGIN_ID);
        }

        public static bool set_AssetDetails(SMHR_ASSET_MASTER _obj_Smhr_AssetMaster)
        {
            bool status = false;
            switch (_obj_Smhr_AssetMaster.OPERATION)
            {
                case operation.Insert:

                    if (ExecuteNonQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'Insert',@ASSET_NAME='" + _obj_Smhr_AssetMaster.ASSET_NAME +
                                        "' , @ASSET_DESCRIPTION='" + _obj_Smhr_AssetMaster.ASSET_DESCRIPTION +
                                        "', @ASSET_IS_ACTIVE='" + _obj_Smhr_AssetMaster.ASSET_IS_ACTIVE +
                                        "', @ASSET_DEPARTMENT_ID = " + _obj_Smhr_AssetMaster.ASSET_DEPARTMENT_ID +
                                        ", @ASSET_CREATED_BY = " + _obj_Smhr_AssetMaster.ASSET_CREATED_BY +
                                        ", @ASSET_CREATED_DATE='" + _obj_Smhr_AssetMaster.ASSET_CREATED_DATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'Update',@ASSET_NAME='" + _obj_Smhr_AssetMaster.ASSET_NAME +
                                        "', @ASSET_DESCRIPTION='" + _obj_Smhr_AssetMaster.ASSET_DESCRIPTION +
                                        "', @ASSET_IS_ACTIVE='" + _obj_Smhr_AssetMaster.ASSET_IS_ACTIVE +
                                        "', @ASSET_DEPARTMENT_ID = " + _obj_Smhr_AssetMaster.ASSET_DEPARTMENT_ID +
                                        ", @ASSET_MODIFIED_BY = " + _obj_Smhr_AssetMaster.ASSET_MODIFIED_BY +
                                        ", @ASSET_ID=" + _obj_Smhr_AssetMaster.ASSET_ID +
                                        ", @ASSET_MODIFIED_DATE='" + _obj_Smhr_AssetMaster.ASSET_MODIFIED_DATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
            }
            return status;
        }

        public static DataTable get_AssetMasterDetailsByAsset_ID(SMHR_ASSET_MASTER _obj_smhr_AssetMaster)
        {
            return ExecuteQuery("EXEC USP_SMHR_ASSET_MASTER @Operation = 'GET_ASSETDETAILS',@DEPARTMENT_ORG_ID=" + _obj_smhr_AssetMaster.DEPARTMENT_ORG_ID +
                                ", @ASSET_ID =" + _obj_smhr_AssetMaster.ASSET_ID);
        }

        public static DataTable get_EmployeeAssets(SMHR_EMPASSETDOC _obj_smhr_AssetDoc)
        {
            return ExecuteQuery("EXEC USP_GET_EMPLOYEEASSETS @EMPASSETDOC_EMP_ID = " + _obj_smhr_AssetDoc.EMPASSETDOC_EMP_ID +
                                ", @Emp_Dept_ID=" + _obj_smhr_AssetDoc.EMPASSETDOC_DEPT_ID);
        }

        public static DataTable get_ResignedEmployeeDetails(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            //return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'GET_RESIGNEDEMPLOYEEDETAILS',@EMP_ID=" + _obj_smhr_employee.EMP_ID);
            if (_obj_smhr_employee.OPERATION == operation.Select_Dept)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Select_Dept',@EMP_ID=" + _obj_smhr_employee.EMP_ID);
            }
            else if (_obj_smhr_employee.OPERATION == operation.Select_DeptHead)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEE @Operation = 'Select_DeptHead',@EMP_ID=" + _obj_smhr_employee.EMP_ID);
            }
            else
                return null;
        }

        public static bool set_Assets_Clearance(SMHR_EMP_ASSET_CLEARANCE _obj_Smhr_EmpAsset_Clearance, SMHR_EMPLOYEE _obj_Smhr_Employee, SMHR_APPLICANT _obj_smhr_Applicant)
        {
            bool status = false;
            if (ExecuteNonQuery("EXEC USP_EMP_ASSET_CLEARANCE @APPLICANT_ADDRESS='" + _obj_smhr_Applicant.APPLICANT_ADDRESS +
                                "', @EMP_ASSET_CLEARANCE_EMP_ID=" + _obj_Smhr_Employee.EMP_ID +
                                ", @EMP_MOBILENO='" + _obj_Smhr_Employee.EMP_MOBILENO +
                                "',@EMP_ASSET_CLEARANCE_RECEIEVED_BY =" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_RECEIEVED_BY +
                                ", @EMP_ASSET_CLEARANCE_ASSET_ID=" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_ASSET_ID +
                                ", @EMP_ASSET_CLEARANCE_DEPT_ID=" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_DEPT_ID +
                                ", @EMP_ASSET_CLEARANCE_AMOUNT=" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_AMOUNT +
                                ", @EMP_ASSET_CLEARANCE_REMARKS='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_REMARKS +
                                "',@EMP_ASSET_CLEARANCE_DEPTHEADREMARKS='" + _obj_Smhr_EmpAsset_Clearance._EMP_ASSET_CLEARANCE_DEPTHEADREMARKS +
                                "',@EMP_ASSET_CLEARANCE_RECEIVED_DATE='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_RECEIVED_DATE +
                                "',@EMP_ASSET_CLEARANCE_CREATEDBY='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_CREATEDBY +
                                "',@EMP_ASSET_CLEARANCE_CREATEDDATE='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_CREATEDDATE +
                                "',@EMP_ASSET_CLEARANCE_LSTMFDBY='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_LSTMFDBY +
                                "',@EMP_ASSET_CLEARANCE_LSTMFDDATE='" + _obj_Smhr_EmpAsset_Clearance.EMP_ASSET_CLEARANCE_LSTMFDDATE + "'"
                                ))

                status = true;
            else
                status = false;
            return status;
        }

        #endregion

        #region Employee Grades

        public static DataTable get_SlabPeriods(SMHR_PERIOD _obj_smhr_period)
        {
            if (_obj_smhr_period.OPERATION == operation.Select)
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'select', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + "");
            }
            else if (_obj_smhr_period.OPERATION == operation.CHECKSLABPERIODS)
            {
                return ExecuteQuery(" EXEC USP_SMHR_PERIOD @Operation = 'CHECKSLABPERIODS', @PERIOD_ORGANISATION_ID =" + Convert.ToInt32(_obj_smhr_period.ORGANISATION_ID) + ",@FROM_PERIODID=" + _obj_smhr_period.FROM_PERIODID + "");
            }
            else
            {
                return new DataTable();
            }
        }

        public static DataTable GET_FIN_PERIOD(SMHR_PERIOD _obj_smhr_period)
        {
            return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation = 'GET_FIN_PERIOD', @PERIOD_ORGANISATION_ID = " + _obj_smhr_period.ORGANISATION_ID);
        }

        public static DataTable GetEmployeeGrade(SMHR_EMPLOYEEGRADE _obj_Smhr_EmployeeGrade)
        {
            try
            {
                if (_obj_Smhr_EmployeeGrade.OPERATION == operation.EmployeeGrade)
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'GET_ALL_GRADES', @EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "'");
                }
                else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Employeegrades)
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'GET_LATEST_GRADES', @EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "'");
                }
                else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Select1)
                {
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE @OPERATION = 'GET_GRADE_STATUS', @EMPLOYEEGRADE_ID = " + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID + ", @EMPLOYEEGRADE_ORGANISATION_ID = " + _obj_Smhr_EmployeeGrade.ORGANISATION_ID);
                }
                else
                {
                    return new DataTable();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataSet get_EmployeeGrade(SMHR_EMPLOYEEGRADE _obj_Smhr_EmployeeGrade)
        {
            if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Select)
            {
                if (_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID.ToString() == "0")
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'select',@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "'");
                else
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'select', @EMPLOYEEGRADE_ID =" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) + ",@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@PERIOD_ID = '" + _obj_Smhr_EmployeeGrade.PERIOD_ID + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Delete)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Rank',@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Delete1)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Rank',@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Get)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Get', @EMPLOYEEGRADE_CODE ='" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE) + "',@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.EmployeeSlabs)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'EMPLOYEESLABS', @EMPLOYEEGRADE_ID =" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) + ",@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@PERIOD_ID = '" + _obj_Smhr_EmployeeGrade.PERIOD_ID + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.GETGRADE)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'GETGRADE', @EMPLOYEEGRADE_ID =" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) + ",@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@PERIOD_ID = '" + _obj_Smhr_EmployeeGrade.PERIOD_ID + "',@EMPLOYEEGRADE_CODE = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE + "'");
            }
            else
            {
                if (_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID.ToString() == "0")
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Check', @EMPLOYEEGRADE_CODE ='" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE) + "',@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK + "'");
                else
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Check', @EMPLOYEEGRADE_CODE ='" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE) + "', @EMPLOYEEGRADE_ID =" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) + ",@EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK + "'");
            }
        }

        public static bool Set_EmployeeGrade(SMHR_EMPLOYEEGRADE _obj_Smhr_EmployeeGrade)
        {
            bool status = false;
            switch (_obj_Smhr_EmployeeGrade.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Insert', @EMPLOYEEGRADE_CODE='" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE +
                                        "', @EMPLOYEEGRADE_NAME='" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_NAME +
                                        "', @EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID +
                                        "', @EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK +
                                        "', @EMPLOYEEGRADE_CREATEDBY= " + Convert.ToString(_obj_Smhr_EmployeeGrade.CREATEDBY) +
                                        " , @EMPLOYEEGRADE_CREATEDDATE='" + _obj_Smhr_EmployeeGrade.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @EMPLOYEEGRADE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmployeeGrade.LASTMDFBY) +
                                        " , @EMPLOYEEGRADE_LASTMDFDATE='" + _obj_Smhr_EmployeeGrade.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Update',@EMPLOYEEGRADE_ID=" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) +
                                        " , @EMPLOYEEGRADE_CODE='" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_CODE +
                                        "', @EMPLOYEEGRADE_NAME='" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_NAME +
                                        "', @EMPLOYEEGRADE_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID +
                                        "', @EMPLOYEEGRADE_RANK = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_RANK +
                                        "', @EMPLOYEEGRADE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmployeeGrade.LASTMDFBY) +
                                        " , @EMPLOYEEGRADE_LASTMDFDATE='" + _obj_Smhr_EmployeeGrade.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEGRADE @Operation = 'Delete', @EMPLOYEEGRADE_ID=" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_ID) +
                                        " , @EMPLOYEEGRADE_LASTMDFBY =" + Convert.ToString(_obj_Smhr_EmployeeGrade.LASTMDFBY) +
                                        " , @EMPLOYEEGRADE_LASTMDFDATE='" + _obj_Smhr_EmployeeGrade.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        public static bool IsEstablishMentsUpdated(SMHR_POSITIONS _obj_Smhr_Positions)
        {
            DataTable dt = ExecuteQuery("EXEC USP_SMHR_POSITIONS @Operation = 'GET',@ESTABLISHMENTS_PERIODID = '" + _obj_Smhr_Positions.POSITIN_PERIOD_ID + "',@POSITIONS_ID='" + _obj_Smhr_Positions.POSITIONS_ID + "'");
            if (Convert.ToInt32(dt.Rows[0][0]) > 0)
                return true;
            else
                return false;
        }

        public static DataTable IscurrentFinPeriod(SMHR_PERIOD _obj_Smhr_Positions)
        {
            return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation = 'GET',@PERIOD_ORGANISATION_ID = '" + _obj_Smhr_Positions.ORGANISATION_ID + "',@PERIOD_ID='" + _obj_Smhr_Positions.PERIOD_ID + "'");
        }

        public static DataSet GetEmployeeFilterDetails(int OrganisationID, int? BusinessUnitID, int? DirectorateID, int? DepartmentID)
        {
            if (OrganisationID != null && BusinessUnitID != null && DirectorateID != null && DepartmentID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "',@DirectorateID='" + DirectorateID + "',@DepartmentID='" + DepartmentID + "'");
            }
            else if (OrganisationID != null && BusinessUnitID != null && DirectorateID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "',@DirectorateID='" + DirectorateID + "'");
            }
            else if (OrganisationID != null && BusinessUnitID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "'");
            }
            else if (OrganisationID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "'");
            }
            else
                return null;
        }

        public static DataSet GetPensionEmployeeFilterDtls(int OrganisationID, int? BusinessUnitID, int? DirectorateID, int? DepartmentID, operation status)
        {
            if (OrganisationID != null && BusinessUnitID != null && DirectorateID != null && DepartmentID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "',@DirectorateID='" + DirectorateID + "',@DepartmentID='" + DepartmentID + "',@OPERATION='" + status + "'");
            }
            else if (OrganisationID != null && BusinessUnitID != null && DirectorateID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "',@DirectorateID='" + DirectorateID + "',@OPERATION='" + status + "'");
            }
            else if (OrganisationID != null && BusinessUnitID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@BusinessUnitID='" + BusinessUnitID + "',@OPERATION='" + status + "'");
            }
            else if (OrganisationID != null)
            {
                return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMPLOYEEFILTER @OrganisationID='" + OrganisationID + "',@OPERATION='" + status + "'");
            }
            else
                return null;
        }

        #region Medical

        public static DataTable get_Expenditure(SMHR_EXPENDITURE _obj_smhr_expend)
        {
            if (_obj_smhr_expend.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Select',@EXPENDITURE_ORG_ID='" + _obj_smhr_expend.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_expend.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Select2',@EXPENDITURE_ORG_ID='" + _obj_smhr_expend.ORGANISATION_ID + "'");
            }
            else if (_obj_smhr_expend.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Get',@EXPENDITUREID='" + _obj_smhr_expend.EXPENDITURE_ID + "'");
            }
            else if (_obj_smhr_expend.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Check',@EXPENDITURENAME='" + _obj_smhr_expend.EXPENDITURE_NAME + "',@EXPENDITURE_ORG_ID='" + _obj_smhr_expend.ORGANISATION_ID + "'");
            }
            else
                return null;
        }

        public static bool set_Expenditure(SMHR_EXPENDITURE _obj_smhr_expend)
        {
            if (_obj_smhr_expend.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Insert' " +
                                       " ,@EXPENDITURENAME = '" + _obj_smhr_expend.EXPENDITURE_NAME +
                                       "' ,@EXPENDITURE_ORG_ID = '" + _obj_smhr_expend.ORGANISATION_ID +
                                       "',@EXPENDITUREDESC='" + _obj_smhr_expend.EXPENDITURE_DESC + "'");
            }
            else if (_obj_smhr_expend.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EXPENDITURE @OPERATION = 'Update', @EXPENDITUREDESC='" + _obj_smhr_expend.EXPENDITURE_DESC + "',@EXPENDITUREID='" + _obj_smhr_expend.EXPENDITURE_ID + "'");
            }
            else
                return false;
        }

        #endregion

        #region Mission About Us

        public static DataTable get_MISSION_ABOUTUS(SMHR_MISSION_ABOUTUS _obj_Smhr_MISSION_ABOUTUS)
        {
            if (_obj_Smhr_MISSION_ABOUTUS.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'select',@MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.ORGANISATION_ID + "'");
                //if (_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ID.ToString() == "0")
                //    return ExecuteQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'select',@MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.ORGANISATION_ID + "'");
                //else
                //    return ExecuteQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'select', @MISSION_ABOUTUS_ID =" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ID) + ",@MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.ORGANISATION_ID + "'");
            }
            else
                return new DataTable();
            //else
            //{
            //    if (_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ID.ToString() == "0")
            //        return ExecuteQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'Check', @MISSION_ABOUTUS_CODE ='" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_CODE) + "',@MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.ORGANISATION_ID + "'");
            //    else
            //        return ExecuteQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'Check', @MISSION_ABOUTUS_CODE ='" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_CODE) + "', @MISSION_ABOUTUS_ID =" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ID) + ",@MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.ORGANISATION_ID + "'");
            //}
        }

        public static bool set_MISSION_ABOUTUS(SMHR_MISSION_ABOUTUS _obj_Smhr_MISSION_ABOUTUS)
        {
            bool status = false;
            switch (_obj_Smhr_MISSION_ABOUTUS.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'Insert', @MISSION_ABOUTUS_MISSIONDESC='" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_MISSIONDESC +
                                        "', @MISSION_ABOUTUS_ABOUTUSDESC='" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ABOUTUSDESC +
                                        "', @MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ORGANISATION_ID +
                                        "', @MISSION_ABOUTUS_ISASSEMBLY = '" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ISASSEMBLY
                                        //+ "', @MISSION_ABOUTUS_ISSENATE = '" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ISSENATE
                                        +
                                        "', @MISSION_ABOUTUS_CREATEDBY= " + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.CREATEDBY) +
                                        " , @MISSION_ABOUTUS_CREATEDDATE='" + _obj_Smhr_MISSION_ABOUTUS.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @MISSION_ABOUTUS_LASTMDFBY =" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.LASTMDFBY) +
                                        " , @MISSION_ABOUTUS_LASTMDFDATE='" + _obj_Smhr_MISSION_ABOUTUS.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_MISSION_ABOUTUS @Operation = 'Update',@MISSION_ABOUTUS_ID=" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ID) +
                                        " , @MISSION_ABOUTUS_MISSIONDESC='" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_MISSIONDESC +
                                        "', @MISSION_ABOUTUS_ABOUTUSDESC='" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ABOUTUSDESC +
                                        "', @MISSION_ABOUTUS_ORGANISATION_ID = '" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ORGANISATION_ID +
                                        "', @MISSION_ABOUTUS_ISASSEMBLY = '" + _obj_Smhr_MISSION_ABOUTUS.MISSION_ABOUTUS_ISASSEMBLY +
                                        "', @MISSION_ABOUTUS_LASTMDFBY =" + Convert.ToString(_obj_Smhr_MISSION_ABOUTUS.LASTMDFBY) +
                                        " , @MISSION_ABOUTUS_LASTMDFDATE='" + _obj_Smhr_MISSION_ABOUTUS.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        public static bool set_MedicalBenfit(SMHR_MEDICALBENFIT smhr_MedicalBenfit)
        {
            bool status = false;
            switch (smhr_MedicalBenfit.OPERATION)
            {
                case operation.Insert:
                    List<SqlParameter> lstSqlparams = new List<SqlParameter>();
                    lstSqlparams.Add(new SqlParameter("@OPERATION", "Insert"));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_ID", smhr_MedicalBenfit.ID));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_ORG_ID", smhr_MedicalBenfit.OrgID));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_SCALE_ID", smhr_MedicalBenfit.ScaleID));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_EXPEN_ID", smhr_MedicalBenfit.ExpendID));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_FIN_PERIOD_ID", smhr_MedicalBenfit.FinancialPeriodID));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_MAXAMOUNT", smhr_MedicalBenfit.MaxAmount));
                    lstSqlparams.Add(new SqlParameter("@GradeWiseAmount", smhr_MedicalBenfit.GradeWiseAmount));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_CREATEDBY", smhr_MedicalBenfit.MEDICALBENFIT_CREATEDBY));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_CREATEDDATE", smhr_MedicalBenfit.MEDICALBENFIT_CREATEDDATE));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_MDFBY", smhr_MedicalBenfit.MEDICALBENFIT_MDFBY));
                    lstSqlparams.Add(new SqlParameter("@MEDICALBENFIT_MDFDATE", smhr_MedicalBenfit.MEDICALBENFIT_MDFDATE));
                    int result = ExecuteNonQuery("USP_SMHR_MEDICALBENFIT", lstSqlparams.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_MedicalBenfit(SMHR_MEDICALBENFIT smhr_MedicalBenfit)
        {
            if (smhr_MedicalBenfit.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICALBENFIT @OPERATION = 'Select',@MEDICALBENFIT_ORG_ID='" + smhr_MedicalBenfit.OrgID + "'");
            }
            else if (smhr_MedicalBenfit.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICALBENFIT @OPERATION = 'Check',@MEDICALBENFIT_ID='" + smhr_MedicalBenfit.ID + "'");
            }
            else if (smhr_MedicalBenfit.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICALBENFIT @OPERATION = 'GET',@MEDICALBENFIT_ORG_ID='" + smhr_MedicalBenfit.OrgID + "',@MEDICALBENFIT_FIN_PERIOD_ID='" + smhr_MedicalBenfit.FinancialPeriodID + "'");
                //return ExecuteQuery("EXEC USP_SMHR_MEDICALBENFIT @OPERATION = 'GET',@MEDICALBENFIT_ORG_ID='" + smhr_MedicalBenfit.OrgID + "',@MEDICALBENFIT_EXPEN_ID='" + smhr_MedicalBenfit.ExpendID + "',@MEDICALBENFIT_FIN_PERIOD_ID='" + smhr_MedicalBenfit.FinancialPeriodID + "'");
            }
            else
                return null;
        }

        #region Employee Grade Slabs

        //public static DataSet get_EMPLOYEEGRADE_SLABS(SMHR_EMPLOYEEGRADE_SLAB _obj_Smhr_EMPLOYEEGRADE_SLAB)
        //{
        //    if (_obj_Smhr_EMPLOYEEGRADE_SLAB.OPERATION == operation.Select)
        //    {
        //        if (_obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID.ToString() == "0")
        //            //return ExecuteQuery("EXEC USP_SMHR_COMMITTEE @Operation = 'select',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
        //            return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_COMMITTEE @Operation = 'select',@COMMITTEE_ORGANISATION_ID = '" + _obj_Smhr_Committee.COMMITTEE_ORGANISATION_ID + "'");
        //    }
        //}

        public static bool Set_EMPLOYEEGRADE_SLABS(SMHR_EMPLOYEEGRADE_SLAB _obj_Smhr_EMPLOYEEGRADE_SLAB)
        {
            bool status = false;
            int result = 0;
            List<SqlParameter> lstParameters = new List<SqlParameter>();
            switch (_obj_Smhr_EMPLOYEEGRADE_SLAB.OPERATION)
            {
                case operation.Insert:

                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ORGANISATION_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_PERIOD_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ISFINALIZED", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ISFINALIZED));
                    lstParameters.Add(new SqlParameter("@GRADESLABS", _obj_Smhr_EMPLOYEEGRADE_SLAB.GRADESLABS));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDBY", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDBY));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDDATE", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDDATE));
                    lstParameters.Add(new SqlParameter("@Operation", "Insert"));

                    result = ExecuteNonQuery("USP_SMHR_EMPLOYEEGRADE_SLAB", lstParameters.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Update:

                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ORGANISATION_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_PERIOD_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ISFINALIZED", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ISFINALIZED));
                    lstParameters.Add(new SqlParameter("@GRADESLABS", _obj_Smhr_EMPLOYEEGRADE_SLAB.GRADESLABS));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDBY", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDBY));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDDATE", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDDATE));
                    lstParameters.Add(new SqlParameter("@Operation", "Update"));

                    result = ExecuteNonQuery("USP_SMHR_EMPLOYEEGRADE_SLAB", lstParameters.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Finalized:

                    lstParameters = new List<SqlParameter>();

                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ORGANISATION_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_PERIOD_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ISFINALIZED", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ISFINALIZED));
                    lstParameters.Add(new SqlParameter("@GRADESLABS", _obj_Smhr_EMPLOYEEGRADE_SLAB.GRADESLABS));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDBY", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDBY));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDDATE", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDDATE));
                    lstParameters.Add(new SqlParameter("@Operation", "Finalized"));

                    result = ExecuteNonQuery("USP_SMHR_EMPLOYEEGRADE_SLAB", lstParameters.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;

                    break;
                case operation.CopySlabs:

                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ORGANISATION_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_PERIOD_ID", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_ISFINALIZED", _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ISFINALIZED));
                    lstParameters.Add(new SqlParameter("@GRADESLABS", _obj_Smhr_EMPLOYEEGRADE_SLAB.GRADESLABS));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDBY", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDBY));
                    lstParameters.Add(new SqlParameter("@EMPLOYEEGRADE_SLAB_CREATEDDATE", _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDDATE));
                    lstParameters.Add(new SqlParameter("@Operation", "COPYSLAB"));

                    result = ExecuteNonQuery("USP_SMHR_EMPLOYEEGRADE_SLAB", lstParameters.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;
                    break;
                case operation.CHECKDUPLICATE:
                    DataTable dtData = ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @OPERATION = 'CHECKDUPLICATE',@EMPLOYEEGRADE_SLAB_ORGANISATION_ID='" +
                                                    _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID +
                                                    "',@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID='" + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID +
                                                    "',@EMPLOYEEGRADE_SLAB_PERIOD_ID='" + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID + "'");
                    if (dtData.Rows.Count > 0)
                    {
                        if (dtData.Rows[0][0].ToString() != "0")
                            status = true;
                        else
                            status = false;
                    }
                    else
                        return status = false;
                    break;

                case operation.Insert1:
                    ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @OPERATION = 'Insert1',@EMPLOYEEGRADE_SLAB_ORGANISATION_ID='" +
                            _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ORGANISATION_ID +
                            "',@EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE='" + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_CODE +
                            "',@EMPLOYEEGRADE_SLAB_PERIOD_ID='" + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_PERIOD_ID + "'" +
                            ",@EMPLOYEEGRADE_SLAB_SRNO = " + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_SRNO +
                            ",@EMPLOYEEGRADE_SLAB_ISFINALIZED = " + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_ISFINALIZED +
                            ",@EMPLOYEEGRADE_SLAB_AMOUNT =" + _obj_Smhr_EMPLOYEEGRADE_SLAB.EMPLOYEEGRADE_SLAB_AMOUNT +
                            ",@EMPLOYEEGRADE_SLAB_CREATEDBY = " + _obj_Smhr_EMPLOYEEGRADE_SLAB.CREATEDBY);
                    status = true;
                    break;


                default:
                    break;
            }
            return status;
        }

        public static DataTable GetEmployeeGradeSlab(int empGradeSlabID)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @OPERATION = 'GET', @EMPLOYEEGRADE_SLAB_ID = " + empGradeSlabID);
        }

        public static DataTable GetEmployeeSlabsCount(int empGradeSlabID, int prdID, int orgID)
        {
            return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @OPERATION = 'CHECK', @EMPLOYEEGRADE_SLAB_ID = " + empGradeSlabID +
                                    ", @EMPLOYEEGRADE_SLAB_PERIOD_ID = " + prdID + ",@EMPLOYEEGRADE_SLAB_ORGANISATION_ID=" + orgID);
        }

        #endregion

        public static bool set_MedicalClaim(SMHR_MedicalClaim _obj_Smhr_MedicalClaim)
        {
            if (_obj_Smhr_MedicalClaim.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Insert', " +
                                       " @EMPID = '" + _obj_Smhr_MedicalClaim.EmpID +
                                       "',@SELF_FAMILY='" + _obj_Smhr_MedicalClaim.CliamType +
                                       "',@BENFICIARYSERIALID='" + _obj_Smhr_MedicalClaim.BenficiarySerialId +
                                       "',@BENFICIARYNAME='" + _obj_Smhr_MedicalClaim.BenficiaryName +
                                       "',@RELATIONID='" + _obj_Smhr_MedicalClaim.RelationID +
                                       "',@SERVICEPROVIDERNAME='" + _obj_Smhr_MedicalClaim.ServiceProviderName +
                                       "',@EXPENDITUREID='" + _obj_Smhr_MedicalClaim.ExpenditureID +
                                       "',@AMOUNT='" + _obj_Smhr_MedicalClaim.Amount +
                                       "',@INVOICEID='" + _obj_Smhr_MedicalClaim.InvoiceID +
                                       "',@INVOICEDOCUMENT='" + _obj_Smhr_MedicalClaim.InvoiceDocument +
                                       "',@ORGANISATIONID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID +
                                       "',@CREATEDBY='" + _obj_Smhr_MedicalClaim.CREATEDBY +
                                       "',@DATE='" + _obj_Smhr_MedicalClaim.InvoiceDate +
                                       "',@SERVICEPROVIDERID =" + _obj_Smhr_MedicalClaim.SERVICEPROVIDERID +
                                       " ,@MED_FINAL_AMNT=" + _obj_Smhr_MedicalClaim.MED_FINAL_AMNT +
                                       " ,@FIN_PRD_ID=" + _obj_Smhr_MedicalClaim.FIN_PRD_ID +
                                       " ,@OTHER_EXPND_NAME='" + _obj_Smhr_MedicalClaim.OTHER_EXPND_NAME +
                                       "',@MED_CURR_ID=" + _obj_Smhr_MedicalClaim.MED_CURR_ID +
                                       ",@MED_CURR_AMT=" + _obj_Smhr_MedicalClaim.MED_CURR_AMT +
                                       ",@MED_CONVERSION_AMT=" + _obj_Smhr_MedicalClaim.MED_CONVERSION_AMT +
                                       ",@MED_ISRULEID=" + _obj_Smhr_MedicalClaim.MED_ISRULEID + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'update', " +
                                       " @CLAIMID = '" + _obj_Smhr_MedicalClaim.ClaimID +
                                       "',@SERVICEPROVIDERNAME='" + _obj_Smhr_MedicalClaim.ServiceProviderName +
                                       "',@EXPENDITUREID='" + _obj_Smhr_MedicalClaim.ExpenditureID +
                                       "',@AMOUNT='" + _obj_Smhr_MedicalClaim.Amount +
                                       "',@INVOICEDOCUMENT='" + _obj_Smhr_MedicalClaim.InvoiceDocument +
                                       "',@DATE='" + _obj_Smhr_MedicalClaim.InvoiceDate +
                                       "',@SERVICEPROVIDERID =" + _obj_Smhr_MedicalClaim.SERVICEPROVIDERID +
                                       " ,@MED_FINAL_AMNT=" + _obj_Smhr_MedicalClaim.MED_FINAL_AMNT +
                                       ",@MED_CURR_ID=" + _obj_Smhr_MedicalClaim.MED_CURR_ID +
                                       ",@MED_CURR_AMT=" + _obj_Smhr_MedicalClaim.MED_CURR_AMT
                                       + ",@MED_CONVERSION_AMT=" + _obj_Smhr_MedicalClaim.MED_CONVERSION_AMT +
                                       ",@MED_ISRULEID=" + _obj_Smhr_MedicalClaim.MED_ISRULEID + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.MEDAPPROVE)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'MEDAPPROVE', " +
                                        " @EMPID = " + _obj_Smhr_MedicalClaim.EmpID +
                                       ", @CLAIMID = " + _obj_Smhr_MedicalClaim.ClaimID + ",@MED_CURR_ID=" + _obj_Smhr_MedicalClaim.MED_CURR_ID +
                                       ",@MED_CURR_AMT=" + _obj_Smhr_MedicalClaim.MED_CURR_AMT
                                       + ",@MED_CONVERSION_AMT=" + _obj_Smhr_MedicalClaim.MED_CONVERSION_AMT +
                                       ",@MED_CONFIRMEDBY=" + _obj_Smhr_MedicalClaim.MED_CONFIRMEDBY + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.MEDFINALIZE)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'MEDFINALIZE', " +
                                        " @EMPID = " + _obj_Smhr_MedicalClaim.EmpID +
                                       ", @CLAIMID = " + _obj_Smhr_MedicalClaim.ClaimID + ",@MED_CURR_ID=" + _obj_Smhr_MedicalClaim.MED_CURR_ID +
                                       ",@MED_CURR_AMT=" + _obj_Smhr_MedicalClaim.MED_CURR_AMT
                                       + ",@MED_CONVERSION_AMT=" + _obj_Smhr_MedicalClaim.MED_CONVERSION_AMT +
                                       ",@MED_APPROVEDBY=" + _obj_Smhr_MedicalClaim.MED_APPROVEDBY + "");
            }
            else
                return false;
        }

        public static DataTable get_MedicalClaim(SMHR_MedicalClaim _obj_Smhr_MedicalClaim)
        {
            DataTable dt = new DataTable();
            if (_obj_Smhr_MedicalClaim.OPERATION == operation.Select)
            {
                if (_obj_Smhr_MedicalClaim.MODE == 1)
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Select' , @Mode = 1, @ORGANISATIONID=" + _obj_Smhr_MedicalClaim.ORGANISATION_ID + ", @EMPID = " + _obj_Smhr_MedicalClaim.EmpID);
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Select',@ORGANISATIONID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID + "'");
            }
            if (_obj_Smhr_MedicalClaim.OPERATION == operation.LOADFINALIZE)
            {
                if (_obj_Smhr_MedicalClaim.MODE == 11)
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'LOADFINALIZE' , @Mode = 11, @ORGANISATIONID=" + _obj_Smhr_MedicalClaim.ORGANISATION_ID + ", @EMPID = " + _obj_Smhr_MedicalClaim.EmpID);
                else
                    return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'LOADFINALIZE',@ORGANISATIONID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.check)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'checkBalance',@EMPID='" + _obj_Smhr_MedicalClaim.EmpID + "',@EXPENDITUREID='" + _obj_Smhr_MedicalClaim.ExpenditureID + "',@OrgnisationID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID
                    + "',@SCALE_ID='" + _obj_Smhr_MedicalClaim.ClaimID + "',@FIN_PRD_ID=" + _obj_Smhr_MedicalClaim.FIN_PRD_ID + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Validate',@EMPID='" + _obj_Smhr_MedicalClaim.EmpID + "',@EXPENDITUREID='" + _obj_Smhr_MedicalClaim.ExpenditureID + "',@OrgnisationID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID
                    + "',@SCALE_ID='" + _obj_Smhr_MedicalClaim.ClaimID + "',@PRD_ID=" + _obj_Smhr_MedicalClaim.MODE + ",@FIN_PRD_ID=" + _obj_Smhr_MedicalClaim.FIN_PRD_ID + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'GET',@CLAIMID='" + _obj_Smhr_MedicalClaim.ClaimID + "'");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Select1', @EMPID=" + _obj_Smhr_MedicalClaim.EmpID + ",@ORGANISATIONID=" + _obj_Smhr_MedicalClaim.ORGANISATION_ID);
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Check_Emp)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'checkapp', @CLAIMID='" + _obj_Smhr_MedicalClaim.ClaimID + "',@ORGANISATIONID=" + _obj_Smhr_MedicalClaim.ORGANISATION_ID);
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.Empty)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'Empty', @EMPID=" + _obj_Smhr_MedicalClaim.EmpID);
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.CurrencyRate)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'CURR_RATE', @ORGANISATIONID=" + _obj_Smhr_MedicalClaim.ORGANISATION_ID + ",@MED_CURR_ID=" + _obj_Smhr_MedicalClaim.MED_CURR_ID + "");
            }
            else if (_obj_Smhr_MedicalClaim.OPERATION == operation.CHECKDUPLICATE)
            {

                dt = ExecuteQuery("EXEC USP_SMHR_EMPLOYEEMEDICALCLAIMS @OPERATION = 'CHECKDUPLICATE', " +
                                           " @EMPID = '" + _obj_Smhr_MedicalClaim.EmpID +
                                           "',@SELF_FAMILY='" + _obj_Smhr_MedicalClaim.CliamType +
                                           "',@BENFICIARYSERIALID='" + _obj_Smhr_MedicalClaim.BenficiarySerialId +
                                           "',@BENFICIARYNAME='" + _obj_Smhr_MedicalClaim.BenficiaryName +
                                           "',@RELATIONID='" + _obj_Smhr_MedicalClaim.RelationID +
                                           "',@SERVICEPROVIDERNAME='" + _obj_Smhr_MedicalClaim.ServiceProviderName +
                                           "',@EXPENDITUREID='" + _obj_Smhr_MedicalClaim.ExpenditureID +
                                           "',@AMOUNT='" + _obj_Smhr_MedicalClaim.Amount +

                                            //"',@ORGANISATIONID='" + _obj_Smhr_MedicalClaim.ORGANISATION_ID +
                                            //"',@CREATEDBY='" + _obj_Smhr_MedicalClaim.CREATEDBY +
                                            //"',@DATE='" + _obj_Smhr_MedicalClaim.InvoiceDate +
                                            //"',@SERVICEPROVIDERID =" + _obj_Smhr_MedicalClaim.SERVICEPROVIDERID +
                                            //" ,@FIN_PRD_ID=" + _obj_Smhr_MedicalClaim.FIN_PRD_ID +
                                            "'");
            }

            else
                return null;
            return dt;
        }

        /// <summary>
        /// Added By Dinesh
        /// </summary>
        /// <param name="_obj_Smhr_Establishment"></param>
        /// <returns></returns>
        public static bool set_Establishment(SMHR_POSITIONS _obj_Smhr_Establishment)
        {
            if (_obj_Smhr_Establishment.OPERATION == operation.Insert)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'Insert',@POSITIONS_ID = '" + _obj_Smhr_Establishment.POSITIONS_ID +
                                       "',@ESTABLISHMENTS_PERIODID='" + _obj_Smhr_Establishment.POSITIN_PERIOD_ID +
                                       "',@ESTABLISHMENTS_NO='" + _obj_Smhr_Establishment.POSITIONS_NOESTABLISHMENT +
                                       "',@ESTABLISHMENTS_CREATEDBY='" + _obj_Smhr_Establishment.ESTABLISHMENTS_CREATEDBY +
                                       "',@ESTABLISHMENTS_CREATEDDATE='" + _obj_Smhr_Establishment.ESTABLISHMENTS_CREATEDDATE +
                                       "'");
            }
            else if (_obj_Smhr_Establishment.OPERATION == operation.Insert_New)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'Insert_New',@POSITIONS_ID = '" + _obj_Smhr_Establishment.POSITIONS_ID +
                                       "',@ESTABLISHMENTS_PERIODID='" + _obj_Smhr_Establishment.POSITIN_PERIOD_ID +
                                       "',@ESTABLISHMENTS_NO='" + _obj_Smhr_Establishment.POSITIONS_NOESTABLISHMENT +
                                       "'");
            }
            else if (_obj_Smhr_Establishment.OPERATION == operation.Update)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'update',@ESTABLISHMENTS_PERIODID='" + _obj_Smhr_Establishment.POSITIN_PERIOD_ID +
                                       "',@ESTABLISHMENTS_NO='" + _obj_Smhr_Establishment.POSITIONS_NOESTABLISHMENT +
                                       "',@ESTABLISHMENTS_ID='" + _obj_Smhr_Establishment.POSITION_ESTABLISHMENT_ID +
                                       "',@ESTABLISHMENTS_LSTMDFBY='" + _obj_Smhr_Establishment.ESTABLISHMENTS_LSTMDFBY +
                                       "',@ESTABLISHMENTS_LSTMDFDATE='" + _obj_Smhr_Establishment.ESTABLISHMENTS_LSTMDFDATE +
                                       "'");
            }
            else if (_obj_Smhr_Establishment.OPERATION == operation.UpdateSTATUS)
            {
                return ExecuteNonQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'UPDATESTATUS',@ESTABLISHMENTS_PERIODID='" + _obj_Smhr_Establishment.POSITIN_PERIOD_ID +
                                       "',@ESTABLISHMENTS_NO='" + _obj_Smhr_Establishment.POSITIONS_NOESTABLISHMENT +
                                       "',@ESTABLISHMENTS_ID='" + _obj_Smhr_Establishment.POSITION_ESTABLISHMENT_ID +
                                       "'");
            }
            else
                return false;
        }

        public static DataTable get_Establishment(SMHR_POSITIONS _obj_Smhr_Establishment)
        {
            if (_obj_Smhr_Establishment.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'Select',@ESTABLISHMENTS_ID='" + _obj_Smhr_Establishment.POSITION_ESTABLISHMENT_ID + "'");
            }
            else if (_obj_Smhr_Establishment.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'Check',@ESTABLISHMENTS_PERIODID='" + _obj_Smhr_Establishment.POSITIN_PERIOD_ID + "',@POSITIONS_ID='" + _obj_Smhr_Establishment.POSITIONS_ID + "'");
            }
            else if (_obj_Smhr_Establishment.OPERATION == operation.Select1)
            {
                return ExecuteQuery("EXEC USP_SMHR_POSITIONS_ESTABLISHMENTS @OPERATION = 'Select1',@ESTABLISHMENTORGID='" + _obj_Smhr_Establishment.ORGANISATION_ID + "',@ESTABLISHMENTS_ID='" + _obj_Smhr_Establishment.POSITION_ESTABLISHMENT_ID + "'");
            }
            else
                return null;
        }

        public static DataTable get_MedicalInvoice(SMHR_MedicalInvoice oSMHR_MedicalInvoice)
        {
            if (oSMHR_MedicalInvoice.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICAL_INVOICE @OPERATION = 'Check',@ORGANISATIONID='" + oSMHR_MedicalInvoice.ORGANISATION_ID + "'");
            }
            else if (oSMHR_MedicalInvoice.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICAL_INVOICE @OPERATION = 'Select',@ORGANISATIONID='" + oSMHR_MedicalInvoice.ORGANISATION_ID + "'");
            }
            else if (oSMHR_MedicalInvoice.OPERATION == operation.Validate)
            {
                return ExecuteQuery("EXEC USP_SMHR_MEDICAL_INVOICE @OPERATION = 'Validate',@ORGANISATIONID='" + oSMHR_MedicalInvoice.ORGANISATION_ID + "'");
            }
            else
                return null;
        }

        /// <summary>
        /// Added By Dinesh
        /// </summary>
        /// <param name="oSMHR_MedicalInvoice"></param>
        /// <returns></returns>
        public static bool set_MedicalInvoice(SMHR_MedicalInvoice oSMHR_MedicalInvoice)
        {
            if (oSMHR_MedicalInvoice.OPERATION == operation.Insert)
            {
                List<SqlParameter> lstSqlparams = new List<SqlParameter>();
                lstSqlparams.Add(new SqlParameter("@OPERATION", "Insert"));
                lstSqlparams.Add(new SqlParameter("@ServiceProviderID", oSMHR_MedicalInvoice.ServiceProviderID));
                lstSqlparams.Add(new SqlParameter("@InvoiceDocument", oSMHR_MedicalInvoice.InvoiceDoc));
                lstSqlparams.Add(new SqlParameter("@UploadedBy", oSMHR_MedicalInvoice.CREATEDBY));
                lstSqlparams.Add(new SqlParameter("@MedicalInvoice", oSMHR_MedicalInvoice.MedicalInvoice));
                lstSqlparams.Add(new SqlParameter("@ORGANISATIONID", oSMHR_MedicalInvoice.ORGANISATION_ID));
                int result = ExecuteNonQuery("USP_SMHR_MEDICAL_INVOICE", lstSqlparams.ToArray());
                if (result > 0)
                    return true;
                else
                    return false;
            }
            else
                return false;
        }

        /// <summary>
        /// Added By Anand
        /// </summary>
        /// <param name="objEmployee"></param>
        /// <returns>employee details</returns>
        public static DataTable get_EmployeeDtls(SMHR_EMPLOYEE objEmployee)
        {
            if (objEmployee.MODE == 1)
            {
                return ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEES @ORGANISATION_ID = " + objEmployee.ORGANISATION_ID + ", @EMP_ID =" + objEmployee.EMP_ID +
                                    ", @MODE = " + objEmployee.MODE);
            }
            else
            {
                return ExecuteQuery("EXEC USP_SMHR_GETEMPLOYEES @ORGANISATION_ID = " + objEmployee.ORGANISATION_ID + ", @EMP_ID =" + objEmployee.EMP_ID);
            }
        }

        #region Organisation Chart

        public static DataTable getOrganisationTreeViewData(SMHR_OrganisationChart objOrgChart)//To get OrganisationChart Details
        {
            return ExecuteQuery("EXEC USP_ORGANISATIONCHART_1 @Operation = '" + objOrgChart.OPERATION + "', @ID = '" + objOrgChart.ID + "'");
        }

        public static DataTable getOrganisationEmployeeDtls(SMHR_OrganisationChart objOrgChart) //To get Employee details
        {
            return ExecuteQuery("EXEC USP_GET_EMPLOYEEDETAILS_ORG @Operation = '" + objOrgChart.OPERATION + "', @ID = '" + objOrgChart.ID + "'");
        }

        #endregion

        # region Health and Safety

        #region Activity

        public static bool set_Activity(SMHR_ACTIVITY _obj_smhr_Activity)
        {
            bool status = false;
            if (_obj_smhr_Activity.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_ACTIVITY @OPERATION = 'Insert',@SMHR_ACTIVITY_NAME = '" + _obj_smhr_Activity.SMHR_ACTIVITY_NAME +
                                    "',@SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID='" + _obj_smhr_Activity.SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID +
                                    "',@SMHR_ACTIVITY_DESCRIPTION='" + _obj_smhr_Activity.SMHR_ACTIVITY_DESCRIPTION +
                                    "' , @SMHR_ACTIVITY_CREATEDBY  =" + Convert.ToInt32(_obj_smhr_Activity.SMHR_ACTIVITY_CREATEDBY) +
                                    " , @SMHR_ACTIVITY_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_Activity.CREATEDDATE).ToString("MM/dd/yyyy") +
                                    "',@SMHR_ACTIVITY_ORGANISATION_ID=" + Convert.ToInt32(_obj_smhr_Activity.ORGANISATION_ID) +
                                    " , @SMHR_ACTIVITY_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Activity.SMHR_ACTIVITY_ISACTIVE)))

                    status = true;
                else
                    status = false;
            }
            if (_obj_smhr_Activity.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_ACTIVITY @OPERATION = 'UPDATE',@SMHR_ACTIVITY_NAME = '" + _obj_smhr_Activity.SMHR_ACTIVITY_NAME +
                                    "',@SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID='" + _obj_smhr_Activity.SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID +
                                    "',@SMHR_ACTIVITY_DESCRIPTION='" + _obj_smhr_Activity.SMHR_ACTIVITY_DESCRIPTION +
                                    "',@SMHR_ACTIVITY_MODIFIEDBY  =" + Convert.ToInt32(_obj_smhr_Activity.SMHR_ACTIVITY_MODIFIEDBY) +
                                    " , @SMHR_ACTIVITY_MODIFIEDDATE ='" + Convert.ToDateTime(_obj_smhr_Activity.SMHR_ACTIVITY_MODIFIEDDATE).ToString("MM/dd/yyyy") +
                                    "', @SMHR_ACTIVITY_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Activity.SMHR_ACTIVITY_ISACTIVE) +
                                    ",@SMHR_ACTIVITY_ORGANISATION_ID=" + Convert.ToInt32(_obj_smhr_Activity.ORGANISATION_ID) +
                                    " , @SMHR_ACTIVITY_ID=" + Convert.ToInt32(_obj_smhr_Activity.SMHR_ACTIVITY_ID)))

                    status = true;
                else
                    status = false;
            }
            return status;
        }

        public static DataTable get_AllActivities(SMHR_ACTIVITY _obj_smhr_Activity)
        {
            return ExecuteQuery("EXEC USP_SMHR_ACTIVITY @Operation = 'GET_ALL_ACTIVITIES'" + ",@SMHR_ACTIVITY_ORGANISATION_ID=" + Convert.ToInt32(_obj_smhr_Activity.ORGANISATION_ID));
        }

        public static DataTable get_Activity(SMHR_ACTIVITY _obj_smhr_Activity)
        {
            return ExecuteQuery("EXEC USP_SMHR_ACTIVITY @Operation = 'GET_ACTIVITY'" + ", @SMHR_ACTIVITY_ID=" + _obj_smhr_Activity.SMHR_ACTIVITY_ID + ",@SMHR_ACTIVITY_ORGANISATION_ID=" + Convert.ToInt32(_obj_smhr_Activity.ORGANISATION_ID));
        }

        public static DataTable checkexists(SMHR_ACTIVITY _obj_smhr_Activity)
        {
            return ExecuteQuery("EXEC USP_SMHR_ACTIVITY @Operation = 'CHECKEXISTS',@SMHR_ACTIVITY_NAME = '" + _obj_smhr_Activity.SMHR_ACTIVITY_NAME + "'" + ",@SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID=" + _obj_smhr_Activity.SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID + ",@SMHR_ACTIVITY_ORGANISATION_ID=" + _obj_smhr_Activity.ORGANISATION_ID);
        }

        #endregion

        #region Equipment

        public static bool set_EquipmentMaster(SMHR_EQUIPMENT _obj_equipment_master)
        {
            bool status = false;
            if (_obj_equipment_master.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EQUIPMENT_MASTER @OPERATION = 'Insert',@EQUIPMENT_NAME = '" + _obj_equipment_master.EQUIPMENT_NAME +
                                    "' , @EQUIPMENT_EXPIRYDATE='" + _obj_equipment_master.EQUIPMENT_EXPIRYDATE +
                                    "' , @EQUIPMENT_DIRECTORATE_ID= " + _obj_equipment_master.EQUIPMENT_DIRECTORATE_ID +
                                    "  , @EQUIPMENT_DEPARTMENT_ID  = " + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_DEPARTMENT_ID) +
                                    "  , @EQUIPMENT_SUBDEPARTMNET = " + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_SUBDEPARTMNET) +
                                    "  , @EQUIPMENT_ISACTIVE =" + Convert.ToBoolean(_obj_equipment_master.EQUIPMENT_ISACTIVE) +
                                    "  , @EQUIPMENT_CREATEDDATE='" + Convert.ToDateTime(_obj_equipment_master.EQUIPMENT_CREATEDDATE).ToString("MM/dd/yyyy") +
                                    "' , @EQUIPMENT_CREATEDBY=" + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_CREATEDBY) +
                                    "  , @EQUIPMENT_BU_ID=" + Convert.ToInt32(_obj_equipment_master.BUID)))

                    status = true;
                else
                    status = false;
            }
            if (_obj_equipment_master.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EQUIPMENT_MASTER @OPERATION = 'UPDATE', @EQUIPMENT_NAME = '" + _obj_equipment_master.EQUIPMENT_NAME +
                                    "' , @EQUIPMENT_EXPIRYDATE='" + _obj_equipment_master.EQUIPMENT_EXPIRYDATE +
                                    "' , @EQUIPMENT_DIRECTORATE_ID= " + _obj_equipment_master.EQUIPMENT_DIRECTORATE_ID +
                                    "  , @EQUIPMENT_DEPARTMENT_ID  = " + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_DEPARTMENT_ID) +
                                    "  , @EQUIPMENT_SUBDEPARTMNET = " + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_SUBDEPARTMNET) +
                                    "  , @EQUIPMENT_ISACTIVE =" + Convert.ToBoolean(_obj_equipment_master.EQUIPMENT_ISACTIVE) +
                                    "  , @EQUIPMENT_MODIFIEDDATE='" + Convert.ToDateTime(_obj_equipment_master.EQUIPMENT_MODIFIEDDATE).ToString("MM/dd/yyyy") +
                                    "' , @EQUIPMENT_MODIFIEDBY=" + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_MODIFIEDBY) +
                                    "  , @EQUIPMENT_ID=" + Convert.ToInt32(_obj_equipment_master.EQUIPMENT_ID) +
                                    "  , @EQUIPMENT_BU_ID=" + Convert.ToInt32(_obj_equipment_master.BUID)))

                    status = true;
                else
                    status = false;
            }
            return status;
        }

        public static DataTable checkEquipmentexists(SMHR_ACTIVITY _obj_smhr_Activity)
        {
            return ExecuteQuery("EXEC USP_SMHR_EQUIPMENT_MASTER @Operation = 'CHECKEXISTS',@SMHR_ACTIVITY_NAME = '" + _obj_smhr_Activity.SMHR_ACTIVITY_NAME + "'" + ",@SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID=" + _obj_smhr_Activity.SMHR_ACTIVITY_PROTECTIVEUNIFORM_ID + ",@SMHR_ACTIVITY_ORGANISATION_ID=" + _obj_smhr_Activity.ORGANISATION_ID);
        }

        public static DataTable get_AllEquipments(SMHR_EQUIPMENT _obj_equipment_master)
        {
            return ExecuteQuery(" EXEC USP_SMHR_EQUIPMENT_MASTER @Operation = '" + operation.GET_ALLEQUIPMENTS + "',@ORG_ID = " + _obj_equipment_master.ORGANISATION_ID);
        }

        public static DataTable get_Equipment(SMHR_EQUIPMENT _obj_equipment_master)
        {
            return ExecuteQuery(" EXEC USP_SMHR_EQUIPMENT_MASTER @Operation = '" + operation.GET_EQUIPMENT + "'" + ", @EQUIPMENT_ID=" + _obj_equipment_master.EQUIPMENT_ID);
        }

        #endregion

        #region SMHR_AREAS

        public static bool set_Areas(SMHR_AREA _obj_Smhr_Area)
        {
            bool status = false;
            if (_obj_Smhr_Area.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_AREA @OPERATION = 'Insert',@AREA_NAME = '" + _obj_Smhr_Area.AREA_NAME +
                                    "',@AREA_DESCRIPTION='" + _obj_Smhr_Area.AREA_DESCRIPTION +
                                    "',@AREA_DIRECTORATE_ID=" + _obj_Smhr_Area.AREA_DIRECTORATE_ID +
                                    " ,@AREA_DEPARTMENT_ID  =" + Convert.ToInt32(_obj_Smhr_Area.AREA_DEPARTMENT_ID) +
                                    " ,@AREA_SUBDEPARTMENT_ID =" + Convert.ToInt32(_obj_Smhr_Area.AREA_SUBDEPARTMENT_ID) +
                                    " ,@AREA_CREATED_BY =" + Convert.ToInt32(_obj_Smhr_Area.AREA_CREATED_BY) +
                                    " ,@AREA_CREATED_DATE='" + Convert.ToDateTime(_obj_Smhr_Area.AREA_CREATED_DATE) +
                                    "',@AREA_IS_ACTIVE=" + Convert.ToBoolean(_obj_Smhr_Area.AREA_IS_ACTIVE) +
                                    " ,@AREA_BU=" + Convert.ToInt32(_obj_Smhr_Area.AREA_BUSINESSUNIT_ID)))

                    status = true;
                else
                    status = false;
            }
            if (_obj_Smhr_Area.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_AREA @OPERATION = 'UPDATE',@AREA_NAME = '" + _obj_Smhr_Area.AREA_NAME +
                                    "',@AREA_DESCRIPTION='" + _obj_Smhr_Area.AREA_DESCRIPTION +
                                    "',@AREA_DIRECTORATE_ID='" + _obj_Smhr_Area.AREA_DIRECTORATE_ID +
                                    "',@AREA_DEPARTMENT_ID  =" + Convert.ToInt32(_obj_Smhr_Area.AREA_DEPARTMENT_ID) +
                                    " ,@AREA_SUBDEPARTMENT_ID ='" + Convert.ToInt32(_obj_Smhr_Area.AREA_SUBDEPARTMENT_ID) +
                                    "',@AREA_MODIFIED_BY =" + Convert.ToInt32(_obj_Smhr_Area.AREA_MODIFIED_BY) +
                                    " ,@AREA_MODIFIED_DATE='" + Convert.ToDateTime(_obj_Smhr_Area.AREA_MODIFIED_DATE) +
                                    " ',@AREA_IS_ACTIVE=" + Convert.ToBoolean(_obj_Smhr_Area.AREA_IS_ACTIVE) +
                                    " ,@AREA_ID=" + Convert.ToInt32(_obj_Smhr_Area.AREA_ID) +
                                    " ,@AREA_BU=" + Convert.ToInt32(_obj_Smhr_Area.AREA_BUSINESSUNIT_ID)))

                    status = true;
                else
                    status = false;
            }
            return status;
        }

        public static DataTable get_AllAreas(SMHR_AREA _obj_smhr_Area)
        {
            return ExecuteQuery("EXEC USP_SMHR_AREA @Operation = 'GET_ALLAREAS', @ORG_ID = " + _obj_smhr_Area.ORGANISATION_ID);
        }

        public static DataTable get_Area(SMHR_AREA _obj_smhr_Area)
        {
            return ExecuteQuery("EXEC USP_SMHR_AREA @Operation = 'GET_AREA'" + ", @AREA_ID=" + _obj_smhr_Area.AREA_ID);
        }

        //For use in Inspections Screen
        public static DataTable get_Area_BU_Directoratewise(SMHR_AREA _obj_smhr_Area)
        {
            return ExecuteQuery("EXEC USP_SMHR_AREA @Operation = 'GET_AREA_BU_DIRECTORATEWISE'" +
                                ",@AREA_BU= " + _obj_smhr_Area.AREA_BUSINESSUNIT_ID +
                                ",@AREA_DIRECTORATE_ID= " + _obj_smhr_Area.AREA_DIRECTORATE_ID);
        }

        public static DataTable get_Area_DepartmentWise(SMHR_AREA _obj_smhr_Area)
        {
            return ExecuteQuery("EXEC USP_SMHR_AREA @Operation = 'get_Area_DepartmentWise'" +
                                ",@AREA_BU= " + _obj_smhr_Area.AREA_BUSINESSUNIT_ID +
                                ",@AREA_DIRECTORATE_ID= " + _obj_smhr_Area.AREA_DIRECTORATE_ID +
                                ",@AREA_DEPARTMENT_ID= " + _obj_smhr_Area.AREA_DEPARTMENT_ID);
        }

        public static DataTable get_Area_SubDepartmentWise(SMHR_AREA _obj_smhr_Area)
        {
            return ExecuteQuery("EXEC USP_SMHR_AREA @Operation = 'get_Area_SubDepartmentWise'" +
                                ",@AREA_BU= " + _obj_smhr_Area.AREA_BUSINESSUNIT_ID +
                                ",@AREA_DIRECTORATE_ID= " + _obj_smhr_Area.AREA_DIRECTORATE_ID +
                                ",@AREA_DEPARTMENT_ID= " + _obj_smhr_Area.AREA_DEPARTMENT_ID +
                                ",@AREA_SUBDEPARTMENT_ID= " + _obj_smhr_Area.AREA_SUBDEPARTMENT_ID);
        }

        //For use in Inspections Screen

        #endregion

        #region SMHR_SCHEDULEINSPECTIONS

        public static DataTable get_AllInspections(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_MASTER @Operation = 'GET_ALLINSPECTIONS' ,@ORG_ID =" + _obj_smhr_Inspection.ORGANISATION_ID);
        }

        #endregion

        #region SMHR_INSPECTIONS

        public static bool set_Inspections(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            bool status = false;
            if (_obj_smhr_Inspection.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_INSPECTION_MASTER @OPERATION = 'INSERT',@INSPECTION_NAME = '" + _obj_smhr_Inspection.INSPECTION_NAME +
                                    " ',@INSPECTION_DESCRIPTION='" + _obj_smhr_Inspection.INSPECTION_DESCRIPTION +
                                    " ',@INSPECTION_BU_ID=" + _obj_smhr_Inspection.INSPECTION_BU_ID +
                                    "  ,@INSPECTION_DIRECTORATE_ID  =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_DIRECTORATE_ID) +
                                    "  ,@INSPECTION_DEPARTMENT_ID =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_DEPARTMENT_ID) +
                                    "  ,@INSPECTION_SUBDEPARTMENT_ID =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_SUBDEPARTMENT_ID) +
                                    "  ,@INSPECTION_CREATEDBY =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_CREATEDBY) +
                                    "  ,@INSPECTION_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_Inspection.INSPECTION_CREATEDDATE) +
                                    "' ,@INSPECTION_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Inspection.INSPECTION_ISACTIVE)))
                    status = true;
                else
                    status = false;
            }
            if (_obj_smhr_Inspection.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_INSPECTION_MASTER @OPERATION = 'UPDATE',@INSPECTION_NAME = '" + _obj_smhr_Inspection.INSPECTION_NAME +
                                    " ',@INSPECTION_DESCRIPTION='" + _obj_smhr_Inspection.INSPECTION_DESCRIPTION +
                                    " ',@INSPECTION_BU_ID=" + _obj_smhr_Inspection.INSPECTION_BU_ID +
                                    "  ,@INSPECTION_DIRECTORATE_ID  =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_DIRECTORATE_ID) +
                                    "  ,@INSPECTION_DEPARTMENT_ID =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_DEPARTMENT_ID) +
                                    "  ,@INSPECTION_SUBDEPARTMENT_ID =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_SUBDEPARTMENT_ID) +
                                    "  ,@INSPECTION_MODIFIEDBY =" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_MODIFIEDBY) +
                                    "  ,@INSPECTION_MODIFIEDDATE ='" + Convert.ToDateTime(_obj_smhr_Inspection.INSPECTION_MODIFIEDDATE) +
                                    "' ,@INSPECTION_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Inspection.INSPECTION_ISACTIVE) +
                                    "  ,@INSPECTION_ID=" + Convert.ToInt32(_obj_smhr_Inspection.INSPECTION_ID)))
                    status = true;
                else
                    status = false;
            }
            return status;
        }

        public static DataTable get_Inspections(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_MASTER @Operation = 'GET_INSPECTIONS'" + ", @INSPECTION_ID=" + _obj_smhr_Inspection.INSPECTION_ID);
        }

        public static DataTable get_InspectionsBUDirectorateWise(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_MASTER @Operation = 'GET_INSPECTION_BU_DIRECTORATEWISE'" + ",@INSPECTION_BU_ID=" + _obj_smhr_Inspection.INSPECTION_BU_ID +
                                ",@INSPECTION_DIRECTORATE_ID=" + _obj_smhr_Inspection.INSPECTION_DIRECTORATE_ID +
                                ",@ORG_ID = " + _obj_smhr_Inspection.ORGANISATION_ID);
        }

        public static DataTable get_InspectionsDepartmentWise(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_MASTER @Operation = 'GET_INSPECTION_DEPARTMENTWISE'" + ",@INSPECTION_BU_ID=" + _obj_smhr_Inspection.INSPECTION_BU_ID +
                                ",@INSPECTION_DIRECTORATE_ID=" + _obj_smhr_Inspection.INSPECTION_DIRECTORATE_ID +
                                ", @INSPECTION_DEPARTMENT_ID=" + _obj_smhr_Inspection.INSPECTION_DEPARTMENT_ID +
                                ",@ORG_ID = " + _obj_smhr_Inspection.ORGANISATION_ID);
        }

        public static DataTable get_InspectionsSubDepartmentWises(SMHR_INSPECTION _obj_smhr_Inspection)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_MASTER @Operation = 'GET_INSPECTION_SUBDEPARTMENTWISE'" + ",@INSPECTION_BU_ID=" + _obj_smhr_Inspection.INSPECTION_BU_ID +
                                ",@INSPECTION_DIRECTORATE_ID=" + _obj_smhr_Inspection.INSPECTION_DIRECTORATE_ID +
                                ", @INSPECTION_DEPARTMENT_ID=" + _obj_smhr_Inspection.INSPECTION_DEPARTMENT_ID +
                                ", @INSPECTION_SUBDEPARTMENT_ID=" + _obj_smhr_Inspection.INSPECTION_SUBDEPARTMENT_ID +
                                ",@ORG_ID = " + _obj_smhr_Inspection.ORGANISATION_ID);
        }

        #endregion

        #region SMHR_SCHEDULE_INSPECTIONS

        public static bool set_Inspection(SMHR_INSPECTION_SCHEDULE _obj_smhr_Inspection_Schedule)
        {
            bool status = false;
            if (_obj_smhr_Inspection_Schedule.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @OPERATION = 'INSERT',@INSPECTION_SCHEDULE_INSPECTION_ID = " + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_INSPECTION_ID +
                                    " ,@INSPECTION_SCHEDULE_ASSIGNED_TO=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ASSIGNED_TO +
                                    " ,@INSPECTION_SCHEDULE_FROMDATE='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_FROMDATE) +
                                    "'  ,@INSPECTION_SCHEDULE_TODATE  ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_TODATE) +
                                    "'  ,@INSPECTION_SCHEDULE_FROMTIME ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_FROMTIME) +
                                    "'  ,@INSPECTION_SCHEDULE_TOTIME ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_TOTIME) +
                                    "'  ,@INSPECTION_SCHEDULE_CREATEDBY =" + Convert.ToInt32(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_CREATEDBY) +
                                    "  ,@INSPECTION_SCHEDULE_CREATEDDATE ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_CREATEDDATE) +
                                    "' ,@INSPECTION_SCHEDULE_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ISACTIVE) +
                                    "  ,@INSPECTION_SCHEDULE_BU_ID = " + Convert.ToInt32(_obj_smhr_Inspection_Schedule.BUID)))
                    status = true;
                else
                    status = false;
            }

            if (_obj_smhr_Inspection_Schedule.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @OPERATION = 'UPDATE',@INSPECTION_SCHEDULE_INSPECTION_ID = " + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_INSPECTION_ID +
                                    ",@INSPECTION_SCHEDULE_ID=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ID +
                                    " ,@INSPECTION_SCHEDULE_ASSIGNED_TO=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ASSIGNED_TO +
                                    " ,@INSPECTION_SCHEDULE_FROMDATE='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_FROMDATE) +
                                    "'  ,@INSPECTION_SCHEDULE_TODATE='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_TODATE) +
                                    "'  ,@INSPECTION_SCHEDULE_FROMTIME ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_FROMTIME) +
                                    "'  ,@INSPECTION_SCHEDULE_TOTIME ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_TOTIME) +
                                    "'  ,@INSPECTION_SCHEDULE_MODIFIEDBY =" + Convert.ToInt32(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_MODIFIEDBY) +
                                    "  ,@INSPECTION_SCHEDULE_MODIFIEDDATE ='" + Convert.ToDateTime(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_MODIFIEDDATE) +
                                    "' ,@INSPECTION_SCHEDULE_ISACTIVE =" + Convert.ToBoolean(_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ISACTIVE)))
                    status = true;
                else
                    status = false;
            }
            return status;
        }

        //public static DataTable get_Inspection(SMHR_INSPECTION_SCHEDULE _obj_smhr_Inspection_Schedule)
        //{
        //    return ExecuteQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @Operation = 'GET_INSPECTIONSCHEDULE'" + ", @INSPECTION_SCHEDULE_INSPECTION_ID=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_INSPECTION_ID+",@INSPECTION_SCHEDULE_ASSIGNED_TO=" +_obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ASSIGNED_TO);
        //}
        public static DataTable get_Inspection(SMHR_INSPECTION_SCHEDULE _obj_smhr_Inspection_Schedule)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @Operation = 'GET_INSPECTIONSCHEDULE'" + ", @INSPECTION_SCHEDULE_ID=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ID);
        }

        public static DataTable GET_INSPECTIONSCHEDULE_ISCOMPLIANT(SMHR_INSPECTION_SCHEDULE _obj_smhr_Inspection_Schedule)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @Operation = 'GET_INSPECTIONSCHEDULE_ISCOMPLIANT'" +
                                ", @INSPECTION_SCHEDULE_INSPECTION_ID=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_INSPECTION_ID +
                                ", @INSPECTION_SCHEDULE_ASSIGNED_TO=" + _obj_smhr_Inspection_Schedule.INSPECTION_SCHEDULE_ASSIGNED_TO +
                                ", @ORG_ID = " + _obj_smhr_Inspection_Schedule.ORGANISATION_ID);
        }

        public static DataTable get_AllInspectionSchedules(SMHR_INSPECTION_SCHEDULE _obj_smhr_Inspection_Schedule)
        {
            return ExecuteQuery("EXEC USP_SMHR_INSPECTION_SCHEDULE @Operation = 'GET_ALLINSPECTIONSSCHEDULES'"
                                //+ ", @EMP_ID=" + _obj_smhr_Inspection_Schedule.LOGIN_EMP_ID
                                +
                                ", @ORG_ID=" + _obj_smhr_Inspection_Schedule.ORGANISATION_ID);
        }

        #endregion

        #endregion

        #region Workman Compensation

        public static bool InsertUpdateIncidents(SMHR_WorkmanCompensation objWrkComp)
        {
            bool status = false;
            switch (objWrkComp.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_INCIDENTS_MASTER @Operation = 'Insert', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                        ",  @INCIDENT_NAME ='" + objWrkComp.IncidentName +
                                        "', @PLACE_OF_INCIDENT = '" + objWrkComp.IncidentPlace +
                                        "', @INCIDENT_DATE ='" + objWrkComp.IncidentDatetime +
                                        "', @INCIDENT_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID +
                                        ",  @INCIDENT_BUSINESSUNIT_ID =" + objWrkComp.BUID +
                                        ",  @INCIDENT_DIRECTORATE_ID =" + objWrkComp.DIRECTORATE_ID +
                                        ",  @INCIDENT_DEPARTMENT_ID =" + objWrkComp.DEPARTMENT_ID +
                                        ",  @INCIDENT_SUBDEPARTMENT_ID =" + objWrkComp.SUBDEPARTMENT_ID + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_INCIDENTS_MASTER @Operation = 'Update', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                        ",  @INCIDENT_NAME ='" + objWrkComp.IncidentName +
                                        "', @PLACE_OF_INCIDENT = '" + objWrkComp.IncidentPlace +
                                        "', @INCIDENT_DATE ='" + objWrkComp.IncidentDatetime +
                                        "', @INCIDENT_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID +
                                        ",  @INCIDENT_BUSINESSUNIT_ID =" + 0 +
                                        ",  @INCIDENT_DIRECTORATE_ID =" + 0 +
                                        ",  @INCIDENT_DEPARTMENT_ID =" + 0 +
                                        ",  @INCIDENT_SUBDEPARTMENT_ID =" + 0 + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_INCIDENTS_MASTER @Operation = '" + objWrkComp.OPERATION +
                                                                                                                                                     "', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                                                                                                                                     ",  @INCIDENT_NAME ='" + objWrkComp.IncidentName +
                                                                                                                                                     "', @INCIDENT_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID)))
                        status = true;
                    else
                        status = false;
                    break;
                //case operation.Select:
                //    ExecuteQuery("EXEC USP_SMHR_INCIDENTS_MASTER @Operation = 'Select', @INCIDENT_NAME =" + objWrkComp.IncidentName
                //                     + ", @PLACE_OF_INCIDENT = '" + objWrkComp.IncidentPlace
                //                     + "', @INCIDENT_DATE ='" + objWrkComp.IncidentDatetime
                //                     + "', @INCIDENT_ORGANISATION_ID ='" + objWrkComp.ORGANISATION_ID
                //                     + "', @INCIDENT_BUSINESSUNIT_ID ='" + objWrkComp.BUID
                //                     + "', @INCIDENT_DIRECTORATE_ID ='" + objWrkComp.DIRECTORATE_ID
                //                     + "', @INCIDENT_DEPARTMENT_ID ='" + objWrkComp.DEPARTMENT_ID
                //                     + "', @INCIDENT_SUBDEPARTMENT_ID ='" + objWrkComp.SUBDEPARTMENT_ID + "'");
                //    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable Get_SMHR_INCIDENTS_MASTERS(SMHR_WorkmanCompensation ObjWrkComp)
        {
            return ExecuteQuery("EXEC USP_GET_SMHR_INCIDENTS_MASTER @Operation = '" + ObjWrkComp.OPERATION + "', @INCIDENT_ORGANISATION_ID =" + ObjWrkComp.ORGANISATION_ID +
                                ", @INCIDENT_ID = " + ObjWrkComp.IncidentID);
        }

        public static DataSet GET_SMHR_INCIDENTS(SMHR_WorkmanCompensation ObjWrkComp)
        {
            switch (ObjWrkComp.OPERATION)
            {
                case operation.Select1:
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_INCIDENTS @Operation = '" + ObjWrkComp.OPERATION
                                                                                                                                       //+ "', @INCIDENT_ID = " + ObjWrkComp.IncidentID
                                                                                                                                       +
                                                                                                                                       "',  @INC_ORGANISATION_ID =" + ObjWrkComp.ORGANISATION_ID +
                                                                                                                                       ",  @INC_EMP_ID =" + ObjWrkComp.EmpID);
                case operation.EMPDETAILS:
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_INCIDENTS @Operation = '" + ObjWrkComp.OPERATION +
                                                                                                                                       "', @INCIDENT_ID = " + ObjWrkComp.IncidentID +
                                                                                                                                       ",  @INC_ORGANISATION_ID =" + ObjWrkComp.ORGANISATION_ID +
                                                                                                                                       ",  @INC_EMP_ID =" + ObjWrkComp.EmpID);
                default:
                    return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_INCIDENTS @Operation = '" + ObjWrkComp.OPERATION +
                                                                                                                                       "', @INCIDENT_ID = " + ObjWrkComp.IncidentID +
                                                                                                                                       ",  @INC_ORGANISATION_ID =" + ObjWrkComp.ORGANISATION_ID);
            }
            //return SqlHelper.ExecuteDataset(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_INCIDENTS @Operation = '" + ObjWrkComp.OPERATION
            //                + "', @INCIDENT_ID = " + ObjWrkComp.IncidentID
            //                + ",  @INC_ORGANISATION_ID =" + ObjWrkComp.ORGANISATION_ID);
        }

        public static DataTable USP_GET_EMP_BY_EMP_ID(SMHR_WorkmanCompensation objWrkComp)
        {
            return ExecuteQuery("EXEC USP_GET_EMP_BY_EMP_ID @EMP_ID = " + objWrkComp.EmpID + ", @OPERATION = '" + objWrkComp.OPERATION + "'");
        }

        public static bool SET_SMHR_INCIDENTS(SMHR_WorkmanCompensation objWrkComp)
        {
            bool status = false;
            switch (objWrkComp.OPERATION)
            {
                case operation.Insert:  //To insert into SMHR_INCIDENTS
                    if (ExecuteNonQuery("EXEC USP_SET_SMHR_INCIDENTS @Operation ='" + objWrkComp.OPERATION +
                                        "', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                        ",  @INC_EMP_ID =" + objWrkComp.EmpID +
                                        ",  @INC_CAUSE_ID = " + objWrkComp.IncidentCauseID +
                                        ",  @INC_TYPE_ID =" + objWrkComp.InicidentTypeID +
                                        ",  @INC_SEVERITY_ID =" + objWrkComp.SeverityID +
                                        ",  @INC_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID +
                                        ",  @INC_BUSINESSUNIT_ID =" + objWrkComp.BUID +
                                        ",  @INC_DIRECTORATE_ID =" + objWrkComp.DIRECTORATE_ID +
                                        ",  @INC_DEPARTMENT_ID =" + objWrkComp.DEPARTMENT_ID +
                                        ",  @INC_SUBDEPARTMENT_ID =" + objWrkComp.SUBDEPARTMENT_ID +
                                        ",  @REMARKS ='" + objWrkComp.Remarks + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:  //To update employee incidents
                    if (ExecuteNonQuery("EXEC USP_SET_SMHR_INCIDENTS @Operation ='" + objWrkComp.OPERATION +
                                        "', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                        ",  @INC_EMP_ID =" + objWrkComp.EmpID +
                                        ",  @INC_CAUSE_ID = " + objWrkComp.IncidentCauseID +
                                        ",  @INC_TYPE_ID =" + objWrkComp.InicidentTypeID +
                                        ",  @INC_SEVERITY_ID =" + objWrkComp.SeverityID +
                                        ",  @INC_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID +
                                        ",  @INC_BUSINESSUNIT_ID =" + objWrkComp.BUID +
                                        ",  @INC_DIRECTORATE_ID =" + objWrkComp.DIRECTORATE_ID +
                                        ",  @INC_DEPARTMENT_ID =" + objWrkComp.DEPARTMENT_ID +
                                        ",  @INC_SUBDEPARTMENT_ID =" + 0 +
                                        ",  @REMARKS ='" + DBNull.Value + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Insert_New:  //To insert only Remarks for Selected IncidentID
                    if (ExecuteNonQuery("EXEC USP_SET_SMHR_INCIDENTS @Operation ='" + objWrkComp.OPERATION +
                                        "', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                        ",  @INC_EMP_ID =" + objWrkComp.EmpID +
                                        ",  @INC_CAUSE_ID = " + objWrkComp.IncidentCauseID +
                                        ",  @INC_TYPE_ID =" + objWrkComp.InicidentTypeID +
                                        ",  @INC_SEVERITY_ID =" + objWrkComp.SeverityID +
                                        ",  @INC_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID +
                                        ",  @INC_BUSINESSUNIT_ID =" + objWrkComp.BUID +
                                        ",  @INC_DIRECTORATE_ID =" + objWrkComp.DIRECTORATE_ID +
                                        ",  @INC_DEPARTMENT_ID =" + objWrkComp.DEPARTMENT_ID +
                                        ",  @INC_SUBDEPARTMENT_ID =" + objWrkComp.SUBDEPARTMENT_ID +
                                        ",  @REMARKS ='" + objWrkComp.Remarks + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:   //To check if incident is already assigned to the employee
                    if (Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SET_SMHR_INCIDENTS @Operation = '" + objWrkComp.OPERATION +
                                                                                                                                                     "', @INCIDENT_ID =" + objWrkComp.IncidentID +
                                                                                                                                                     ",  @INC_EMP_ID =" + objWrkComp.EmpID +
                                                                                                                                                     ",  @INC_BUSINESSUNIT_ID =" + objWrkComp.BUID +
                                                                                                                                                     ",  @INC_DIRECTORATE_ID =" + objWrkComp.DIRECTORATE_ID +
                                                                                                                                                     ",  @INC_DEPARTMENT_ID =" + objWrkComp.DEPARTMENT_ID +
                                                                                                                                                     ",  @INC_SUBDEPARTMENT_ID =" + objWrkComp.SUBDEPARTMENT_ID +
                                                                                                                                                     ",  @INC_ORGANISATION_ID =" + objWrkComp.ORGANISATION_ID)))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Town

        public static DataTable get_Town(SMHR_TOWN _obj_Smhr_Town)
        {
            if (_obj_Smhr_Town.OPERATION == operation.Select)
            {
                if (_obj_Smhr_Town.TOWN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'select',@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'select', @TOWN_ID =" + Convert.ToString(_obj_Smhr_Town.TOWN_ID) + ",@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Town.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'Get', @TOWN_CODE ='" + Convert.ToString(_obj_Smhr_Town.TOWN_CODE) + "',@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
            }
            else if (_obj_Smhr_Town.OPERATION == operation.Select2)
            {
                return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'Select2', @COUNTY_ID ='" + Convert.ToString(_obj_Smhr_Town.COUNTY_ID) + "',@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
            }
            else
            {
                if (_obj_Smhr_Town.TOWN_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'Check', @TOWN_CODE ='" + Convert.ToString(_obj_Smhr_Town.TOWN_CODE) + "',@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_TOWN @Operation = 'Check', @TOWN_CODE ='" + Convert.ToString(_obj_Smhr_Town.TOWN_CODE) + "', @TOWN_ID =" + Convert.ToString(_obj_Smhr_Town.TOWN_ID) + ",@TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID + "'");
            }
        }

        public static bool set_Town(SMHR_TOWN _obj_Smhr_Town)
        {
            bool status = false;
            switch (_obj_Smhr_Town.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TOWN @Operation = 'Insert', @TOWN_CODE='" + _obj_Smhr_Town.TOWN_CODE +
                                        "', @TOWN_DESCRIPTION='" + _obj_Smhr_Town.TOWN_DESCRIPTION +
                                        "', @TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID +
                                        "', @COUNTY_ID = '" + _obj_Smhr_Town.COUNTY_ID +
                                        "', @TOWN_CREATEDBY= " + Convert.ToString(_obj_Smhr_Town.CREATEDBY) +
                                        " , @TOWN_CREATEDDATE='" + _obj_Smhr_Town.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @TOWN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Town.LASTMDFBY) +
                                        " , @TOWN_LASTMDFDATE='" + _obj_Smhr_Town.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_TOWN @Operation = 'Update',@TOWN_ID=" + Convert.ToString(_obj_Smhr_Town.TOWN_ID) +
                                        " , @TOWN_CODE='" + _obj_Smhr_Town.TOWN_CODE +
                                        "', @TOWN_DESCRIPTION='" + _obj_Smhr_Town.TOWN_DESCRIPTION +
                                        "', @TOWN_ORGANISATION_ID = '" + _obj_Smhr_Town.ORGANISATION_ID +
                                        "', @COUNTY_ID = '" + _obj_Smhr_Town.COUNTY_ID +
                                        "', @TOWN_LASTMDFBY =" + Convert.ToString(_obj_Smhr_Town.LASTMDFBY) +
                                        " , @TOWN_LASTMDFDATE='" + _obj_Smhr_Town.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        public static DataTable get_ChartData(string type, string empID, int ORGANISATION_ID)
        {
            if (type.ToUpper() == "ORG")
                return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'ORG',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
            else
            {
                if (empID == string.Empty)
                    return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'EMP',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_ORGCHART @Operation = 'EMP', @EMP_REPORTINGEMPLOYEE='" + empID + "',@ORGANISATION_ID='" + ORGANISATION_ID + "'");
            }
        }

        #region Mission About Us

        public static DataTable get_LoanTerms(SMHR_LOAN_TERMS _obj_Smhr_Loan_Tc)
        {
            if (_obj_Smhr_Loan_Tc.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_LOAN_TC @Operation = 'select',@LOAN_ORGANISATIONID = '" + _obj_Smhr_Loan_Tc.ORGANISATION_ID + "'");
            }
            else
                return new DataTable();
        }

        public static bool set_LoanTerms(SMHR_LOAN_TERMS _obj_Smhr_Loan_Tc)
        {
            bool status = false;
            switch (_obj_Smhr_Loan_Tc.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOAN_TC @Operation = 'Insert', @LOAN_TC='" + _obj_Smhr_Loan_Tc.LOAN_TC +
                                        "', @LOAN_ORGANISATIONID = '" + _obj_Smhr_Loan_Tc.ORGANISATION_ID +
                                        "', @LOAN_CREATEDBY= " + Convert.ToString(_obj_Smhr_Loan_Tc.CREATEDBY) +
                                        " , @LOAN_CREATEDDATE='" + _obj_Smhr_Loan_Tc.CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @LOAN_MODIFIEDBY =" + Convert.ToString(_obj_Smhr_Loan_Tc.LASTMDFBY) +
                                        " , @LOAN_MODIFIEDDATE='" + _obj_Smhr_Loan_Tc.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOAN_TC @Operation = 'Update',@LOAN_TC_ID=" + Convert.ToString(_obj_Smhr_Loan_Tc.LOAN_TERM_ID) +
                                        " , @LOAN_TC='" + _obj_Smhr_Loan_Tc.LOAN_TC +
                                        "', @LOAN_MODIFIEDBY =" + Convert.ToString(_obj_Smhr_Loan_Tc.LASTMDFBY) +
                                        " , @LOAN_MODIFIEDDATE='" + _obj_Smhr_Loan_Tc.LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;

                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region Pension

        public static DataTable get_PensionIntOnRegtUnRegtAmt(SMHR_PENSION_INT_REG_UNREG objPensionInt)
        {
            if (objPensionInt.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_INT_REG_UNREG @OPERATION ='" + objPensionInt.OPERATION + "', @INT_ORGANISATION_ID = " + objPensionInt.ORGANISATION_ID);
            }
            else if (objPensionInt.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_INT_REG_UNREG @OPERATION ='" + objPensionInt.OPERATION +
                                    "', @INT_ORGANISATION_ID = " + objPensionInt.ORGANISATION_ID +
                                    ", @INT_ID = " + objPensionInt.INT_ID);
            }
            else
                return null;
        }

        public static bool set_PensionIntOnRegtUnRegtAcct(SMHR_PENSION_INT_REG_UNREG _objPensionInt)
        {
            bool status = false;
            switch (_objPensionInt.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSION_INT_REG_UNREG @Operation = 'Insert', @INT_PERIOD_ID = " + _objPensionInt.INT_PERIOD_ID +
                                        ", @INT_REGISTERED_AMT = " + _objPensionInt.INT_REGISTERED_AMT +
                                        ", @INT_UNREGISTERED_AMT = " + _objPensionInt.INT_UNREGISTERED_AMT +
                                        ", @INT_ORGANISATION_ID = " + _objPensionInt.ORGANISATION_ID +
                                        ", @INT_CREATEDBY = " + _objPensionInt.CREATEDBY +
                                        ", @INT_CREATEDDATE = '" + _objPensionInt.CREATEDDATE +
                                        "',@INT_NORMAL_AMT = " + _objPensionInt.INT_NORMAL_AMT))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSION_INT_REG_UNREG @Operation = 'Update', @INT_ID = " + _objPensionInt.INT_ID +
                                        ", @INT_PERIOD_ID = " + _objPensionInt.INT_PERIOD_ID +
                                        ", @INT_REGISTERED_AMT = " + _objPensionInt.INT_REGISTERED_AMT +
                                        ", @INT_UNREGISTERED_AMT = " + _objPensionInt.INT_UNREGISTERED_AMT +
                                        ", @INT_ORGANISATION_ID = " + _objPensionInt.ORGANISATION_ID +
                                        ", @INT_MODIFIEDBY = " + _objPensionInt.CREATEDBY +
                                        ", @INT_MODIFIEDDATE = '" + _objPensionInt.CREATEDDATE +
                                        "',@INT_NORMAL_AMT = " + _objPensionInt.INT_NORMAL_AMT))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_PENSION_INT_REG_UNREG @Operation = '" + _objPensionInt.OPERATION +
                                                                                                                                                     "', @INT_PERIOD_ID = " + _objPensionInt.INT_PERIOD_ID +
                                                                                                                                                     ", @INT_REGISTERED_AMT = " + _objPensionInt.INT_REGISTERED_AMT +
                                                                                                                                                     ", @INT_UNREGISTERED_AMT = " + _objPensionInt.INT_UNREGISTERED_AMT +
                                                                                                                                                     ", @INT_ORGANISATION_ID = " + _objPensionInt.ORGANISATION_ID +
                                                                                                                                                     ", @INT_NORMAL_AMT = " + _objPensionInt.INT_NORMAL_AMT)))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_PensionContributionInterest(SMHR_PNCN_INTRST _objPnCn)
        {
            if (_objPnCn.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PNCN_INTRST @OPERATION ='" + _objPnCn.OPERATION + "', @PNCN_ORGANISATION_ID = " + _objPnCn.ORGANISATION_ID);
            }
            else if (_objPnCn.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_PNCN_INTRST @OPERATION ='" + _objPnCn.OPERATION + "', @PNCN_ORGANISATION_ID = " + _objPnCn.ORGANISATION_ID + ", @PNCN_ID = " + _objPnCn.PNCN_ID);
            }
            else
                return null;
        }

        public static bool set_PensionContributionInterest(SMHR_PNCN_INTRST _objPNCNIntrst)
        {
            bool status = false;
            switch (_objPNCNIntrst.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PNCN_INTRST @Operation = 'Insert', @PNCN_PERIOD_ID = " + _objPNCNIntrst.PNCN_PERIOD_ID +
                                        ", @PNCN_QRTR1 = " + _objPNCNIntrst.PNCN_QRTR1 +
                                        ", @PNCN_QRTR2 = " + _objPNCNIntrst.PNCN_QRTR2 +
                                        ", @PNCN_QRTR3 = " + _objPNCNIntrst.PNCN_QRTR3 +
                                        ", @PNCN_QRTR4 = " + _objPNCNIntrst.PNCN_QRTR4 +
                                        ", @PNCN_YEARLY_INTEREST = " + _objPNCNIntrst.PNCN_YEARLY_INTEREST +
                                        ", @PNCN_ORGANISATION_ID = " + _objPNCNIntrst.ORGANISATION_ID +
                                        ", @PNCN_CREATEDBY = " + _objPNCNIntrst.CREATEDBY +
                                        ", @PNCN_CREATEDDATE = '" + _objPNCNIntrst.CREATEDDATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PNCN_INTRST @Operation = 'Update', @PNCN_ID = " + _objPNCNIntrst.PNCN_ID +
                                        ", @PNCN_QRTR1 = " + _objPNCNIntrst.PNCN_QRTR1 +
                                        ", @PNCN_QRTR2 = " + _objPNCNIntrst.PNCN_QRTR2 +
                                        ", @PNCN_QRTR3 = " + _objPNCNIntrst.PNCN_QRTR3 +
                                        ", @PNCN_QRTR4 = " + _objPNCNIntrst.PNCN_QRTR4 +
                                        ", @PNCN_YEARLY_INTEREST = " + _objPNCNIntrst.PNCN_YEARLY_INTEREST +
                                        ", @PNCN_ORGANISATION_ID = " + _objPNCNIntrst.ORGANISATION_ID +
                                        ", @PNCN_MODIFIEDBY = " + _objPNCNIntrst.PNCN_MODIFIEDBY +
                                        ", @PNCN_MODIFIEDDATE = '" + _objPNCNIntrst.PNCN_MODIFIEDDATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Check:
                    if (Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_PNCN_INTRST @Operation = '" + _objPNCNIntrst.OPERATION +
                                                                                                                                                     "', @PNCN_PERIOD_ID = " + _objPNCNIntrst.PNCN_PERIOD_ID +
                                                                                                                                                     ",  @PNCN_ORGANISATION_ID = " + _objPNCNIntrst.ORGANISATION_ID)))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        #region GetReportsData

        public static DataTable get_MedicalServiceProvider(SMHR_INSPECTION objInspection)
        {
            switch (objInspection.MODE)
            {
                case 3:
                    return ExecuteQuery("EXEC RPT_MEDICALSERVICEPROVIDER_INVOICE @MODE= 3, @Organisation =" + objInspection.ORGANISATION_ID +
                                        ",  @FromDate ='" + objInspection.INSPECTION_FROMDATE +
                                        "', @ToDate = '" + objInspection.INSPECTION_TODATE + "'");
                default:
                    return null;
            }
        }

        #endregion

        public static DataTable get_IncrementMonth(SMHR_EMPLOYEE _obj_smhr_employee)
        {
            if (_obj_smhr_employee.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCREMENTMONTHS @OPERATION = '" + _obj_smhr_employee.OPERATION + "',@INCR_INCDATE='" + _obj_smhr_employee.EMP_DATEOFJOIN + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Select_New)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCREMENTMONTHS @OPERATION = '" + _obj_smhr_employee.OPERATION + "'");
            }
            else if (_obj_smhr_employee.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_INCREMENTMONTHS @OPERATION = '" + _obj_smhr_employee.OPERATION + "',@ORGANISATION_ID='" + _obj_smhr_employee.ORGANISATION_ID + "'");
            }
            else
            {
                return null;
            }
        }

        public static DateTime get_EmployeeDoj(SMHR_EMPPENSIONSCHEME _obj_Smhr_EMPPENSIONSCHEME)
        {
            return Convert.ToDateTime(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMP_PENSIONSCHEME @Operation = '" + _obj_Smhr_EMPPENSIONSCHEME.OPERATION +
                                                                                                                                                 "', @PENSIONSCHEME_EMPID = " + _obj_Smhr_EMPPENSIONSCHEME.EMPPENSIONSCHEME_EMPID));
        }

        public static bool get_PensionID(SMHR_EMPPENSIONSCHEME _obj_Smhr_EMPPENSIONSCHEME)
        {
            return Convert.ToBoolean(SqlHelper.ExecuteScalar(ConfigurationManager.ConnectionStrings["connection"].ToString(), CommandType.Text, "EXEC USP_SMHR_EMP_PENSIONSCHEME @Operation = '" + _obj_Smhr_EMPPENSIONSCHEME.OPERATION +
                                                                                                                                                "', @PENSIONSCHEME_EMPID = " + _obj_Smhr_EMPPENSIONSCHEME.EMPPENSIONSCHEME_EMPID +
                                                                                                                                                ", @PENSIONSCHEME_ORGID =" + _obj_Smhr_EMPPENSIONSCHEME.ORGANISATION_ID +
                                                                                                                                                ", @PENSIONSCHEME_PENSIONNO  ='" + _obj_Smhr_EMPPENSIONSCHEME.EMPPENSIONSCHEME_PENSIONID + "'"));
        }

        public static DataTable get_PensionContribution(SMHR_PENSION_CONTRIBUTION objPensionContribution)
        {
            if (objPensionContribution.OPERATION == operation.Get)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_ORGANISATION_ID='" + objPensionContribution.ORGANISATION_ID + "'");
            }
            else if (objPensionContribution.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_EMPTYPE ='" + objPensionContribution.PENSION_EMPTYPE + "',@PENSION_ORGANISATION_ID='" + objPensionContribution.ORGANISATION_ID + "'");
            }
            else if (objPensionContribution.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_CONTRIBUTION_ID ='" + objPensionContribution.PENSION_CONTRIBUTION_ID + "'");
            }
            else if (objPensionContribution.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_ORGANISATION_ID='" + objPensionContribution.ORGANISATION_ID + "'");
            }
            else if (objPensionContribution.OPERATION == operation.Employee)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_ORGANISATION_ID='" + objPensionContribution.ORGANISATION_ID + "',@PENSION_SALALRYSTRUCT_ID='" + objPensionContribution.PENSION_SALALRYSTRUCT_ID + "',@PENSION_BUSINESSUNIT_ID='" + objPensionContribution.BUID + "'");
            }
            else if (objPensionContribution.OPERATION == operation.Available)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = 'GET_EMP_PNSN_DATA',@EMP_ID='" + objPensionContribution.LOGIN_ID + "',@PENSION_EMPTYPE='" + objPensionContribution.PENSION_EMPTYPE + "'");
            }
            else if (objPensionContribution.OPERATION == operation.SELECTEMPLOYEE)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION + "',@PENSION_ORGANISATION_ID='" + objPensionContribution.ORGANISATION_ID + "'");
            }
            else
            {
                return null;
            }
        }

        public static bool set_PensionContribution(SMHR_PENSION_CONTRIBUTION objPensionContribution)
        {
            bool status = false;
            switch (objPensionContribution.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION +
                                        //+ "', @PENSION_EMPTYPE_ID = '" + objPensionContribution.PENSION_EMPTYPE
                                        "', @PENSION_EMPTYPE_ID = " + objPensionContribution.PENSION_EMPTYPE_ID +
                                        ",  @PENSION_EMPTYPE = '" + objPensionContribution.PENSION_EMPTYPE +
                                        "', @PENSION_ORGANISATION_ID = " + objPensionContribution.ORGANISATION_ID +
                                        ",  @PENSION_CREATEDATE = '" + objPensionContribution.CREATEDDATE +
                                        "', @PENSION_CREATEDBY = " + objPensionContribution.CREATEDBY +
                                        ",  @PENSION_EMPLOYEE_VALUE = " + objPensionContribution.PENSION_EMPLOYEE_VALUE +
                                        ",  @PENSION_EMPLOYER_VALUE = " + objPensionContribution.PENSION_EMPLOYER_VALUE))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSION_CONTRIBUTION @OPERATION = '" + objPensionContribution.OPERATION +
                                        "', @PENSION_CONTRIBUTION_ID = " + objPensionContribution.PENSION_CONTRIBUTION_ID +
                                        //+ "', @PENSION_EMPTYPE_ID = '" + objPensionContribution.PENSION_EMPTYPE
                                        ",  @PENSION_EMPTYPE_ID = " + objPensionContribution.PENSION_EMPTYPE_ID +
                                        ",  @PENSION_EMPTYPE = '" + objPensionContribution.PENSION_EMPTYPE +
                                        "', @PENSION_ORGANISATION_ID = " + objPensionContribution.ORGANISATION_ID +
                                        ",  @PENSION_MODIFYDATE = '" + objPensionContribution.LASTMDFDATE +
                                        "', @PENSION_MODIFIEDBY = " + objPensionContribution.LASTMDFBY +
                                        ",  @PENSION_EMPLOYEE_VALUE = " + objPensionContribution.PENSION_EMPLOYEE_VALUE +
                                        ",  @PENSION_EMPLOYER_VALUE = " + objPensionContribution.PENSION_EMPLOYER_VALUE))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static bool set_LoanWithdrawl(SMHR_LOANWITHDRAWL objLoanWithdrawl)
        {
            bool status = false;
            switch (objLoanWithdrawl.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANWITHDRAWL @OPERATION = '" + objLoanWithdrawl.OPERATION +
                                        "', @LOANWITHDRAWL_LAONTRANS_ID = " + objLoanWithdrawl.LOANWITHDRAWL_LAONTRANS_ID +
                                        ",  @LOANWITHDRAWL_LOANNO = '" + objLoanWithdrawl.LOANWITHDRAWL_LOANNO +
                                        "', @LOANWITHDRAWL_AMOUNT = " + objLoanWithdrawl.LOANWITHDRAWL_AMOUNT +
                                        ",  @LOANWITHDRAWL_DATE = '" + objLoanWithdrawl.LOANWITHDRAWL_DATE +
                                        "', @LOANWITHDRAWL_CREATEDBY = " + objLoanWithdrawl.LOANWITHDRAWL_CREATEDBY +
                                        ",  @LOANWITHDRAWL_CREATEDDATE = '" + objLoanWithdrawl.LOANWITHDRAWL_CREATEDDATE +
                                        "', @LOANTRANS_COMMENTS = '" + objLoanWithdrawl.LOANTRANS_COMMENTS + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_LOANWITHDRAWL @OPERATION = '" + objLoanWithdrawl.OPERATION +
                                        "', @LOANWITHDRAWL_LAONTRANS_ID = " + objLoanWithdrawl.LOANWITHDRAWL_LAONTRANS_ID +
                                        ",  @LOANWITHDRAWL_LOANNO = '" + objLoanWithdrawl.LOANWITHDRAWL_LOANNO +
                                        "', @LOANWITHDRAWL_AMOUNT = " + objLoanWithdrawl.LOANWITHDRAWL_AMOUNT +
                                        ",  @LOANWITHDRAWL_DATE = '" + objLoanWithdrawl.LOANWITHDRAWL_DATE +
                                        "', @LOANWITHDRAWL_CREATEDBY = " + objLoanWithdrawl.LOANWITHDRAWL_CREATEDBY +
                                        ",  @LOANWITHDRAWL_CREATEDDATE = '" + objLoanWithdrawl.LOANWITHDRAWL_CREATEDDATE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #region Pension

        public static DataTable get_PensionTransferFunds(SMHR_PENSIONTRANSFERFUNDS objTransferFunds)
        {
            if (objTransferFunds.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSIONTRANSFERFUNDS @OPERATION = '" + objTransferFunds.OPERATION + "', @FUNDS_ORGID = " + objTransferFunds.ORGANISATION_ID);
            }
            else if (objTransferFunds.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSIONTRANSFERFUNDS @OPERATION = '" + objTransferFunds.OPERATION + "', @FUNDS_ID = " + objTransferFunds.FUNDS_ID + ", @FUNDS_ORGID = " + objTransferFunds.ORGANISATION_ID);
            }
            else if (objTransferFunds.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSIONTRANSFERFUNDS @OPERATION = '" + objTransferFunds.OPERATION + "', @FUNDS_EMPID = " + objTransferFunds.FUNDS_EMPID + ", @FUNDS_ORGID = " + objTransferFunds.ORGANISATION_ID);
            }
            else
            {
                return null;
            }
        }

        public static bool set_PensionTransferFunds(SMHR_PENSIONTRANSFERFUNDS objFunds)
        {
            bool status = false;
            switch (objFunds.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSIONTRANSFERFUNDS @OPERATION = '" + objFunds.OPERATION +
                                        "', @FUNDS_EMPID = " + objFunds.FUNDS_EMPID +
                                        ",  @FUNDS_ORGID = " + objFunds.FUNDS_ORGID +
                                        ",  @FUNDS_BUID = " + objFunds.FUNDS_BUID +
                                        ",  @FUNDS_AMOUNT = '" + objFunds.FUNDS_AMOUNT + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSIONTRANSFERFUNDS @OPERATION = '" + objFunds.OPERATION +
                                        "', @FUNDS_EMPID = " + objFunds.FUNDS_EMPID +
                                        ", @FUNDS_AMOUNT = '" + objFunds.FUNDS_AMOUNT + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_PensionFNF(SMHR_EMPLOYEE objEmployee)
        {
            if (objEmployee.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_FNF @Organisation = " + objEmployee.ORGANISATION_ID + ", @BusinessUnit = " + objEmployee.BUID + ", @Employee = " + objEmployee.EMP_ID);
            }
            else
            {
                return null;
            }
        }

        public static bool set_PENSION_WITHDRAWL(SMHR_PENSION_WITHDRAWL objPensionWithdrwl)
        {
            bool status = false;
            switch (objPensionWithdrwl.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PENSION_WITHDRAWL @OPERATION = '" + objPensionWithdrwl.OPERATION +
                                        "', @WITHDRAWL_FFS_ID = " + objPensionWithdrwl.WITHDRAWL_FFS_ID +
                                        ",  @WITHDRAWL_WITHDRAWLAMOUNT = '" + objPensionWithdrwl.WITHDRAWL_WITHDRAWLAMOUNT +
                                        "', @WITHDRAWL_PAYITEMID = " + objPensionWithdrwl.WITHDRAWL_PAYITEMID +
                                        ",  @WITHDRAWL_SETTLEMENTTYPE = " + objPensionWithdrwl.WITHDRAWL_SETTLEMENTTYPE +
                                        ",  @WITHDRAWL_SETTLEMENTDATE = '" + objPensionWithdrwl.WITHDRAWL_SETTLEMENTDATE +
                                        "', @WITHDRAWL_BENEFICIARY = '" + objPensionWithdrwl.WITHDRAWL_BENEFICIARY +
                                        "', @WITHDRAWL_BALANCE = '" + objPensionWithdrwl.WITHDRAWL_BALANCE +
                                        "', @WITHDRAWL_RELATIONTYPE = " + objPensionWithdrwl.WITHDRAWL_RELATIONTYPE +
                                        ",  @WITHDRAWL_WITHDRAWLTYPE = '" + objPensionWithdrwl.WITHDRAWL_WITHDRAWLTYPE + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_PENSION_WITHDRAWL(SMHR_PENSION_WITHDRAWL objPensionWithdrwl)
        {
            if (objPensionWithdrwl.OPERATION == operation.Select)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_WITHDRAWL @OPERATION = '" + objPensionWithdrwl.OPERATION + "', @ORGANISATION_ID = " + objPensionWithdrwl.ORGANISATION_ID);
            }
            else if (objPensionWithdrwl.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_SMHR_PENSION_WITHDRAWL @OPERATION = '" + objPensionWithdrwl.OPERATION +
                                    "', @ORGANISATION_ID = " + objPensionWithdrwl.ORGANISATION_ID +
                                    ",  @WITHDRAWL_ID = " + objPensionWithdrwl.WITHDRAWL_ID);
            }
            else
            {
                return null;
            }
        }

        #endregion

        #region Insurance Relief

        public static bool set_InsTransferFunds(InsTransferFunds _obj_InsTransferFunds)
        {
            bool status = false;
            switch (_obj_InsTransferFunds.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_InsTransferFunds @Operation = 'Insert'," +
                                    "  @TransferFundsEmpID ='" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsEmpID) + "'" +
                                    ", @TransferFundsOrgID = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsOrgID) + "'" +
                                    ", @TransferFundsBUID = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsBUID) + "'" +
                                    ", @TransferFundsAmount = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsAmount) + "'" +
                                    ", @TransferFundsCreatedBy = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsCreatedBy) + "'" +
                                    ", @TransferFundsCreatedDate = '" + Convert.ToString(_obj_InsTransferFunds.TransferFundsCreatedDate) + "'" +
                                    ", @TransferFundsPayItemID = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsPayItemID) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_InsTransferFunds @Operation = 'Update'," +
                                     "  @TransferFundsAmount ='" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsAmount) + "'" +
                                     ", @TransferFundsPayItemID = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsPayItemID) + "'" +
                                     ", @TransferFundsModifiedDate = '" + Convert.ToString(_obj_InsTransferFunds.TransferFundsModifiedDate) + "'" +
                                     ", @TransferFundsModifiedBy = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsModifiedBy) + "'" +
                                     ", @TransferFundsID = '" + Convert.ToInt32(_obj_InsTransferFunds.TransferFundsID) + "'"))

                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        public static DataTable get_InsTransferFunds(InsTransferFunds _obj_InsTransferFunds)
        {
            if (_obj_InsTransferFunds.OPERATION == operation.Get)
            {

                return ExecuteQuery("EXEC USP_InsTransferFunds @Operation = 'Get',@Organisationid = '" + _obj_InsTransferFunds.ORGANISATION_ID + "'");
            }
            else if (_obj_InsTransferFunds.OPERATION == operation.Edit)
            {
                return ExecuteQuery("EXEC USP_InsTransferFunds @Operation = 'Edit',@TransferFundsID = '" + _obj_InsTransferFunds.TransferFundsID + "'");
            }
            else if (_obj_InsTransferFunds.OPERATION == operation.load)
            {
                return ExecuteQuery("EXEC USP_InsTransferFunds @Operation = 'load',@Organisationid = '" + _obj_InsTransferFunds.ORGANISATION_ID + "'");
            }
            else if (_obj_InsTransferFunds.OPERATION == operation.Check)
            {
                return ExecuteQuery("EXEC USP_InsTransferFunds @Operation = 'Check', @TransferFundsEmpID = '" + _obj_InsTransferFunds.TransferFundsEmpID + "',@TransferFundsPayItemID='" + _obj_InsTransferFunds.TransferFundsPayItemID + "'");
            }
            return null;
        }
        #endregion

        public static DataTable get_BusinessUnit()
        {
            throw new NotImplementedException();
        }

        public static DataTable get_BusinessUnit(SMHR_VOTECODEENTRY _obj_smhr_votecodeentry)
        {
            throw new NotImplementedException();
        }

        #region SMHR_PROJECT


        public static DataTable GetProject(SMHR_PROJECT smhrProject)
        {
            if (smhrProject.OPERATION == operation.Select)
            {
                if (smhrProject.PROJECT_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'select',@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'select', @PROJECT_ID =" + Convert.ToString(smhrProject.PROJECT_ID) + ",@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
            }
            else if (smhrProject.OPERATION == operation.Get)
            {
                //return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'Get', @PROJECT_BUSINESSUNIT_ID ='" + Convert.ToString(smhrProject.PROJECT_BUSINESSUNIT_ID) + "',@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
                return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'Get', @PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
            }
            else if (smhrProject.OPERATION == operation.DepenencyCheck)
            {
                return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'Get', @PROJECT_BUSINESSUNIT_ID ='" + Convert.ToString(smhrProject.PROJECT_BUSINESSUNIT_ID) + "',@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
            }
            else
            {
                if (smhrProject.PROJECT_ID.ToString() == "0")
                    return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'Check', @PROJECT_CODE ='" + Convert.ToString(smhrProject.PROJECT_CODE) + "',@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
                else
                    return ExecuteQuery("EXEC USP_SMHR_PROJECT @Operation = 'Check', @PROJECT_CODE ='" + Convert.ToString(smhrProject.PROJECT_CODE) + "', @PROJECT_ID =" + Convert.ToString(smhrProject.PROJECT_ID) + ",@PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID + "'");
            }
        }

        public static bool SetProject(SMHR_PROJECT smhrProject)
        {
            bool status = false;
            switch (smhrProject.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PROJECT @Operation = 'Insert', @PROJECT_CODE='" + smhrProject.PROJECT_CODE +
                                        "', @PROJECT_NAME='" + smhrProject.PROJECT_NAME +
                                        "', @PROJECT_DESC='" + smhrProject.PROJECT_DESC +
                                        "', @PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID +
                                        "', @PROJECT_BUSINESSUNIT_ID = '" + smhrProject.PROJECT_BUSINESSUNIT_ID +
                                        "', @PROJECT_STARTDATE = '" + smhrProject.PROJECT_STARTDATE +
                                        "', @PROJECT_ENDDATE = '" + smhrProject.PROJECT_ENDDATE +
                                        "', @PROJECT_CREATEDBY= " + Convert.ToString(smhrProject.PROJECT_CREATEDBY) +
                                        " , @PROJECT_CREATEDDATE='" + smhrProject.PROJECT_CREATEDDATE.ToString("MM/dd/yyyy") +
                                        "', @PROJECT_LASTMDFBY =" + Convert.ToString(smhrProject.PROJECT_LASTMDFBY) +
                                        ", @PROJECT_LASTMDFDATE='" + smhrProject.PROJECT_LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "' , @PROJECT_ISDELETED=" + smhrProject.PROJECT_ISDELETED + ""))
                        status = true;
                    else
                        status = false;
                    break;
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PROJECT @Operation = 'Update',@PROJECT_ID=" + Convert.ToString(smhrProject.PROJECT_ID) +
                                        " , @PROJECT_CODE='" + smhrProject.PROJECT_CODE +
                                        "', @PROJECT_NAME='" + smhrProject.PROJECT_NAME +
                                        "', @PROJECT_DESC='" + smhrProject.PROJECT_DESC +
                                        "', @PROJECT_ORGANISATION_ID = '" + smhrProject.PROJECT_ORGANISATION_ID +
                                        "', @PROJECT_BUSINESSUNIT_ID = '" + smhrProject.PROJECT_BUSINESSUNIT_ID +
                                        "', @PROJECT_STARTDATE = '" + smhrProject.PROJECT_STARTDATE +
                                        "', @PROJECT_ENDDATE = '" + smhrProject.PROJECT_ENDDATE +
                                        "', @PROJECT_LASTMDFBY =" + Convert.ToString(smhrProject.PROJECT_LASTMDFBY) +
                                        " , @PROJECT_LASTMDFDATE='" + smhrProject.PROJECT_LASTMDFDATE.ToString("MM/dd/yyyy") +
                                        "' , @PROJECT_ISDELETED=" + smhrProject.PROJECT_ISDELETED + ""))
                        status = true;
                    else
                        status = false;

                    break;
                case operation.Delete:
                    if (ExecuteNonQuery("EXEC USP_SMHR_PROJECT @Operation = 'Delete', @PROJECT_ID=" + Convert.ToString(smhrProject.PROJECT_ID) +
                                        " , @PROJECT_LASTMDFBY =" + Convert.ToString(smhrProject.PROJECT_LASTMDFBY) +
                                        " , @PROJECT_LASTMDFDATE='" + smhrProject.PROJECT_LASTMDFDATE.ToString("MM/dd/yyyy") + "'"))
                        status = true;
                    else
                        status = false;
                    break;
                default:
                    break;
            }
            return status;
        }

        #endregion

        public static DataTable GetEmployeePeriod(SMHR_PERIOD prd)
        {
            try
            {
                if (prd.OPERATION == operation.PERIOD)
                {
                    return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation = 'PERIOD',@PERIOD_ORGANISATION_ID = '" + prd.ORGANISATION_ID + "',@PERIOD_ID='" + prd.PERIOD_ID + "'");
                }
                else
                {
                    return new DataTable();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static DataTable get_EmployeeGrades(SMHR_EMPLOYEEGRADE_SLAB _obj_Smhr_EmployeeGrade)
        {
            DataTable dt = new DataTable();
            if (_obj_Smhr_EmployeeGrade.OPERATION == operation.Employeegrades)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @Operation = 'GET_GRADE', @EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID ='" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID + "',@EMPLOYEEGRADE_SLAB_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.ORGANISATION_ID + "',@EMPLOYEEGRADE_SLAB_PERIOD_ID = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_SLAB_PERIOD_ID + "'");
            }
            else if (_obj_Smhr_EmployeeGrade.OPERATION == operation.EmployeeSlabs)
            {
                return ExecuteQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @Operation = 'EMPLOYEESLABS', @EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID =" + Convert.ToString(_obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_SLAB_EMPLOYEEGRADE_ID) + ",@EMPLOYEEGRADE_SLAB_ORGANISATION_ID = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_SLAB_ORGANISATION_ID + "',@EMPLOYEEGRADE_SLAB_PERIOD_ID = '" + _obj_Smhr_EmployeeGrade.EMPLOYEEGRADE_SLAB_PERIOD_ID + "'");
            }
            return dt;
        }

        //public static DataTable get_Period(SMHR_PERIOD prd)
        //{
        //    try
        //    {
        //        if (prd.OPERATION == operation.PERIOD)
        //        {
        //            return ExecuteQuery("EXEC USP_SMHR_PERIOD @Operation = 'PERIOD',@PERIOD_ORGANISATION_ID = '" + prd.ORGANISATION_ID + "',@PERIOD_ID='" + prd.PERIOD_ID + "'");
        //        }
        //        else
        //        {
        //            return new DataTable();
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        throw ex;
        //    }
        //}

        //public static DataTable GetEmployeePeriod(SMHR_EMPLOYEE _obj_smhr_employee)
        //{
        //    throw new NotImplementedException();
        //}

        //public static DataTable get_empperiod(SMHR_EMPLOYEE _obj_smhr_employee)
        //{
        //    throw new NotImplementedException();
        //}

        public static void get_EmployeeGrade_slab(SMHR_EMPLOYEEGRADE_SLAB slabs)
        {

            try
            {
                ExecuteNonQuery("EXEC USP_SMHR_EMPLOYEEGRADE_SLAB @Operation = 'DELETE',@EMPLOYEEGRADE_SLAB_ORGANISATION_ID = '" + slabs.ORGANISATION_ID + "',@EMPLOYEEGRADE_SLAB_ID=" + slabs.EMPLOYEEGRADE_SLAB_ID);
            }

            catch (Exception e)
            {
                throw e;
            }
            // return dt;
        }

        public static DataTable GetData(int orgID, int buID, int prdID, int prdDtlID)
        {
            return ExecuteQuery("EXEC USP_COMESA_MONTHLYPAYSHEET @Organisation = " + orgID + ", @BussinesUnit =" + buID + ",@Period = " + prdID + ",@Periodetails =" + prdDtlID);
        }

        public static DataTable GetGratuityReportSSReportData(int orgID, int buID, int prdDtlID)
        {
            return ExecuteQuery("EXEC RPT_GrauityReportSunSystems @Organisation = " + orgID + ", @Businessunit = " + buID + ",@periodDetails = " + prdDtlID);
        }

        public static DataTable GET_ALLOWANCE(SMHR_ALLOWANCE _obj_smhr_allowance)
        {
            DataTable DT = new DataTable();
            if (_obj_smhr_allowance.OPERATION == operation.Get)
            {
                DT = ExecuteQuery("EXEC USP_SMHR_ALLOWANCE @OPERATION='GET',@ALLOWANCE_ORG_ID="
                    + _obj_smhr_allowance.ALLOWANCE_ORG_ID
                    + ",@ALLOWANCE_PERIOD_ID=" + _obj_smhr_allowance.ALLOWANCE_PERIOD_ID
                    + ",@ALLOWANCE_CONFG_ID=" + _obj_smhr_allowance.ALLOWANCE_CONFG_ID
                    + ",@ALLOWANCE_PAYITEM_ID=" + _obj_smhr_allowance.MODE);
            }
            else if (_obj_smhr_allowance.OPERATION == operation.Select)
            {
                DT = ExecuteQuery("EXEC USP_SMHR_ALLOWANCE @OPERATION='SELECT',@ALLOWANCE_ORG_ID=" + _obj_smhr_allowance.ALLOWANCE_ORG_ID + ",@ALLOWANCE_CONFG_ID=" + _obj_smhr_allowance.ALLOWANCE_CONFG_ID);
            }
            else if (_obj_smhr_allowance.OPERATION == operation.Check)
            {
                DT = ExecuteQuery("EXEC USP_SMHR_ALLOWANCE @OPERATION='CHECK',@ALLOWANCE_ORG_ID=" + _obj_smhr_allowance.ORGANISATION_ID +
                    ",@ALLOWANCE_PERIOD_ID=" + _obj_smhr_allowance.ALLOWANCE_PERIOD_ID + ",@ALLOWANCE_EMPLOYEEGRADE_ID=" + _obj_smhr_allowance.ALLOWANCE_EMPLOYEEGRADE_ID
                    + ",@ALLOWANCE_CONFG_ID=" + _obj_smhr_allowance.ALLOWANCE_CONFG_ID);
            }
            return DT;

        }

        public static bool Set_Allowance(SMHR_ALLOWANCE _obj_smhr_allowance)
        {
            bool status = false;

            switch (_obj_smhr_allowance.OPERATION)
            {
                case operation.Insert:
                    List<SqlParameter> lstSqlparams = new List<SqlParameter>();
                    lstSqlparams.Add(new SqlParameter("@OPERATION", "INSERT"));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_CREATEDBY", _obj_smhr_allowance.ALLOWANCE_CREATEDBY));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_CREATEDDATE", _obj_smhr_allowance.ALLOWANCE_CREATEDDATE.ToString("MM/dd/yyyy")));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_LASTMDFBY", _obj_smhr_allowance.ALLOWANCE_LASTMDFBY));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_LASTMDFDATE", _obj_smhr_allowance.ALLOWANCE_LASTMDFDATE.ToString("MM/dd/yyyy")));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_DATA", _obj_smhr_allowance.ALLOWANCE_GRIDDATA));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_PERIOD_ID", _obj_smhr_allowance.ALLOWANCE_PERIOD_ID));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_ORG_ID", _obj_smhr_allowance.ALLOWANCE_ORG_ID));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_CONFG_ID", _obj_smhr_allowance.ALLOWANCE_CONFG_ID));
                    lstSqlparams.Add(new SqlParameter("@ALLOWANCE_PAYITEM_ID", _obj_smhr_allowance.MODE));
                    int result = ExecuteNonQuery("USP_SMHR_ALLOWANCE", lstSqlparams.ToArray());
                    if (result > 0)
                        status = true;
                    else
                        status = false;
                    break;
            }

            return status;
        }

        #region SMHR_EDU_ALLOWANCE
        public static DataTable GetEduAllowance(SMHR_EDU_ALLOWANCE _obj_SMHR_EDU_ALLOWANCE)
        {
            DataTable dt = new DataTable();
            try
            {
                if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.load)
                {
                    if (_obj_SMHR_EDU_ALLOWANCE.MODE == 1)
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'LOAD', @Mode = 1 ,@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ", @EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID);
                    else
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'LOAD',@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + "");
                }
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.LOADFINALIZE)
                {
                    if (_obj_SMHR_EDU_ALLOWANCE.MODE == 11)
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'LOADFINALIZE', @Mode = 11 ,@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ", @EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID);
                    else
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'LOADFINALIZE',@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + "");
                }

                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Empty)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'empty',@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ", @EDU_EMP_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID);
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Get)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = '" + _obj_SMHR_EDU_ALLOWANCE.OPERATION + "', @EDU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ID);
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.check)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'checkBalance',@EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID + ",@EDU_EMPFMDTL_ID = " +
                            _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID + ",@EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ",@EDU_PERIOD_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID + "");
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Count)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'sum',@EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID + ",@EDU_EMPFMDTL_ID = " +
                            _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID + ",@EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ",@EDU_PERIOD_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID + "");
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.CurrencyRate)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'CURR_RATE',@EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID + "");
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Chk)
                {
                    if (_obj_SMHR_EDU_ALLOWANCE.MODE == 2)
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'BALANCE', @EDU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ID +
                                ", @EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID + ", @EDU_EMPLOYEEGRADE_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPLOYEEGRADE_ID +
                                ", @EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ", @EDU_EMPFMDTL_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID +
                                ", @EDU_PERIOD_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID);
                    else
                        dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'BALANCE1', @EDU_EMP_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID +
                                ", @EDU_EMPLOYEEGRADE_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPLOYEEGRADE_ID +
                                ", @EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ", @EDU_EMPFMDTL_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID +
                                ", @EDU_PERIOD_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID);
                }
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Check_Emp)
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Operation = 'checkapp',@EDU_ORG_ID = " + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + ",@EDU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ID + "");
                else if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.CHECKDUPLICATE)
                {
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'CHECKDUPLICATE',   @EDU_EMP_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID +
                                                                                                  ",@EDU_ORG_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID +
                                                                                                  ",@EDU_BU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BU_ID +
                                                                                                  ",@EDU_DEPT_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_DEPT_ID +
                                                                                                  ",@EDU_EMPLOYEEGRADE_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPLOYEEGRADE_ID +
                                                                                                  ",@EDU_ALLOWANCE_DEPENDENT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ALLOWANCE_DEPENDENT +
                                                                                                  ",@EDU_EMPFMDTL_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID +
                                                                                                  ",@EDU_BAL_AVL=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BAL_AVL +
                                                                                                  ",@EDU_EXPEN_NAME='" + _obj_SMHR_EDU_ALLOWANCE.EDU_EXPEN_NAME + "'" +
                                                                                                  ",@EDU_CLAIM_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CLAIM_AMT +
                                                                                                  ",@EDU_RECPT_NO=" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_NO +
                                                                                                  ",@EDU_RECPT_DATE='" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_DATE + "'" +
                                                                                                  ",@EDU_UPLOAD_RECPTDOC='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_RECPTDOC + "'" +
                                                                                                  ",@EDU_UPLOAD_ATTDCERT='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_ATTDCERT + "'" +
                                                                                                  ",@EDU_IS_FINALIZE=" + _obj_SMHR_EDU_ALLOWANCE.EDU_IS_FINALIZE +
                                                                                                  ",@EDU_CREATEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CREATEDBY +
                                                                                                  ",@EDU_PERIOD_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID +
                                                                                                  ",@EDU_STATUS=" + _obj_SMHR_EDU_ALLOWANCE.EDU_STATUS +
                                                                                                  ",@EDU_FINAL_AMNT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_FINAL_AMNT +
                                                                                                  ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID +
                                                                                                  ",@EDU_CURR_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_AMT +
                                                                                                  ",@EDU_CONVERION_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CONVERION_AMT + "");

                }
                else
                    dt = ExecuteQuery("EXEC USP_SMHR_EDU_ALLOWANCE @Mode = '0',@EDU_ORG_ID =" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID + "");
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dt;
        }
        public static DataTable GetFinalRuledAmnt(string alctdAmnt, string balAmnt, string claimAmnt, string type)
        {
            return ExecuteQuery("EXEC USP_SMHR_CLAIM_RULE_AMNT @ALCTD_AMNT = " + alctdAmnt + ", @BAL = " + balAmnt + ", @CLM_AMNT = " + claimAmnt + ", @CLAIM_TYPE = " + type);
        }
        public static bool SetEduAllowance(SMHR_EDU_ALLOWANCE _obj_SMHR_EDU_ALLOWANCE)
        {
            bool status = false;

            if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Insert)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'Insert',   @EDU_EMP_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID +
                                                                                        ",@EDU_ORG_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID +
                                                                                        ",@EDU_BU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BU_ID +
                                                                                        ",@EDU_DEPT_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_DEPT_ID +
                                                                                        ",@EDU_EMPLOYEEGRADE_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPLOYEEGRADE_ID +
                                                                                        ",@EDU_ALLOWANCE_DEPENDENT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ALLOWANCE_DEPENDENT +
                                                                                        ",@EDU_EMPFMDTL_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID +
                                                                                        ",@EDU_BAL_AVL=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BAL_AVL +
                                                                                        ",@EDU_EXPEN_NAME='" + _obj_SMHR_EDU_ALLOWANCE.EDU_EXPEN_NAME + "'" +
                                                                                        ",@EDU_CLAIM_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CLAIM_AMT +
                                                                                        ",@EDU_RECPT_NO=" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_NO +
                                                                                        ",@EDU_RECPT_DATE='" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_DATE + "'" +
                                                                                        ",@EDU_UPLOAD_RECPTDOC='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_RECPTDOC + "'" +
                                                                                        ",@EDU_UPLOAD_ATTDCERT='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_ATTDCERT + "'" +
                                                                                        ",@EDU_IS_FINALIZE=" + _obj_SMHR_EDU_ALLOWANCE.EDU_IS_FINALIZE +
                                                                                        ",@EDU_CREATEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CREATEDBY +
                                                                                        ",@EDU_PERIOD_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID +
                                                                                        ",@EDU_STATUS=" + _obj_SMHR_EDU_ALLOWANCE.EDU_STATUS +
                                                                                        ",@EDU_FINAL_AMNT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_FINAL_AMNT +
                                                                                        ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID +
                                                                                        ",@EDU_CURR_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_AMT +
                                                                                        ",@EDU_CONVERION_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CONVERION_AMT +
                                                                                        ",@EDU_ISRULEID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ISRULEID + ""))
                    status = true;
            }

            if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.Update)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'Update',   @EDU_EMP_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMP_ID +
                                                                                        ",@EDU_ORG_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ORG_ID +
                                                                                        ",@EDU_BU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BU_ID +
                                                                                        ",@EDU_DEPT_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_DEPT_ID +
                                                                                        ",@EDU_EMPLOYEEGRADE_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPLOYEEGRADE_ID +
                                                                                        ",@EDU_ALLOWANCE_DEPENDENT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ALLOWANCE_DEPENDENT +
                                                                                        ",@EDU_EMPFMDTL_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_EMPFMDTL_ID +
                                                                                        ",@EDU_BAL_AVL=" + _obj_SMHR_EDU_ALLOWANCE.EDU_BAL_AVL +
                                                                                        ",@EDU_EXPEN_NAME='" + _obj_SMHR_EDU_ALLOWANCE.EDU_EXPEN_NAME + "'" +
                                                                                        ",@EDU_CLAIM_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CLAIM_AMT +
                                                                                        ",@EDU_RECPT_NO=" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_NO +
                                                                                        ",@EDU_RECPT_DATE='" + _obj_SMHR_EDU_ALLOWANCE.EDU_RECPT_DATE + "'" +
                                                                                        ",@EDU_UPLOAD_RECPTDOC='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_RECPTDOC + "'" +
                                                                                        ",@EDU_UPLOAD_ATTDCERT='" + _obj_SMHR_EDU_ALLOWANCE.EDU_UPLOAD_ATTDCERT + "'" +
                                                                                        ",@EDU_IS_FINALIZE=" + _obj_SMHR_EDU_ALLOWANCE.EDU_IS_FINALIZE +
                                                                                        ",@EDU_LASTMDFBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_LASTMDFBY +
                                                                                        ",@EDU_PERIOD_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_PERIOD_ID +
                                                                                        ",@EDU_STATUS=" + _obj_SMHR_EDU_ALLOWANCE.EDU_STATUS +
                                                                                        ",@EDU_FINAL_AMNT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_FINAL_AMNT +
                                                                                        ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID +
                                                                                        ",@EDU_CURR_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_AMT +
                                                                                        ",@EDU_CONVERION_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CONVERION_AMT +
                                                                                        ",@EDU_ISRULEID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ISRULEID + ""))
                    status = true;
            }
            if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.EDUAPPROVE)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'EDUAPPROVE', @EDU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ID + ",@EDU_LASTMDFBY=" +
                                                             _obj_SMHR_EDU_ALLOWANCE.EDU_LASTMDFBY + ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID +
                                                             ",@EDU_CURR_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_AMT + ",@EDU_CONVERION_AMT=" +
                                                              _obj_SMHR_EDU_ALLOWANCE.EDU_CONVERION_AMT +
                                                                                       ", @EDU_CONFIRMEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CONFIRMEDBY +
                                                                                       ", @EDU_CREATEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CREATEDBY +
                                                                                        ""))
                    status = true;
            }
            if (_obj_SMHR_EDU_ALLOWANCE.OPERATION == operation.EDUFINALIZE)
            {
                if (ExecuteNonQuery("EXEC USP_SMHR_EDU_ALLOWANCE @OPERATION = 'EDUFINALIZE', @EDU_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_ID + ",@EDU_LASTMDFBY=" +
                                                   _obj_SMHR_EDU_ALLOWANCE.EDU_LASTMDFBY + ",@EDU_CURR_ID=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_ID +
                                                   ",@EDU_CURR_AMT=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CURR_AMT + ",@EDU_CONVERION_AMT=" +
                                                     _obj_SMHR_EDU_ALLOWANCE.EDU_CONVERION_AMT +
                                                                                        ",@EDU_APPROVEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_APPROVEDBY +
                                                                                        ", @EDU_CREATEDBY=" + _obj_SMHR_EDU_ALLOWANCE.EDU_CREATEDBY +
                                                                                        ""))
                    status = true;
            }
            return status;
        }
        #endregion



        public static bool SetOT(SMHR_EMPOTTRANS _obj_smhr_ottrans)
        {
            //DataTable dt = new DataTable();
            bool status = false;


            // (_obj_smhr_ottrans.OPERATION == operation.Insert)
            //  {
            //eturn
            switch (_obj_smhr_ottrans.OPERATION)
            {
                case operation.Insert:
                    if (ExecuteNonQuery("EXEC USP_SMHR_OTCALC @operation='insert',@BUID=" + _obj_smhr_ottrans.BUID
                                                                                     + ", @OTCALC_EMPID=" + _obj_smhr_ottrans.EMPOTTRANS_EMPID
                                                                                        + ",@OTCALC_WORKINGHOURS=" + _obj_smhr_ottrans.EMPOTTRANS_HOURS
                                                                                        + ",@OTCALC_STATUS=" + _obj_smhr_ottrans.EMPOTTRANS_STATUS
                                                                                        + ",@OTCALC_CREATEDBY=" + _obj_smhr_ottrans.CREATEDBY
                                                                                        + ",@OTCALC_LASTMDFBY=" + _obj_smhr_ottrans.LASTMDFBY
                                                                                        + ",@OTCALC_ORG_ID=" + _obj_smhr_ottrans.ORGANISATION_ID
                                                                                        + ",@OTCALC_DATE='" + Convert.ToDateTime(_obj_smhr_ottrans.EMPOTTRANS_DATE)
                                                                                        + "',@OTCALC_ACTUALHOURS=" + _obj_smhr_ottrans.OTCALC_ACTUALHOURS
                                                                                        + ",@OTCALC_COMMENTS='" + _obj_smhr_ottrans.OTCALC_COMMENTS + "'"))
                        status = true;
                    else
                        status = false;
                    break;


                //f (_obj_smhr_ottrans.OPERATION == operation.Update)
                //
                //eturn
                case operation.Update:
                    if (ExecuteNonQuery("EXEC USP_SMHR_OTCALC @operation='update',@OTCALC_ID=" + _obj_smhr_ottrans.EMPOTTRANS_ID
                                                                                      + ", @OTCALC_LASTMDFBY=" + _obj_smhr_ottrans.LASTMDFBY
                                                                                         + ",@OTCALC_DATE='" + Convert.ToDateTime(_obj_smhr_ottrans.EMPOTTRANS_DATE)
                                                                                         + "',@OTCALC_ACTUALHOURS=" + _obj_smhr_ottrans.OTCALC_ACTUALHOURS
                                                                                         + ",@OTCALC_WORKINGHOURS=" + _obj_smhr_ottrans.EMPOTTRANS_HOURS
                                                                                         + ",@OTCALC_COMMENTS='" + _obj_smhr_ottrans.OTCALC_COMMENTS + "'"))

                        status = true;
                    else
                        status = false;
                    break;

                case operation.Update_New:
                    if (ExecuteNonQuery("EXEC USP_SMHR_OTCALC @operation='update_new',@OTCALC_ID=" + _obj_smhr_ottrans.EMPOTTRANS_ID
                                                                                      + ",@OTCALC_STATUS=" + _obj_smhr_ottrans.EMPOTTRANS_STATUS
                                                                                      + ",@OTCALC_LASTMDFBY=" + _obj_smhr_ottrans.LASTMDFBY + ""))
                        status = true;
                    else
                        status = false;
                    break;

            }
            return status;

        }

        //public static DataTable GetOT(SMHR_EMPOTTRANS _obj_smhr_ottrans)
        //{
        //    if (_obj_smhr_ottrans.OPERATION == operation.Select)
        //    {
        //        if (_obj_smhr_ottrans.EMPOTTRANS_ID.ToString() == "0")
        //            return ExecuteQuery("EXEC USP_SMHR_OTCALC @Operation = 'select',@OTCALC_ID= '" + _obj_smhr_ottrans.EMPOTTRANS_ID + "'");
        //        else
        //            return ExecuteQuery("EXEC USP_SMHR_OTCALC @Operation = 'select', @OTCALC_ID ='" + Convert.ToString(_obj_smhr_ottrans.EMPOTTRANS_ID) + "'");
        //    }
        //}

        public static DataTable getstatus(SMHR_EMPOTTRANS _obj_smhr_ottrans)
        {
            DataTable dt = new DataTable();

            if (_obj_smhr_ottrans.OPERATION == operation.Empty)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_OTCALC @Operation = 'empty',@OTCALC_ORG_ID='" + _obj_smhr_ottrans.ORGANISATION_ID + "'");
            }
            if (_obj_smhr_ottrans.OPERATION == operation.Empty1)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_OTCALC @Operation = 'empty1',@OTCALC_ORG_ID='" + _obj_smhr_ottrans.ORGANISATION_ID + "',@OTCALC_EMPID='" + _obj_smhr_ottrans.EMPOTTRANS_EMPID + "'");
            }
            return dt;
        }

        public static DataTable get_EmployeeStatus(SMHR_EMPOTTRANS _obj_ot)
        {
            DataTable dt = new DataTable();

            if (_obj_ot.OPERATION == operation.New)
            {
                dt = ExecuteQuery("EXEC USP_SMHR_OTCALC @Operation = 'New',@OTCALC_ORG_ID='" + _obj_ot.ORGANISATION_ID + "'");
            }
            return dt;
        }



        /*  public static bool get_EmpPromotion(SMHR_EMPPROMOTIONS _obj_Smhr_Promotions, SMHR_EMPPROMOTIONS _obj_Smhr_Promotions_2)
          {
              //bool status;
              if(_obj_Smhr_Promotions.OPERATION==operation.Check)
              {
                  dt = ExecuteQuery("EXEC USP_SMHR_EMPPROMOTION @operation='Check PayRoll',@EMPPRO_EMPID=" + _obj_Smhr_Promotions.EMPPRO_EMPID + ",@EMPPRO_PERIOD=" + _obj_Smhr_Promotions.EMPPRO_PERIOD + ",@ORGANISATION_ID=" + _obj_Smhr_Promotions.ORGANISATION_ID+ "");
              }
              //return status;


              if (dt.Rows.Count > 0)
              {
                  if (dtData.Rows[0][0].ToString() == "0")
                      status = false;
                  else
                      status = true;
              }
           
              break;
          }*/

        #region SMHR_AuditTrail

        public static DataTable GetAuditTrailData()
        {
            return ExecuteQuery("SELECT * FROM SMHR_AuditTrail");
        }

        #endregion
    }
}